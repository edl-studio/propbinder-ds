{
    "pipes": [],
    "interfaces": [
        {
            "name": "ExampleOption",
            "id": "interface-ExampleOption-dec9a5e539d94a602cec05e538207ff6634b65d19c57f7e0ee056c54d6ef45f43b7c94d2bdb57eb2d820f1fe8c9d4b61301f4c55746fe8e48653f914e30ecc87",
            "file": "src/app/components/ui/select/ds-select.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata, componentWrapperDecorator } from '@storybook/angular';\nimport { FormsModule } from '@angular/forms';\nimport { DsSelectComponent, DsSelectOption } from './ds-select';\n\ninterface ExampleOption {\n  id: string;\n  name: string;\n}\n\nconst meta: Meta<DsSelectComponent> = {\n  title: 'Primitives/Select',\n  component: DsSelectComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [FormsModule],\n    }),\n    componentWrapperDecorator(\n      (story) => `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px;\">${story}</div></div>`\n    )\n  ],\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      story: {\n        inline: true,\n        iframeHeight: 100,\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'error', 'warning', 'success'],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    required: {\n      control: 'boolean',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<DsSelectComponent>;\n\nconst simpleOptions: DsSelectOption[] = [\n  { id: '1', label: 'Option 1', value: 1 },\n  { id: '2', label: 'Option 2', value: 2 },\n  { id: '3', label: 'Option 3', value: 3 },\n  { id: '4', label: 'Option 4', value: 4 },\n];\n\nconst groupedOptions: DsSelectOption[] = [\n  { id: '1', label: 'Apple', value: 'apple', group: 'Fruits' },\n  { id: '2', label: 'Banana', value: 'banana', group: 'Fruits' },\n  { id: '3', label: 'Orange', value: 'orange', group: 'Fruits' },\n  { id: '4', label: 'Carrot', value: 'carrot', group: 'Vegetables' },\n  { id: '5', label: 'Broccoli', value: 'broccoli', group: 'Vegetables' },\n  { id: '6', label: 'Potato', value: 'potato', group: 'Vegetables' },\n];\n\nexport const Default: Story = {\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'default',\n    disabled: false,\n    required: false,\n  },\n};\n\nexport const WithGroups: Story = {\n  args: {\n    options: groupedOptions,\n    placeholder: 'Select food',\n    variant: 'default',\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    disabled: true,\n  },\n};\n\nexport const Error: Story = {\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'error',\n  },\n};\n\nexport const Warning: Story = {\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'warning',\n  },\n};\n\nexport const Success: Story = {\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'success',\n  },\n};\n\nexport const WithDisabledOptions: Story = {\n  args: {\n    options: [\n      { id: '1', label: 'Option 1', value: 1 },\n      { id: '2', label: 'Option 2', value: 2, disabled: true },\n      { id: '3', label: 'Option 3', value: 3 },\n      { id: '4', label: 'Option 4', value: 4, disabled: true },\n    ],\n    placeholder: 'Select an option',\n  },\n};\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppShellShowcaseComponent",
            "id": "component-AppShellShowcaseComponent-fe10674e87e27c922005e666e9a542ea4fa920db439c19c2192124cf16dac2bab66a97ab536ecf8dafc890a608fae1e27770f65fd58ea2225d43a508f68aa81d",
            "file": "src/app/pages/app-shell-showcase.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shell-showcase",
            "styleUrls": [],
            "styles": [
                "\n    .app-shell-demo {\n      display: flex;\n      height: 600px;\n      background: #f8f9fa;\n      border-radius: 8px;\n      overflow: hidden;\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n    \n    :host(.tw-h-screen) .app-shell-demo {\n      height: 100vh;\n      border-radius: 0;\n      box-shadow: none;\n    }\n    \n    .demo-sidebar {\n      flex-shrink: 0;\n      transition: width 0.3s ease;\n    }\n    \n    .demo-main {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      min-width: 0;\n    }\n    \n    .demo-topbar {\n      flex-shrink: 0;\n    }\n    \n    .demo-content {\n      flex: 1;\n      overflow: auto;\n      background: white;\n    }\n    \n    .demo-content-inner {\n      padding: 24px;\n    }\n    \n    .demo-title {\n      margin: 0 0 8px 0;\n      font-size: 24px;\n      font-weight: 600;\n      color: #1a1a1a;\n    }\n    \n    .demo-description {\n      margin: 0 0 24px 0;\n      color: #666;\n      line-height: 1.5;\n    }\n    \n    .demo-metrics {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 16px;\n      margin-bottom: 24px;\n      padding: 16px;\n      background: #f8f9fa;\n      border-radius: 6px;\n    }\n    \n    .demo-metric {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n    \n    .demo-metric-label {\n      font-size: 12px;\n      font-weight: 500;\n      color: #666;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n    \n    .demo-metric-value {\n      font-size: 14px;\n      font-weight: 500;\n      color: #1a1a1a;\n    }\n    \n    .demo-actions {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n    \n    .demo-button {\n      padding: 8px 16px;\n      background: #007bff;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n    \n    .demo-button:hover {\n      background: #0056b3;\n    }\n    \n    .demo-button:active {\n      background: #004085;\n    }\n    \n    .full-page-back-button {\n      position: absolute;\n      top: 16px;\n      left: 16px;\n      z-index: 1000;\n    }\n    \n    .back-button {\n      padding: 8px 16px;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      border: none;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(4px);\n    }\n    \n    .back-button:hover {\n      background: rgba(0, 0, 0, 0.9);\n      transform: translateY(-1px);\n    }\n    \n    .back-button:active {\n      transform: translateY(0);\n    }\n  "
            ],
            "template": "<div class=\"app-shell-demo\">\n  <!-- Back Button for Full Page Mode -->\n  @if (fullPageMode) {\n    <div class=\"full-page-back-button\">\n      <button\n        (click)=\"backToMain.emit()\"\n        class=\"back-button\"\n        title=\"Back to Components Demo\"\n      >\n        ‚Üê Back\n      </button>\n    </div>\n  }\n\n  <!-- Sidebar -->\n  <ds-sidebar\n    [groups]=\"sidebarGroups\"\n    [activeItemId]=\"activeItemId()\"\n    [collapsed]=\"sidebarCollapsed()\"\n    [showGlobalAction]=\"true\"\n    [globalActionLabel]=\"'Create New'\"\n    [globalActionIcon]=\"'remixAddLine'\"\n    [ariaLabel]=\"'Main navigation'\"\n    (itemSelected)=\"onItemSelected($event)\"\n    (collapsedChange)=\"onSidebarCollapsedChange($event)\"\n    (globalActionClick)=\"onGlobalActionClick()\"\n    class=\"demo-sidebar\"\n    [class.demo-sidebar--collapsed]=\"sidebarCollapsed()\"\n  />\n\n  <!-- Main Content Area -->\n  <div class=\"demo-main\">\n    <!-- Header - List View -->\n    @if (isListView()) {\n      <ds-topbar\n        [pageTitle]=\"currentPageTitle()\"\n        [iconName]=\"currentPageIcon()\"\n        [userInitials]=\"'JD'\"\n        [showFirstAction]=\"true\"\n        [firstActionIcon]=\"'remixNotification3Line'\"\n        [firstActionLabel]=\"'Notifications'\"\n        [showSecondAction]=\"true\"\n        [secondActionIcon]=\"'remixSettings3Line'\"\n        [secondActionLabel]=\"'Settings'\"\n        [showBreadcrumbs]=\"showBreadcrumbs()\"\n        [breadcrumbItems]=\"currentBreadcrumbs()\"\n        class=\"demo-topbar\"\n      />\n    }\n\n    <!-- Header - Detail View -->\n    @if (isDetailView()) {\n      <ds-topbar\n        [pageTitle]=\"currentPageTitle()\"\n        [iconName]=\"currentPageIcon()\"\n        [userInitials]=\"'JD'\"\n        [showFirstAction]=\"true\"\n        [firstActionIcon]=\"'remixNotification3Line'\"\n        [firstActionLabel]=\"'Notifications'\"\n        [showSecondAction]=\"true\"\n        [secondActionIcon]=\"'remixSettings3Line'\"\n        [secondActionLabel]=\"'Settings'\"\n        [showBreadcrumbs]=\"true\"\n        [breadcrumbItems]=\"currentBreadcrumbs()\"\n        class=\"demo-topbar\"\n      />\n      <ds-header-details\n        [title]=\"currentEntityTitle()\"\n        [showPrimaryAction]=\"true\"\n        [primaryActionText]=\"'Edit'\"\n        [primaryActionIcon]=\"'remixEditLine'\"\n        [primaryActionVariant]=\"'primary'\"\n        [showSecondaryAction]=\"true\"\n        [secondaryActionText]=\"'Share'\"\n        [secondaryActionIcon]=\"'remixShareLine'\"\n        [secondaryActionVariant]=\"'secondary'\"\n        [showMoreActions]=\"true\"\n        class=\"demo-header-details\"\n      >\n        <div slot=\"details\">\n          @for (item of currentEntityDetails(); track item.label) {\n            <ds-data-item\n              [label]=\"item.label\"\n              [value]=\"item.value\"\n              [layout]=\"'vertical'\"\n              [valueType]=\"item.valueType\"\n              [iconName]=\"item.iconName\"\n              [avatarType]=\"item.avatarType\"\n              [avatarInitials]=\"item.avatarInitials\"\n              [badgeVariant]=\"item.badgeVariant\"\n              [badgeContent]=\"item.badgeContent\"\n              [badgeContentType]=\"item.badgeContentType\"\n            />\n          }\n        </div>\n      </ds-header-details>\n    }\n\n    <!-- Content Area -->\n    <main class=\"demo-content\">\n      <div class=\"demo-content-inner\">\n        @if (isListView()) {\n          <h2 class=\"demo-title\">{{ currentPageTitle() }} List</h2>\n          <p class=\"demo-description\">\n            This is where the list of {{ currentPageTitle().toLowerCase() }} would be displayed.\n            Using ds-topbar component for list views.\n          </p>\n        } @else {\n          <h2 class=\"demo-title\">{{ currentEntityTitle() }}</h2>\n          <p class=\"demo-description\">\n            This is where the detailed content for {{ currentEntityTitle() }} would be displayed.\n            Using ds-header-details component with metadata above.\n          </p>\n        }\n\n        <div class=\"demo-metrics\">\n          <div class=\"demo-metric\">\n            <span class=\"demo-metric-label\">Active Item:</span>\n            <span class=\"demo-metric-value\">{{ activeItemId() || 'None' }}</span>\n          </div>\n          <div class=\"demo-metric\">\n            <span class=\"demo-metric-label\">View Type:</span>\n            <span class=\"demo-metric-value\">{{ isDetailView() ? 'Detail View (ds-header-details)' : 'List View (ds-topbar)' }}</span>\n          </div>\n          <div class=\"demo-metric\">\n            <span class=\"demo-metric-label\">Sidebar State:</span>\n            <span class=\"demo-metric-value\">{{ sidebarCollapsed() ? 'Collapsed' : 'Expanded' }}</span>\n          </div>\n          <div class=\"demo-metric\">\n            <span class=\"demo-metric-label\">Breadcrumbs:</span>\n            <span class=\"demo-metric-value\">{{ showBreadcrumbs() ? 'Enabled' : 'Disabled' }}</span>\n          </div>\n        </div>\n\n        <div class=\"demo-actions\">\n          <button\n            class=\"demo-button\"\n            (click)=\"toggleSidebar()\"\n          >\n            {{ sidebarCollapsed() ? 'Expand' : 'Collapse' }} Sidebar\n          </button>\n          <button\n            class=\"demo-button\"\n            (click)=\"toggleBreadcrumbs()\"\n          >\n            {{ showBreadcrumbs() ? 'Hide' : 'Show' }} Breadcrumbs\n          </button>\n        </div>\n      </div>\n    </main>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "fullPageMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 364,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "backToMain",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 365,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeItemId",
                    "defaultValue": "signal<string>('dashboard')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 370,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "currentBreadcrumbs",
                    "defaultValue": "signal<TopbarBreadcrumbItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 482,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "currentEntityDetails",
                    "defaultValue": "computed(() => {\n    const activeId = this.activeItemId();\n    const entityInfo = this.entityDetailsMap[activeId];\n    return entityInfo?.details || [];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 500,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "currentEntityTitle",
                    "defaultValue": "computed(() => {\n    const activeId = this.activeItemId();\n    const entityInfo = this.entityDetailsMap[activeId];\n    return entityInfo?.title || 'Entity Details';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 494,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "currentPageIcon",
                    "defaultValue": "signal<string>('remixLayout4Line')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 373,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "currentPageTitle",
                    "defaultValue": "signal<string>('Dashboard')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 372,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "entityDetailsMap",
                    "defaultValue": "{\n    'property-detail': {\n      title: 'Sunset Boulevard Apartments',\n      details: [\n        { label: 'Property Type', value: 'Residential', valueType: 'icon-text', iconName: 'remixHome4Line' },\n        { label: 'Status', value: 'Active', valueType: 'badge', badgeVariant: 'success', badgeContent: 'Active', badgeContentType: 'text' },\n        { label: 'Owner', value: 'Sarah Johnson', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'SJ' },\n        { label: 'Units', value: '24 units', valueType: 'text' },\n        { label: 'Built Year', value: '1995', valueType: 'text' },\n        { label: 'Address', value: '1234 Sunset Blvd, Los Angeles, CA', valueType: 'icon-text', iconName: 'remixMapPin2Line' },\n      ]\n    },\n    'lease-detail': {\n      title: 'Lease Agreement #LA-2024-001',\n      details: [\n        { label: 'Tenant', value: 'Michael Chen', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'MC' },\n        { label: 'Property', value: 'Sunset Blvd Apt 4B', valueType: 'icon-text', iconName: 'remixBuildingLine' },\n        { label: 'Status', value: 'Active', valueType: 'badge', badgeVariant: 'success', badgeContent: 'Active', badgeContentType: 'text' },\n        { label: 'Rent Amount', value: '$2,400/month', valueType: 'text' },\n        { label: 'Lease Term', value: '12 months', valueType: 'text' },\n        { label: 'Start Date', value: 'Jan 1, 2024', valueType: 'text' },\n      ]\n    },\n    'tenant-detail': {\n      title: 'Sarah Johnson',\n      details: [\n        { label: 'Email', value: 'sarah.johnson@email.com', valueType: 'icon-text', iconName: 'remixMailLine' },\n        { label: 'Phone', value: '+1 (555) 123-4567', valueType: 'icon-text', iconName: 'remixPhoneLine' },\n        { label: 'Status', value: 'Active', valueType: 'badge', badgeVariant: 'success', badgeContent: 'Active', badgeContentType: 'text' },\n        { label: 'Property', value: 'Sunset Blvd Apt 4B', valueType: 'icon-text', iconName: 'remixBuildingLine' },\n        { label: 'Lease Start', value: 'Jan 1, 2024', valueType: 'text' },\n        { label: 'Emergency Contact', value: 'John Johnson', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'JJ' },\n      ]\n    },\n    'inquiry-detail': {\n      title: 'Inquiry #INQ-2024-045',\n      details: [\n        { label: 'From', value: 'Emma Wilson', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'EW' },\n        { label: 'Subject', value: 'Maintenance Request', valueType: 'icon-text', iconName: 'remixToolsLine' },\n        { label: 'Priority', value: 'High', valueType: 'badge', badgeVariant: 'warning', badgeContent: 'High', badgeContentType: 'text' },\n        { label: 'Status', value: 'In Progress', valueType: 'badge', badgeVariant: 'blue', badgeContent: 'In Progress', badgeContentType: 'text' },\n        { label: 'Created', value: 'March 15, 2024', valueType: 'text' },\n        { label: 'Property', value: 'Oak Street Apartments', valueType: 'icon-text', iconName: 'remixBuildingLine' },\n      ]\n    }\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | literal type>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 377,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "entityParentMap",
                    "defaultValue": "{\n    'property-detail': 'Properties',\n    'lease-detail': 'Leases',\n    'tenant-detail': 'Tenants',\n    'inquiry-detail': 'Inquiries'\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 424,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isDetailView",
                    "defaultValue": "computed(() => {\n    const activeId = this.activeItemId();\n    return activeId.endsWith('-detail');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 485,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isListView",
                    "defaultValue": "computed(() => {\n    return !this.isDetailView();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 490,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "pageConfigs",
                    "defaultValue": "{\n    'inbox': { \n      title: 'Inbox', \n      icon: 'remixInboxLine',\n      breadcrumbs: [\n        { label: 'Messages', path: '/messages', isLast: false },\n        { label: 'Inbox', path: '/messages/inbox', isLast: true }\n      ]\n    },\n    'my-tasks': { title: 'My Tasks', icon: 'remixTaskLine' },\n    'inquiries': { \n      title: 'Inquiries', \n      icon: 'remixQuestionAnswerLine',\n      breadcrumbs: [\n        { label: 'Service Hub', path: '/service', isLast: false },\n        { label: 'Inquiries', path: '/service/inquiries', isLast: true }\n      ]\n    },\n    'tasks': { title: 'Tasks', icon: 'remixClipboardLine' },\n    'documents': { title: 'Documents', icon: 'remixFile2Line' },\n    'notices': { title: 'Notices', icon: 'remixNotificationLine' },\n    'dashboard': { title: 'Dashboard', icon: 'remixLayout4Line' },\n    'ratings': { title: 'Ratings', icon: 'remixStarSmileLine' },\n    'calendar': { title: 'Calendar', icon: 'remixCalendarLine' },\n    'reports': { \n      title: 'Reports', \n      icon: 'remixBarChart2Line',\n      breadcrumbs: [\n        { label: 'Company', path: '/company', isLast: false },\n        { label: 'Analytics', path: '/company/analytics', isLast: false },\n        { label: 'Reports', path: '/company/analytics/reports', isLast: true }\n      ]\n    },\n    'customers': { \n      title: 'Customers', \n      icon: 'remixUser3Line',\n      breadcrumbs: [\n        { label: 'Catalog', path: '/catalog', isLast: false },\n        { label: 'Customers', path: '/catalog/customers', isLast: true }\n      ]\n    },\n    'portfolios': { title: 'Portfolios', icon: 'remixFolderLine' },\n    'properties': { title: 'Properties', icon: 'remixBuilding2Line' },\n    'leases': { title: 'Leases', icon: 'remixFileList3Line' },\n    'property-detail': { title: 'Property Details', icon: 'remixBuilding2Line' },\n    'lease-detail': { title: 'Lease Details', icon: 'remixFileList3Line' },\n    'tenant-detail': { title: 'Tenant Details', icon: 'remixUser3Line' },\n    'inquiry-detail': { title: 'Inquiry Details', icon: 'remixQuestionAnswerLine' },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | literal type>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 432,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showBreadcrumbs",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 374,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "sidebarCollapsed",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 371,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "sidebarGroups",
                    "defaultValue": "demoGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 367
                }
            ],
            "methodsClass": [
                {
                    "name": "onGlobalActionClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 543,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onItemSelected",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 506,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "itemId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSidebarCollapsedChange",
                    "args": [
                        {
                            "name": "collapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 539,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleBreadcrumbs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 551,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 547,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DsSidebarComponent",
                    "type": "component"
                },
                {
                    "name": "DsTopbarComponent",
                    "type": "component"
                },
                {
                    "name": "DsHeaderDetailsComponent",
                    "type": "component"
                },
                {
                    "name": "DsDataItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { CommonModule } from '@angular/common';\nimport { Component, signal, computed, Input, Output, EventEmitter } from '@angular/core';\nimport { DsSidebarComponent, SidebarGroup } from '../components/ui/sidebar/ds-sidebar';\nimport { DsTopbarComponent } from '../components/ui/topbar/ds-topbar';\nimport { TopbarBreadcrumbItem } from '../components/ui/topbar/ds-topbar-breadcrumb';\nimport { DsHeaderDetailsComponent } from '../components/ui/header-details/ds-header-details';\nimport { DsDataItemComponent } from '../components/ui/data-item/ds-data-item';\n\n// Demo data for sidebar\nconst demoGroups: SidebarGroup[] = [\n  {\n    id: 'grp-top',\n    label: '',\n    showLabel: false,\n    items: [\n      { id: 'inbox', icon: 'remixInboxLine', label: 'Inbox', badgeText: '3' },\n      { id: 'my-tasks', icon: 'remixTaskLine', label: 'My tasks' },\n    ],\n  },\n  {\n    id: 'grp-service',\n    label: 'Service hub',\n    items: [\n      { id: 'inquiries', icon: 'remixQuestionAnswerLine', label: 'Inquiries' },\n      { id: 'tasks', icon: 'remixClipboardLine', label: 'Tasks' },\n      { id: 'documents', icon: 'remixFile2Line', label: 'Documents' },\n      { id: 'notices', icon: 'remixNotificationLine', label: 'Notices' },\n    ],\n  },\n  {\n    id: 'grp-company',\n    label: 'Company',\n    items: [\n      { id: 'dashboard', icon: 'remixLayout4Line', label: 'Dashboard' },\n      { id: 'ratings', icon: 'remixStarSmileLine', label: 'Ratings' },\n      { id: 'calendar', icon: 'remixCalendarLine', label: 'Calendar' },\n      { id: 'reports', icon: 'remixBarChart2Line', label: 'Reports' },\n    ],\n  },\n  {\n    id: 'grp-catalog',\n    label: 'Catalog',\n    items: [\n      { id: 'customers', icon: 'remixUser3Line', label: 'Customers' },\n      { id: 'portfolios', icon: 'remixFolderLine', label: 'Portfolios' },\n      { id: 'properties', icon: 'remixBuilding2Line', label: 'Properties' },\n      { id: 'leases', icon: 'remixFileList3Line', label: 'Leases' },\n    ],\n  },\n  {\n    id: 'grp-entities',\n    label: 'Entity Details (Demo)',\n    items: [\n      { id: 'property-detail', icon: 'remixBuilding2Line', label: 'Sunset Boulevard Apartments' },\n      { id: 'lease-detail', icon: 'remixFileList3Line', label: 'Lease Agreement #LA-2024-001' },\n      { id: 'tenant-detail', icon: 'remixUser3Line', label: 'Sarah Johnson' },\n      { id: 'inquiry-detail', icon: 'remixQuestionAnswerLine', label: 'Inquiry #INQ-2024-045' },\n    ],\n  },\n];\n\n// Interactive App Shell Component\n@Component({\n  selector: 'app-shell-showcase',\n  standalone: true,\n  imports: [CommonModule, DsSidebarComponent, DsTopbarComponent, DsHeaderDetailsComponent, DsDataItemComponent],\n  template: `\n    <div class=\"app-shell-demo\">\n      <!-- Back Button for Full Page Mode -->\n      @if (fullPageMode) {\n        <div class=\"full-page-back-button\">\n          <button \n            (click)=\"backToMain.emit()\"\n            class=\"back-button\"\n            title=\"Back to Components Demo\"\n          >\n            ‚Üê Back\n          </button>\n        </div>\n      }\n      \n      <!-- Sidebar -->\n      <ds-sidebar \n        [groups]=\"sidebarGroups\"\n        [activeItemId]=\"activeItemId()\"\n        [collapsed]=\"sidebarCollapsed()\"\n        [showGlobalAction]=\"true\"\n        [globalActionLabel]=\"'Create New'\"\n        [globalActionIcon]=\"'remixAddLine'\"\n        [ariaLabel]=\"'Main navigation'\"\n        (itemSelected)=\"onItemSelected($event)\"\n        (collapsedChange)=\"onSidebarCollapsedChange($event)\"\n        (globalActionClick)=\"onGlobalActionClick()\"\n        class=\"demo-sidebar\"\n        [class.demo-sidebar--collapsed]=\"sidebarCollapsed()\"\n      />\n      \n      <!-- Main Content Area -->\n      <div class=\"demo-main\">\n        <!-- Header - List View -->\n        @if (isListView()) {\n          <ds-topbar\n            [pageTitle]=\"currentPageTitle()\"\n            [iconName]=\"currentPageIcon()\"\n            [userInitials]=\"'JD'\"\n            [showFirstAction]=\"true\"\n            [firstActionIcon]=\"'remixNotification3Line'\"\n            [firstActionLabel]=\"'Notifications'\"\n            [showSecondAction]=\"true\"\n            [secondActionIcon]=\"'remixSettings3Line'\"\n            [secondActionLabel]=\"'Settings'\"\n            [showBreadcrumbs]=\"showBreadcrumbs()\"\n            [breadcrumbItems]=\"currentBreadcrumbs()\"\n            class=\"demo-topbar\"\n          />\n        }\n        \n        <!-- Header - Detail View -->\n        @if (isDetailView()) {\n          <ds-topbar\n            [pageTitle]=\"currentPageTitle()\"\n            [iconName]=\"currentPageIcon()\"\n            [userInitials]=\"'JD'\"\n            [showFirstAction]=\"true\"\n            [firstActionIcon]=\"'remixNotification3Line'\"\n            [firstActionLabel]=\"'Notifications'\"\n            [showSecondAction]=\"true\"\n            [secondActionIcon]=\"'remixSettings3Line'\"\n            [secondActionLabel]=\"'Settings'\"\n            [showBreadcrumbs]=\"true\"\n            [breadcrumbItems]=\"currentBreadcrumbs()\"\n            class=\"demo-topbar\"\n          />\n          <ds-header-details\n            [title]=\"currentEntityTitle()\"\n            [showPrimaryAction]=\"true\"\n            [primaryActionText]=\"'Edit'\"\n            [primaryActionIcon]=\"'remixEditLine'\"\n            [primaryActionVariant]=\"'primary'\"\n            [showSecondaryAction]=\"true\"\n            [secondaryActionText]=\"'Share'\"\n            [secondaryActionIcon]=\"'remixShareLine'\"\n            [secondaryActionVariant]=\"'secondary'\"\n            [showMoreActions]=\"true\"\n            class=\"demo-header-details\"\n          >\n            <div slot=\"details\">\n              @for (item of currentEntityDetails(); track item.label) {\n                <ds-data-item\n                  [label]=\"item.label\"\n                  [value]=\"item.value\"\n                  [layout]=\"'vertical'\"\n                  [valueType]=\"item.valueType\"\n                  [iconName]=\"item.iconName\"\n                  [avatarType]=\"item.avatarType\"\n                  [avatarInitials]=\"item.avatarInitials\"\n                  [badgeVariant]=\"item.badgeVariant\"\n                  [badgeContent]=\"item.badgeContent\"\n                  [badgeContentType]=\"item.badgeContentType\"\n                />\n              }\n            </div>\n          </ds-header-details>\n        }\n        \n        <!-- Content Area -->\n        <main class=\"demo-content\">\n          <div class=\"demo-content-inner\">\n            @if (isListView()) {\n              <h2 class=\"demo-title\">{{ currentPageTitle() }} List</h2>\n              <p class=\"demo-description\">\n                This is where the list of {{ currentPageTitle().toLowerCase() }} would be displayed.\n                Using ds-topbar component for list views.\n              </p>\n            } @else {\n              <h2 class=\"demo-title\">{{ currentEntityTitle() }}</h2>\n              <p class=\"demo-description\">\n                This is where the detailed content for {{ currentEntityTitle() }} would be displayed.\n                Using ds-header-details component with metadata above.\n              </p>\n            }\n            \n            <div class=\"demo-metrics\">\n              <div class=\"demo-metric\">\n                <span class=\"demo-metric-label\">Active Item:</span>\n                <span class=\"demo-metric-value\">{{ activeItemId() || 'None' }}</span>\n              </div>\n              <div class=\"demo-metric\">\n                <span class=\"demo-metric-label\">View Type:</span>\n                <span class=\"demo-metric-value\">{{ isDetailView() ? 'Detail View (ds-header-details)' : 'List View (ds-topbar)' }}</span>\n              </div>\n              <div class=\"demo-metric\">\n                <span class=\"demo-metric-label\">Sidebar State:</span>\n                <span class=\"demo-metric-value\">{{ sidebarCollapsed() ? 'Collapsed' : 'Expanded' }}</span>\n              </div>\n              <div class=\"demo-metric\">\n                <span class=\"demo-metric-label\">Breadcrumbs:</span>\n                <span class=\"demo-metric-value\">{{ showBreadcrumbs() ? 'Enabled' : 'Disabled' }}</span>\n              </div>\n            </div>\n            \n            <div class=\"demo-actions\">\n              <button \n                class=\"demo-button\" \n                (click)=\"toggleSidebar()\"\n              >\n                {{ sidebarCollapsed() ? 'Expand' : 'Collapse' }} Sidebar\n              </button>\n              <button \n                class=\"demo-button\" \n                (click)=\"toggleBreadcrumbs()\"\n              >\n                {{ showBreadcrumbs() ? 'Hide' : 'Show' }} Breadcrumbs\n              </button>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .app-shell-demo {\n      display: flex;\n      height: 600px;\n      background: #f8f9fa;\n      border-radius: 8px;\n      overflow: hidden;\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n    \n    :host(.tw-h-screen) .app-shell-demo {\n      height: 100vh;\n      border-radius: 0;\n      box-shadow: none;\n    }\n    \n    .demo-sidebar {\n      flex-shrink: 0;\n      transition: width 0.3s ease;\n    }\n    \n    .demo-main {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      min-width: 0;\n    }\n    \n    .demo-topbar {\n      flex-shrink: 0;\n    }\n    \n    .demo-content {\n      flex: 1;\n      overflow: auto;\n      background: white;\n    }\n    \n    .demo-content-inner {\n      padding: 24px;\n    }\n    \n    .demo-title {\n      margin: 0 0 8px 0;\n      font-size: 24px;\n      font-weight: 600;\n      color: #1a1a1a;\n    }\n    \n    .demo-description {\n      margin: 0 0 24px 0;\n      color: #666;\n      line-height: 1.5;\n    }\n    \n    .demo-metrics {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 16px;\n      margin-bottom: 24px;\n      padding: 16px;\n      background: #f8f9fa;\n      border-radius: 6px;\n    }\n    \n    .demo-metric {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n    \n    .demo-metric-label {\n      font-size: 12px;\n      font-weight: 500;\n      color: #666;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n    \n    .demo-metric-value {\n      font-size: 14px;\n      font-weight: 500;\n      color: #1a1a1a;\n    }\n    \n    .demo-actions {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n    \n    .demo-button {\n      padding: 8px 16px;\n      background: #007bff;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n    \n    .demo-button:hover {\n      background: #0056b3;\n    }\n    \n    .demo-button:active {\n      background: #004085;\n    }\n    \n    .full-page-back-button {\n      position: absolute;\n      top: 16px;\n      left: 16px;\n      z-index: 1000;\n    }\n    \n    .back-button {\n      padding: 8px 16px;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      border: none;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(4px);\n    }\n    \n    .back-button:hover {\n      background: rgba(0, 0, 0, 0.9);\n      transform: translateY(-1px);\n    }\n    \n    .back-button:active {\n      transform: translateY(0);\n    }\n  `]\n})\nexport class AppShellShowcaseComponent {\n  @Input() fullPageMode = false;\n  @Output() backToMain = new EventEmitter<void>();\n  \n  sidebarGroups = demoGroups;\n  \n  // State signals\n  protected activeItemId = signal<string>('dashboard');\n  protected sidebarCollapsed = signal<boolean>(false);\n  protected currentPageTitle = signal<string>('Dashboard');\n  protected currentPageIcon = signal<string>('remixLayout4Line');\n  protected showBreadcrumbs = signal<boolean>(false);\n  \n  // Entity details mapping\n  private entityDetailsMap: Record<string, { title: string; details: any[] }> = {\n    'property-detail': {\n      title: 'Sunset Boulevard Apartments',\n      details: [\n        { label: 'Property Type', value: 'Residential', valueType: 'icon-text', iconName: 'remixHome4Line' },\n        { label: 'Status', value: 'Active', valueType: 'badge', badgeVariant: 'success', badgeContent: 'Active', badgeContentType: 'text' },\n        { label: 'Owner', value: 'Sarah Johnson', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'SJ' },\n        { label: 'Units', value: '24 units', valueType: 'text' },\n        { label: 'Built Year', value: '1995', valueType: 'text' },\n        { label: 'Address', value: '1234 Sunset Blvd, Los Angeles, CA', valueType: 'icon-text', iconName: 'remixMapPin2Line' },\n      ]\n    },\n    'lease-detail': {\n      title: 'Lease Agreement #LA-2024-001',\n      details: [\n        { label: 'Tenant', value: 'Michael Chen', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'MC' },\n        { label: 'Property', value: 'Sunset Blvd Apt 4B', valueType: 'icon-text', iconName: 'remixBuildingLine' },\n        { label: 'Status', value: 'Active', valueType: 'badge', badgeVariant: 'success', badgeContent: 'Active', badgeContentType: 'text' },\n        { label: 'Rent Amount', value: '$2,400/month', valueType: 'text' },\n        { label: 'Lease Term', value: '12 months', valueType: 'text' },\n        { label: 'Start Date', value: 'Jan 1, 2024', valueType: 'text' },\n      ]\n    },\n    'tenant-detail': {\n      title: 'Sarah Johnson',\n      details: [\n        { label: 'Email', value: 'sarah.johnson@email.com', valueType: 'icon-text', iconName: 'remixMailLine' },\n        { label: 'Phone', value: '+1 (555) 123-4567', valueType: 'icon-text', iconName: 'remixPhoneLine' },\n        { label: 'Status', value: 'Active', valueType: 'badge', badgeVariant: 'success', badgeContent: 'Active', badgeContentType: 'text' },\n        { label: 'Property', value: 'Sunset Blvd Apt 4B', valueType: 'icon-text', iconName: 'remixBuildingLine' },\n        { label: 'Lease Start', value: 'Jan 1, 2024', valueType: 'text' },\n        { label: 'Emergency Contact', value: 'John Johnson', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'JJ' },\n      ]\n    },\n    'inquiry-detail': {\n      title: 'Inquiry #INQ-2024-045',\n      details: [\n        { label: 'From', value: 'Emma Wilson', valueType: 'avatar-text', avatarType: 'initials', avatarInitials: 'EW' },\n        { label: 'Subject', value: 'Maintenance Request', valueType: 'icon-text', iconName: 'remixToolsLine' },\n        { label: 'Priority', value: 'High', valueType: 'badge', badgeVariant: 'warning', badgeContent: 'High', badgeContentType: 'text' },\n        { label: 'Status', value: 'In Progress', valueType: 'badge', badgeVariant: 'blue', badgeContent: 'In Progress', badgeContentType: 'text' },\n        { label: 'Created', value: 'March 15, 2024', valueType: 'text' },\n        { label: 'Property', value: 'Oak Street Apartments', valueType: 'icon-text', iconName: 'remixBuildingLine' },\n      ]\n    }\n  };\n\n  private entityParentMap: Record<string, string> = {\n    'property-detail': 'Properties',\n    'lease-detail': 'Leases',\n    'tenant-detail': 'Tenants',\n    'inquiry-detail': 'Inquiries'\n  };\n\n  // Page configurations for different sidebar items\n  private pageConfigs: Record<string, { title: string; icon: string; breadcrumbs?: TopbarBreadcrumbItem[] }> = {\n    'inbox': { \n      title: 'Inbox', \n      icon: 'remixInboxLine',\n      breadcrumbs: [\n        { label: 'Messages', path: '/messages', isLast: false },\n        { label: 'Inbox', path: '/messages/inbox', isLast: true }\n      ]\n    },\n    'my-tasks': { title: 'My Tasks', icon: 'remixTaskLine' },\n    'inquiries': { \n      title: 'Inquiries', \n      icon: 'remixQuestionAnswerLine',\n      breadcrumbs: [\n        { label: 'Service Hub', path: '/service', isLast: false },\n        { label: 'Inquiries', path: '/service/inquiries', isLast: true }\n      ]\n    },\n    'tasks': { title: 'Tasks', icon: 'remixClipboardLine' },\n    'documents': { title: 'Documents', icon: 'remixFile2Line' },\n    'notices': { title: 'Notices', icon: 'remixNotificationLine' },\n    'dashboard': { title: 'Dashboard', icon: 'remixLayout4Line' },\n    'ratings': { title: 'Ratings', icon: 'remixStarSmileLine' },\n    'calendar': { title: 'Calendar', icon: 'remixCalendarLine' },\n    'reports': { \n      title: 'Reports', \n      icon: 'remixBarChart2Line',\n      breadcrumbs: [\n        { label: 'Company', path: '/company', isLast: false },\n        { label: 'Analytics', path: '/company/analytics', isLast: false },\n        { label: 'Reports', path: '/company/analytics/reports', isLast: true }\n      ]\n    },\n    'customers': { \n      title: 'Customers', \n      icon: 'remixUser3Line',\n      breadcrumbs: [\n        { label: 'Catalog', path: '/catalog', isLast: false },\n        { label: 'Customers', path: '/catalog/customers', isLast: true }\n      ]\n    },\n    'portfolios': { title: 'Portfolios', icon: 'remixFolderLine' },\n    'properties': { title: 'Properties', icon: 'remixBuilding2Line' },\n    'leases': { title: 'Leases', icon: 'remixFileList3Line' },\n    'property-detail': { title: 'Property Details', icon: 'remixBuilding2Line' },\n    'lease-detail': { title: 'Lease Details', icon: 'remixFileList3Line' },\n    'tenant-detail': { title: 'Tenant Details', icon: 'remixUser3Line' },\n    'inquiry-detail': { title: 'Inquiry Details', icon: 'remixQuestionAnswerLine' },\n  };\n  \n  protected currentBreadcrumbs = signal<TopbarBreadcrumbItem[]>([]);\n\n  // Computed properties\n  protected isDetailView = computed(() => {\n    const activeId = this.activeItemId();\n    return activeId.endsWith('-detail');\n  });\n\n  protected isListView = computed(() => {\n    return !this.isDetailView();\n  });\n\n  protected currentEntityTitle = computed(() => {\n    const activeId = this.activeItemId();\n    const entityInfo = this.entityDetailsMap[activeId];\n    return entityInfo?.title || 'Entity Details';\n  });\n\n  protected currentEntityDetails = computed(() => {\n    const activeId = this.activeItemId();\n    const entityInfo = this.entityDetailsMap[activeId];\n    return entityInfo?.details || [];\n  });\n\n  onItemSelected(itemId: string) {\n    this.activeItemId.set(itemId);\n    const config = this.pageConfigs[itemId];\n    if (config) {\n      this.currentPageTitle.set(config.title);\n      this.currentPageIcon.set(config.icon);\n      \n      // Update breadcrumbs for detail views\n      if (itemId.endsWith('-detail')) {\n        const parent = this.entityParentMap[itemId];\n        const entityTitle = this.entityDetailsMap[itemId]?.title;\n        \n        if (parent && entityTitle) {\n          this.currentBreadcrumbs.set([\n            { label: parent, path: '#', isLast: false },\n            { label: entityTitle, path: '', isLast: true }\n          ]);\n          this.showBreadcrumbs.set(true);\n        }\n      } else {\n        // Update breadcrumbs if available in config\n        if (config.breadcrumbs) {\n          this.currentBreadcrumbs.set(config.breadcrumbs);\n          if (!this.showBreadcrumbs()) {\n            this.showBreadcrumbs.set(true);\n          }\n        } else {\n          this.currentBreadcrumbs.set([]);\n        }\n      }\n    }\n  }\n\n  onSidebarCollapsedChange(collapsed: boolean) {\n    this.sidebarCollapsed.set(collapsed);\n  }\n\n  onGlobalActionClick() {\n    console.log('Global action clicked!');\n  }\n  \n  toggleSidebar() {\n    this.sidebarCollapsed.set(!this.sidebarCollapsed());\n  }\n  \n  toggleBreadcrumbs() {\n    this.showBreadcrumbs.set(!this.showBreadcrumbs());\n  }\n}\n\nconst meta: Meta<AppShellShowcaseComponent> = {\n  title: 'Application shell/App Shell Showcase',\n  component: AppShellShowcaseComponent,\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      description: {\n        component: 'Interactive showcase demonstrating the sidebar and topbar components working together in a complete application shell layout. Click sidebar items to see the topbar update dynamically with different page titles, icons, and breadcrumbs.',\n      },\n    },\n  },\n  tags: ['autodocs'],\n};\n\nexport default meta;\ntype Story = StoryObj<AppShellShowcaseComponent>;\n\n// Interactive showcase with both components\nexport const Interactive: Story = {\n  name: 'Interactive App Shell',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Click on different sidebar items to see how the topbar updates with contextual information. Use the action buttons to toggle sidebar collapse and breadcrumb visibility.',\n      },\n    },\n  },\n};\n\n// Collapsed sidebar variant\nexport const CollapsedSidebar: Story = {\n  name: 'With Collapsed Sidebar',\n  render: () => ({\n    template: `\n      <app-shell-showcase style=\"display: block;\"></app-shell-showcase>\n      <script>\n        setTimeout(() => {\n          const component = document.querySelector('app-shell-showcase');\n          if (component) {\n            component.toggleSidebar();\n          }\n        }, 100);\n      </script>\n    `,\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'App shell with the sidebar in collapsed state, showing icons only.',\n      },\n    },\n  },\n};\n\n// With breadcrumbs enabled\nexport const WithBreadcrumbs: Story = {\n  name: 'With Breadcrumbs',\n  render: () => ({\n    template: `\n      <app-shell-showcase style=\"display: block;\"></app-shell-showcase>\n      <script>\n        setTimeout(() => {\n          const component = document.querySelector('app-shell-showcase');\n          if (component) {\n            component.onItemSelected('reports');\n          }\n        }, 100);\n      </script>\n    `,\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'App shell showing breadcrumb navigation in the topbar for nested page contexts.',\n      },\n    },\n  },\n};\n\n// Mobile responsive preview\nexport const MobileView: Story = {\n  name: 'Mobile Responsive',\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1',\n    },\n    docs: {\n      description: {\n        story: 'App shell optimized for mobile viewports with responsive behavior.',\n      },\n    },\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .app-shell-demo {\n      display: flex;\n      height: 600px;\n      background: #f8f9fa;\n      border-radius: 8px;\n      overflow: hidden;\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n    \n    :host(.tw-h-screen) .app-shell-demo {\n      height: 100vh;\n      border-radius: 0;\n      box-shadow: none;\n    }\n    \n    .demo-sidebar {\n      flex-shrink: 0;\n      transition: width 0.3s ease;\n    }\n    \n    .demo-main {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      min-width: 0;\n    }\n    \n    .demo-topbar {\n      flex-shrink: 0;\n    }\n    \n    .demo-content {\n      flex: 1;\n      overflow: auto;\n      background: white;\n    }\n    \n    .demo-content-inner {\n      padding: 24px;\n    }\n    \n    .demo-title {\n      margin: 0 0 8px 0;\n      font-size: 24px;\n      font-weight: 600;\n      color: #1a1a1a;\n    }\n    \n    .demo-description {\n      margin: 0 0 24px 0;\n      color: #666;\n      line-height: 1.5;\n    }\n    \n    .demo-metrics {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 16px;\n      margin-bottom: 24px;\n      padding: 16px;\n      background: #f8f9fa;\n      border-radius: 6px;\n    }\n    \n    .demo-metric {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n    \n    .demo-metric-label {\n      font-size: 12px;\n      font-weight: 500;\n      color: #666;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n    \n    .demo-metric-value {\n      font-size: 14px;\n      font-weight: 500;\n      color: #1a1a1a;\n    }\n    \n    .demo-actions {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n    \n    .demo-button {\n      padding: 8px 16px;\n      background: #007bff;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n    \n    .demo-button:hover {\n      background: #0056b3;\n    }\n    \n    .demo-button:active {\n      background: #004085;\n    }\n    \n    .full-page-back-button {\n      position: absolute;\n      top: 16px;\n      left: 16px;\n      z-index: 1000;\n    }\n    \n    .back-button {\n      padding: 8px 16px;\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      border: none;\n      border-radius: 6px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(4px);\n    }\n    \n    .back-button:hover {\n      background: rgba(0, 0, 0, 0.9);\n      transform: translateY(-1px);\n    }\n    \n    .back-button:active {\n      transform: translateY(0);\n    }\n  \n",
            "extends": []
        },
        {
            "name": "DebugWrapperComponent",
            "id": "component-DebugWrapperComponent-3fed883e1c4d2b1f1214eb8ed263048955ba82afd3c7b21d8f682b6a4af59f70ade6db02095a45054553faf169e9ca95084ceaa3ccaaee64f15d13ffed2c83fa",
            "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ds-debug-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<ds-app-layout\n  [sidebarGroups]=\"sidebarGroups\"\n  [isMobileOverride]=\"isMobileOverride\"\n  [isSidebarCollapsed]=\"isSidebarCollapsed\"\n  (menuOpenChange)=\"handleMenuOpenChange($event)\"\n  (collapsedChange)=\"handleCollapsedChange($event)\"\n>\n  <ds-topbar\n    [pageTitle]=\"'Page Title'\"\n    [iconName]=\"'remixHome4Line'\"\n    [userInitials]=\"'JD'\"\n    [showFirstAction]=\"true\"\n    [firstActionIcon]=\"'remixNotification3Line'\"\n    [firstActionLabel]=\"'Notifications'\"\n    [showSecondAction]=\"true\"\n    [secondActionIcon]=\"'remixSettings3Line'\"\n    [secondActionLabel]=\"'Settings'\"\n  />\n  <div style=\"padding: 24px;\">\n    <div style=\"max-width: 64rem; margin: 0 auto;\">\n      <h2 style=\"font-size: 1.5rem; font-weight: 600; margin-bottom: 8px;\">Main Content Area</h2>\n      <p style=\"color: rgb(75, 85, 99); margin-bottom: 48px;\">This is where your main content would go. The layout handles the responsive behavior automatically.</p>\n\n      <div style=\"margin-bottom: 48px;\">\n        <div style=\"background: var(--background-color-interactive-default); border-radius: 16px; padding: 24px;\">\n          <span class=\"ui-sm-medium\">Debug Information</span>\n          <div style=\"margin-top: 16px;\">\n            <ds-data-item\n              [label]=\"'Window width'\"\n              [value]=\"windowWidth + 'px'\"\n              [layout]=\"'horizontal'\"\n              [valueType]=\"'text'\"\n            ></ds-data-item>\n            <ds-data-item\n              [label]=\"'Is Mobile'\"\n              [value]=\"isMobile ? 'True' : 'False'\"\n              [layout]=\"'horizontal'\"\n              [valueType]=\"'text'\"\n            ></ds-data-item>\n            <ds-data-item\n              [label]=\"'Menu Open'\"\n              [value]=\"menuOpen ? 'True' : 'False'\"\n              [layout]=\"'horizontal'\"\n              [valueType]=\"'text'\"\n            ></ds-data-item>\n            <ds-data-item\n              [label]=\"'Sidebar Collapsed'\"\n              [value]=\"isSidebarCollapsed ? 'True' : 'False'\"\n              [layout]=\"'horizontal'\"\n              [valueType]=\"'text'\"\n            ></ds-data-item>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ds-app-layout>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMobile",
                    "defaultValue": "computed(() => this.viewportService.isMobile())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "isMobileOverride",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "isSidebarCollapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "menuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "resizeTimeout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidebarGroups",
                    "defaultValue": "demoGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "windowWidth",
                    "defaultValue": "typeof window !== 'undefined' ? window.innerWidth : 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "methodsClass": [
                {
                    "name": "handleCollapsedChange",
                    "args": [
                        {
                            "name": "isCollapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isCollapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleMenuOpenChange",
                    "args": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "DsAppLayoutComponent",
                    "type": "component"
                },
                {
                    "name": "DsTopbarComponent",
                    "type": "component"
                },
                {
                    "name": "DsSidebarComponent",
                    "type": "component"
                },
                {
                    "name": "DsDataItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { Component, HostListener, OnDestroy, computed } from '@angular/core';\nimport { DsAppLayoutComponent } from './ds-app-layout';\nimport { DsTopbarComponent } from '../topbar/ds-topbar';\nimport { DsSidebarComponent } from '../sidebar/ds-sidebar';\nimport { DsDataItemComponent } from '../data-item/ds-data-item';\nimport { ViewportService } from '../../../lib/viewport.service';\nimport { demoGroups } from '../sidebar/ds-sidebar.stories';\n\n@Component({\n  selector: 'ds-debug-wrapper',\n  standalone: true,\n  imports: [DsAppLayoutComponent, DsTopbarComponent, DsSidebarComponent, DsDataItemComponent],\n  // ViewportService is now provided at the module level\n  template: `\n    <ds-app-layout\n      [sidebarGroups]=\"sidebarGroups\"\n      [isMobileOverride]=\"isMobileOverride\"\n      [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      (menuOpenChange)=\"handleMenuOpenChange($event)\"\n      (collapsedChange)=\"handleCollapsedChange($event)\"\n    >\n      <ds-topbar\n        [pageTitle]=\"'Page Title'\"\n        [iconName]=\"'remixHome4Line'\"\n        [userInitials]=\"'JD'\"\n        [showFirstAction]=\"true\"\n        [firstActionIcon]=\"'remixNotification3Line'\"\n        [firstActionLabel]=\"'Notifications'\"\n        [showSecondAction]=\"true\"\n        [secondActionIcon]=\"'remixSettings3Line'\"\n        [secondActionLabel]=\"'Settings'\"\n      />\n      <div style=\"padding: 24px;\">\n        <div style=\"max-width: 64rem; margin: 0 auto;\">\n          <h2 style=\"font-size: 1.5rem; font-weight: 600; margin-bottom: 8px;\">Main Content Area</h2>\n          <p style=\"color: rgb(75, 85, 99); margin-bottom: 48px;\">This is where your main content would go. The layout handles the responsive behavior automatically.</p>\n          \n          <div style=\"margin-bottom: 48px;\">\n            <div style=\"background: var(--background-color-interactive-default); border-radius: 16px; padding: 24px;\">\n              <span class=\"ui-sm-medium\">Debug Information</span>\n              <div style=\"margin-top: 16px;\">\n                <ds-data-item \n                  [label]=\"'Window width'\" \n                  [value]=\"windowWidth + 'px'\" \n                  [layout]=\"'horizontal'\" \n                  [valueType]=\"'text'\"\n                ></ds-data-item>\n                <ds-data-item \n                  [label]=\"'Is Mobile'\" \n                  [value]=\"isMobile ? 'True' : 'False'\" \n                  [layout]=\"'horizontal'\" \n                  [valueType]=\"'text'\"\n                ></ds-data-item>\n                <ds-data-item \n                  [label]=\"'Menu Open'\" \n                  [value]=\"menuOpen ? 'True' : 'False'\" \n                  [layout]=\"'horizontal'\" \n                  [valueType]=\"'text'\"\n                ></ds-data-item>\n                <ds-data-item \n                  [label]=\"'Sidebar Collapsed'\" \n                  [value]=\"isSidebarCollapsed ? 'True' : 'False'\" \n                  [layout]=\"'horizontal'\" \n                  [valueType]=\"'text'\"\n                ></ds-data-item>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ds-app-layout>\n  `\n})\nclass DebugWrapperComponent implements OnDestroy {\n  sidebarGroups = demoGroups;\n  isMobileOverride?: boolean;\n  isSidebarCollapsed = false;\n  windowWidth = typeof window !== 'undefined' ? window.innerWidth : 0;\n  menuOpen = false;\n\n  constructor(private viewportService: ViewportService) {}\n\n  isMobile = computed(() => this.viewportService.isMobile());\n\n  private resizeTimeout: any;\n\n  @HostListener('window:resize')\n  onResize() {\n    // Debounce resize updates\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n    }\n    this.resizeTimeout = setTimeout(() => {\n      this.windowWidth = window.innerWidth;\n    }, 100);\n  }\n\n  handleMenuOpenChange(isOpen: boolean) {\n    this.menuOpen = isOpen;\n  }\n\n  handleCollapsedChange(isCollapsed: boolean) {\n    this.isSidebarCollapsed = isCollapsed;\n  }\n\n  ngOnDestroy() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n    }\n  }\n}\n\nconst meta: Meta<DsAppLayoutComponent> = {\n  title: 'Application shell/App Layout',\n  component: DsAppLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [DebugWrapperComponent],\n      providers: [ViewportService]\n    }),\n  ],\n  parameters: {\n    layout: 'fullscreen',\n    // Add viewport toolbar to allow easy resizing\n    viewport: {\n      defaultViewport: 'desktop',\n      viewports: {\n        mobile: {\n          name: 'Mobile',\n          styles: {\n            width: '375px',\n            height: '100%',\n          },\n        },\n        tablet: {\n          name: 'Tablet',\n          styles: {\n            width: '768px',\n            height: '100%',\n          },\n        },\n        desktop: {\n          name: 'Desktop',\n          styles: {\n            width: '1024px',\n            height: '100%',\n          },\n        },\n        'large-desktop': {\n          name: 'Large Desktop',\n          styles: {\n            width: '1440px',\n            height: '100%',\n          },\n        },\n      },\n    },\n  },\n  tags: ['autodocs'],\n};\n\nexport default meta;\ntype Story = StoryObj<DsAppLayoutComponent>;\n\nexport const Default: Story = {\n  args: {\n    sidebarGroups: demoGroups,\n    isSidebarCollapsed: false,\n  },\n  render: () => ({\n    template: '<ds-debug-wrapper></ds-debug-wrapper>'\n  })\n};\n\nexport const InitiallyCollapsed: Story = {\n  args: {\n    sidebarGroups: demoGroups,\n    isMobileOverride: false, // Force desktop mode\n    isSidebarCollapsed: true,\n  },\n  render: Default.render,\n};\n\n// Debug story to test topbar in isolation\nexport const AutoResponsive: Story = {\n  args: {\n    sidebarGroups: demoGroups,\n    // No isMobileOverride - let ViewportService handle automatic detection\n    isSidebarCollapsed: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-app-layout\n        [sidebarGroups]=\"sidebarGroups\"\n        [isMobileOverride]=\"isMobileOverride\"\n        [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      >\n        <ds-topbar\n          [pageTitle]=\"'Auto Responsive'\"\n          [iconName]=\"'remixSmartphoneLine'\"\n          [userInitials]=\"'AR'\"\n          [showFirstAction]=\"true\"\n          [firstActionIcon]=\"'remixNotification3Line'\"\n          [firstActionLabel]=\"'Notifications'\"\n          [showSecondAction]=\"true\"\n          [secondActionIcon]=\"'remixSettings3Line'\"\n          [secondActionLabel]=\"'Settings'\"\n        />\n        <div class=\"p-6\">\n          <div class=\"max-w-3xl mx-auto\">\n            <h2 class=\"text-2xl font-semibold mb-4\">Auto-Responsive Layout</h2>\n            <div class=\"space-y-4\">\n              <div class=\"p-4 bg-white rounded-lg border border-gray-200\">\n                <h3 class=\"font-medium mb-2\">üöÄ Automatic Viewport Detection</h3>\n                <p class=\"text-gray-600\">\n                  This layout automatically detects your viewport size and switches between mobile and desktop modes at 992px breakpoint.\n                </p>\n                <p class=\"mt-2 text-sm text-gray-500\">\n                  <strong>Try resizing your browser window or using the viewport toolbar above!</strong>\n                </p>\n              </div>\n              \n              <div class=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                <h3 class=\"font-medium mb-2 text-blue-900\">How it works:</h3>\n                <ul class=\"text-sm text-blue-800 space-y-1\">\n                  <li>‚Ä¢ <strong>‚â§ 991px:</strong> Mobile mode with collapsible drawer menu</li>\n                  <li>‚Ä¢ <strong>‚â• 992px:</strong> Desktop mode with persistent sidebar</li>\n                  <li>‚Ä¢ <strong>Automatic:</strong> No manual prop toggling needed!</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ds-app-layout>\n    `,\n  }),\n};\n\nexport const TopbarDebug: Story = {\n  args: {\n    sidebarGroups: demoGroups,\n    isMobileOverride: false, // Force desktop mode\n    isSidebarCollapsed: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-app-layout\n        [sidebarGroups]=\"sidebarGroups\"\n        [isMobileOverride]=\"isMobileOverride\"\n        [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      >\n        <ds-topbar\n          [pageTitle]=\"'Debug Page'\"\n          [iconName]=\"'remixHome4Line'\"\n          [userInitials]=\"'DB'\"\n          [showFirstAction]=\"false\"\n          [showSecondAction]=\"false\"\n        />\n        <div class=\"p-6\">\n          <h2>Debug: Check if topbar renders with minimal props</h2>\n        </div>\n      </ds-app-layout>\n    `,\n  }),\n};",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewportService",
                        "type": "ViewportService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 80,
                "jsdoctags": [
                    {
                        "name": "viewportService",
                        "type": "ViewportService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ]
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "ActiveItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { groups: demoGroups, activeItemId: 'inbox' },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [activeItemId]=\"activeItemId\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllColorVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <h3 style=\"margin: 0; font-size: 16px; font-weight: 600;\">All Badge Color Variants</h3>\n        <div style=\"display: flex; flex-wrap: wrap; gap: 8px; max-width: 600px;\">\n          <ds-badge content=\"Default\" variant=\"default\"></ds-badge>\n          <ds-badge content=\"Brand\" variant=\"brand\"></ds-badge>\n          <ds-badge content=\"Success\" variant=\"success\"></ds-badge>\n          <ds-badge content=\"Warning\" variant=\"warning\"></ds-badge>\n          <ds-badge content=\"Destructive\" variant=\"destructive\"></ds-badge>\n          <ds-badge content=\"Blue\" variant=\"blue\"></ds-badge>\n          <ds-badge content=\"Light Purple\" variant=\"light-purple\"></ds-badge>\n          <ds-badge content=\"Pink\" variant=\"pink\"></ds-badge>\n          <ds-badge content=\"Salmon Orange\" variant=\"salmon-orange\"></ds-badge>\n          <ds-badge content=\"Orange\" variant=\"orange\"></ds-badge>\n          <ds-badge content=\"Lime Green\" variant=\"lime-green\"></ds-badge>\n          <ds-badge content=\"Grey\" variant=\"grey\"></ds-badge>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllShapes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">All Shape Variants (8x8px)</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 16px; align-items: center;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\" label=\"Received\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"square\" variant=\"destructive\" label=\"Stage tags\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"diamond\" variant=\"brand\" label=\"Contact\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"triangle\" variant=\"blue\" label=\"Upcoming\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"pentagon\" variant=\"brand\" label=\"Maintenance\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllSizesAndVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 24px;\">\n        <div>\n          <h4>Small Size</h4>\n          <div style=\"display: grid; gap: 8px; margin-top: 8px;\">\n            <ds-checkbox size=\"sm\" variant=\"default\" label=\"Default small\"></ds-checkbox>\n            <ds-checkbox size=\"sm\" variant=\"success\" label=\"Success small\"></ds-checkbox>\n            <ds-checkbox size=\"sm\" variant=\"warning\" label=\"Warning small\"></ds-checkbox>\n            <ds-checkbox size=\"sm\" variant=\"error\" label=\"Error small\"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Medium Size</h4>\n          <div style=\"display: grid; gap: 8px; margin-top: 8px;\">\n            <ds-checkbox size=\"md\" variant=\"default\" label=\"Default medium\"></ds-checkbox>\n            <ds-checkbox size=\"md\" variant=\"success\" label=\"Success medium\"></ds-checkbox>\n            <ds-checkbox size=\"md\" variant=\"warning\" label=\"Warning medium\"></ds-checkbox>\n            <ds-checkbox size=\"md\" variant=\"error\" label=\"Error medium\"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Large Size</h4>\n          <div style=\"display: grid; gap: 8px; margin-top: 8px;\">\n            <ds-checkbox size=\"lg\" variant=\"default\" label=\"Default large\"></ds-checkbox>\n            <ds-checkbox size=\"lg\" variant=\"success\" label=\"Success large\"></ds-checkbox>\n            <ds-checkbox size=\"lg\" variant=\"warning\" label=\"Warning large\"></ds-checkbox>\n            <ds-checkbox size=\"lg\" variant=\"error\" label=\"Error large\"></ds-checkbox>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AllTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem; align-items: start; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n          <h3 style=\"margin: 0; font-size: 14px; font-weight: 600; color: var(--text-color-default-primary);\">Initials (Always Round)</h3>\n          <div style=\"display: flex; gap: 1rem; align-items: center;\">\n            <ds-avatar type=\"initials\" size=\"sm\" initials=\"JD\"></ds-avatar>\n            <ds-avatar type=\"initials\" size=\"md\" initials=\"JD\"></ds-avatar>\n            <ds-avatar type=\"initials\" size=\"lg\" initials=\"JD\"></ds-avatar>\n            <ds-avatar type=\"initials\" size=\"xl\" initials=\"JD\"></ds-avatar>\n          </div>\n        </div>\n        \n        <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n          <h3 style=\"margin: 0; font-size: 14px; font-weight: 600; color: var(--text-color-default-primary);\">Photo (Always Round)</h3>\n          <div style=\"display: flex; gap: 1rem; align-items: center;\">\n            <ds-avatar \n              type=\"photo\" \n              size=\"sm\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n            <ds-avatar \n              type=\"photo\" \n              size=\"md\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n            <ds-avatar \n              type=\"photo\" \n              size=\"lg\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n            <ds-avatar \n              type=\"photo\" \n              size=\"xl\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n          </div>\n        </div>\n        \n        <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n          <h3 style=\"margin: 0; font-size: 14px; font-weight: 600; color: var(--text-color-default-primary);\">Icon (Brand Background + Depth)</h3>\n          <div style=\"display: flex; gap: 1rem; align-items: center;\">\n            <ds-avatar type=\"icon\" size=\"sm\" iconName=\"remixUser3Fill\"></ds-avatar>\n            <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixUser3Fill\"></ds-avatar>\n            <ds-avatar type=\"icon\" size=\"lg\" iconName=\"remixUser3Fill\"></ds-avatar>\n            <ds-avatar type=\"icon\" size=\"xl\" iconName=\"remixUser3Fill\"></ds-avatar>\n          </div>\n          <div style=\"font-size: 12px; color: var(--text-color-default-secondary);\">\n            6px ‚Üí 8px ‚Üí 12px ‚Üí 16px radius<br/>\n            depth-sm ‚Üí depth-sm ‚Üí depth-md ‚Üí depth-lg\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "AutoResponsive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    // No isMobileOverride - let ViewportService handle automatic detection\n    isSidebarCollapsed: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-app-layout\n        [sidebarGroups]=\"sidebarGroups\"\n        [isMobileOverride]=\"isMobileOverride\"\n        [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      >\n        <ds-topbar\n          [pageTitle]=\"'Auto Responsive'\"\n          [iconName]=\"'remixSmartphoneLine'\"\n          [userInitials]=\"'AR'\"\n          [showFirstAction]=\"true\"\n          [firstActionIcon]=\"'remixNotification3Line'\"\n          [firstActionLabel]=\"'Notifications'\"\n          [showSecondAction]=\"true\"\n          [secondActionIcon]=\"'remixSettings3Line'\"\n          [secondActionLabel]=\"'Settings'\"\n        />\n        <div class=\"p-6\">\n          <div class=\"max-w-3xl mx-auto\">\n            <h2 class=\"text-2xl font-semibold mb-4\">Auto-Responsive Layout</h2>\n            <div class=\"space-y-4\">\n              <div class=\"p-4 bg-white rounded-lg border border-gray-200\">\n                <h3 class=\"font-medium mb-2\">üöÄ Automatic Viewport Detection</h3>\n                <p class=\"text-gray-600\">\n                  This layout automatically detects your viewport size and switches between mobile and desktop modes at 992px breakpoint.\n                </p>\n                <p class=\"mt-2 text-sm text-gray-500\">\n                  <strong>Try resizing your browser window or using the viewport toolbar above!</strong>\n                </p>\n              </div>\n              \n              <div class=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                <h3 class=\"font-medium mb-2 text-blue-900\">How it works:</h3>\n                <ul class=\"text-sm text-blue-800 space-y-1\">\n                  <li>‚Ä¢ <strong>‚â§ 991px:</strong> Mobile mode with collapsible drawer menu</li>\n                  <li>‚Ä¢ <strong>‚â• 992px:</strong> Desktop mode with persistent sidebar</li>\n                  <li>‚Ä¢ <strong>Automatic:</strong> No manual prop toggling needed!</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ds-app-layout>\n    `,\n  }),\n}"
            },
            {
                "name": "ButtonSizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem; align-items: center; flex-wrap: wrap;\">\n        <ds-tooltip text=\"Small button tooltip\">\n          <ds-button size=\"sm\" variant=\"primary\">Small</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Medium button tooltip\">\n          <ds-button size=\"md\" variant=\"secondary\">Medium</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Large button tooltip\">\n          <ds-button size=\"lg\" variant=\"ghost\">Large</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "Circle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    shape: 'circle',\n    variant: 'brand',\n    label: 'Received',\n  },\n}"
            },
            {
                "name": "Collapsed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { groups: demoGroups, collapsed: true },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [collapsed]=\"collapsed\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "CollapsedSidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'With Collapsed Sidebar',\n  render: () => ({\n    template: `\n      <app-shell-showcase style=\"display: block;\"></app-shell-showcase>\n      <script>\n        setTimeout(() => {\n          const component = document.querySelector('app-shell-showcase');\n          if (component) {\n            component.toggleSidebar();\n          }\n        }, 100);\n      </script>\n    `,\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'App shell with the sidebar in collapsed state, showing icons only.',\n      },\n    },\n  },\n}"
            },
            {
                "name": "CollapsedWithGlobalAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { \n    groups: demoGroups, \n    collapsed: true, \n    showGlobalAction: true, \n    globalActionLabel: 'Create New', \n    globalActionIcon: 'remixAddLine' \n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar \n          [groups]=\"groups\" \n          [collapsed]=\"collapsed\" \n          [showGlobalAction]=\"showGlobalAction\" \n          [globalActionLabel]=\"globalActionLabel\" \n          [globalActionIcon]=\"globalActionIcon\" \n        />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px;\">\n        <div style=\"display: flex; align-items: center; gap: 16px;\">\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"primary\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"secondary\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"tertiary\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"brand\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"success\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"warning\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"destructive\"></ds-icon>\n        </div>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "ColorTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 24px; padding: 20px;\">\n        <!-- Test 1: Hardcoded colors for reference -->\n        <div>\n          <h4>Reference Colors (hardcoded)</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center;\">\n            <div style=\"color: #202227;\">‚ñ† primary (#202227)</div>\n            <div style=\"color: #545B66;\">‚ñ† secondary (#545B66)</div>\n            <div style=\"color: #626B78;\">‚ñ† tertiary (#626B78)</div>\n            <div style=\"color: #6B5FF5;\">‚ñ† brand (#6B5FF5)</div>\n            <div style=\"color: #158452;\">‚ñ† success (#158452)</div>\n            <div style=\"color: #d97706;\">‚ñ† warning (#d97706)</div>\n            <div style=\"color: #dc2626;\">‚ñ† destructive (#dc2626)</div>\n          </div>\n        </div>\n        \n        <!-- Test 2: Our icon component -->\n        <div>\n          <h4>Icon Component Colors</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center;\">\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"primary\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"secondary\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"tertiary\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"brand\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"success\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"warning\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"destructive\"></ds-icon>\n          </div>\n        </div>\n        \n        <!-- Test 3: Custom colors that bypass CSS classes -->\n        <div>\n          <h4>Custom Colors (bypass CSS)</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center;\">\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#202227\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#545B66\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#626B78\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#6B5FF5\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#158452\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#d97706\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#dc2626\"></ds-icon>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "ColorVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">All Color Variants</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 16px; align-items: center; max-width: 600px;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"default\" label=\"Default\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\" label=\"Brand\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"success\" label=\"Success\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"warning\" label=\"Warning\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"destructive\" label=\"Destructive\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"blue\" label=\"Blue\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"light-purple\" label=\"Light Purple\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"pink\" label=\"Pink\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"salmon-orange\" label=\"Salmon Orange\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"orange\" label=\"Orange\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"lime-green\" label=\"Lime Green\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"grey\" label=\"Grey\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "ContentTypeComparison",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Text Only</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px;\">\n            <ds-badge content=\"Default\" contentType=\"text\" variant=\"default\"></ds-badge>\n            <ds-badge content=\"Brand\" contentType=\"text\" variant=\"brand\"></ds-badge>\n            <ds-badge content=\"Success\" contentType=\"text\" variant=\"success\"></ds-badge>\n            <ds-badge content=\"Warning\" contentType=\"text\" variant=\"warning\"></ds-badge>\n            <ds-badge content=\"Destructive\" contentType=\"text\" variant=\"destructive\"></ds-badge>\n            <ds-badge content=\"Blue\" contentType=\"text\" variant=\"blue\"></ds-badge>\n            <ds-badge content=\"Light Purple\" contentType=\"text\" variant=\"light-purple\"></ds-badge>\n            <ds-badge content=\"Pink\" contentType=\"text\" variant=\"pink\"></ds-badge>\n            <ds-badge content=\"Salmon Orange\" contentType=\"text\" variant=\"salmon-orange\"></ds-badge>\n            <ds-badge content=\"Orange\" contentType=\"text\" variant=\"orange\"></ds-badge>\n            <ds-badge content=\"Lime Green\" contentType=\"text\" variant=\"lime-green\"></ds-badge>\n            <ds-badge content=\"Grey\" contentType=\"text\" variant=\"grey\"></ds-badge>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Icon + Text</h3>\n          <div style=\"display: flex; gap: 8px;\">\n            <ds-badge content=\"Feature\" contentType=\"icon-text\" leadingIcon=\"remixStarLine\" variant=\"default\"></ds-badge>\n            <ds-badge content=\"Premium\" contentType=\"icon-text\" leadingIcon=\"remixStarFill\" variant=\"brand\"></ds-badge>\n            <ds-badge content=\"Verified\" contentType=\"icon-text\" leadingIcon=\"remixCheckboxCircleFill\" variant=\"success\"></ds-badge>\n            <ds-badge content=\"Alert\" contentType=\"icon-text\" leadingIcon=\"remixAlertFill\" variant=\"warning\"></ds-badge>\n            <ds-badge content=\"Error\" contentType=\"icon-text\" leadingIcon=\"remixErrorWarningFill\" variant=\"destructive\"></ds-badge>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Indicator + Text (Always white background)</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px;\">\n            <ds-badge content=\"Default\" contentType=\"indicator-text\" variant=\"default\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Brand\" contentType=\"indicator-text\" variant=\"brand\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Success\" contentType=\"indicator-text\" variant=\"success\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Warning\" contentType=\"indicator-text\" variant=\"warning\" indicatorShape=\"triangle\"></ds-badge>\n            <ds-badge content=\"Destructive\" contentType=\"indicator-text\" variant=\"destructive\" indicatorShape=\"square\"></ds-badge>\n            <ds-badge content=\"Blue\" contentType=\"indicator-text\" variant=\"blue\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Light Purple\" contentType=\"indicator-text\" variant=\"light-purple\" indicatorShape=\"diamond\"></ds-badge>\n            <ds-badge content=\"Pink\" contentType=\"indicator-text\" variant=\"pink\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Salmon Orange\" contentType=\"indicator-text\" variant=\"salmon-orange\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Orange\" contentType=\"indicator-text\" variant=\"orange\" indicatorShape=\"triangle\"></ds-badge>\n            <ds-badge content=\"Lime Green\" contentType=\"indicator-text\" variant=\"lime-green\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Grey\" contentType=\"indicator-text\" variant=\"grey\" indicatorShape=\"circle\"></ds-badge>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "CustomSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'remixSearchLine',\n    size: '48px',\n    color: 'brand'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    isSidebarCollapsed: false,\n  },\n  render: () => ({\n    template: '<ds-debug-wrapper></ds-debug-wrapper>'\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'initials',\n    size: 'md',\n    initials: 'JD',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Badge',\n    contentType: 'text',\n    variant: 'default',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'primary',\n    size: 'md',\n    disabled: false,\n    loading: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `<ds-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Default Button</ds-button>`,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"width: 360px;\">\n        <ds-form-field [label]=\"label\" [description]=\"description\" [labelId]=\"labelId\" [descriptionId]=\"descriptionId\">\n          <ds-input ariaLabelledBy=\"email-label\" ariaDescribedBy=\"email-desc\" placeholder=\"you@example.com\"></ds-input>\n        </ds-form-field>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Basic header details example with a primary action and more actions menu. This demonstrates the typical layout for an entity detail page.'\n      }\n    }\n  },\n  args: {\n    title: 'Woods Augusthus',\n    showPrimaryAction: true,\n    primaryActionText: 'Follow',\n    primaryActionIcon: 'remixUserFollowLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: false,\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"User name\"\n            value=\"Woods Augusthus\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"WA\"\n          />\n          <ds-data-item\n            label=\"Company name\"\n            value=\"Propbinder Inc.\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"PI\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'remixHomeLine',\n    size: '20px'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/input/ds-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/label/ds-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    className: '',\n    size: 'md',\n  },\n  render: (args) => ({\n    props: {\n      ...args\n    },\n    styles: [`\n      :host {\n        display: block;\n        padding: 1rem;\n        background: white;\n      }\n    `],\n    template: `\n      <ds-label [className]=\"className\" [for]=\"for\" [id]=\"id\" [size]=\"size\">\n        Label Text\n      </ds-label>\n    `\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'This is a link',\n    href: '#',\n    showIcon: false,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'default',\n    disabled: false,\n    required: false,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    groups: demoGroups,\n    ariaLabel: 'Main navigation',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [ariaLabel]=\"ariaLabel\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    text: 'This is a helpful tooltip',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-tooltip [text]=\"text\">\n        <ds-button variant=\"primary\">Hover me</ds-button>\n      </ds-tooltip>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "demoGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SidebarGroup[]",
                "defaultValue": "[\n  {\n    id: 'grp-top',\n    label: '',\n    showLabel: false,\n    items: [\n      { id: 'inbox', icon: 'remixInboxLine', label: 'Inbox', badgeText: '3' },\n      { id: 'my-tasks', icon: 'remixTaskLine', label: 'My tasks' },\n    ],\n  },\n  {\n    id: 'grp-service',\n    label: 'Service hub',\n    items: [\n      { id: 'inquiries', icon: 'remixQuestionAnswerLine', label: 'Inquiries' },\n      { id: 'tasks', icon: 'remixClipboardLine', label: 'Tasks' },\n      { id: 'documents', icon: 'remixFile2Line', label: 'Documents' },\n      { id: 'notices', icon: 'remixNotificationLine', label: 'Notices' },\n    ],\n  },\n  {\n    id: 'grp-company',\n    label: 'Company',\n    items: [\n      { id: 'dashboard', icon: 'remixLayout4Line', label: 'Dashboard' },\n      { id: 'ratings', icon: 'remixStarSmileLine', label: 'Ratings' },\n      { id: 'calendar', icon: 'remixCalendarLine', label: 'Calendar' },\n      { id: 'reports', icon: 'remixBarChart2Line', label: 'Reports' },\n    ],\n  },\n  {\n    id: 'grp-catalog',\n    label: 'Catalog',\n    items: [\n      { id: 'customers', icon: 'remixUser3Line', label: 'Customers' },\n      { id: 'portfolios', icon: 'remixFolderLine', label: 'Portfolios' },\n      { id: 'properties', icon: 'remixBuilding2Line', label: 'Properties' },\n      { id: 'leases', icon: 'remixFileList3Line', label: 'Leases' },\n    ],\n  },\n  {\n    id: 'grp-entities',\n    label: 'Entity Details (Demo)',\n    items: [\n      { id: 'property-detail', icon: 'remixBuilding2Line', label: 'Sunset Boulevard Apartments' },\n      { id: 'lease-detail', icon: 'remixFileList3Line', label: 'Lease Agreement #LA-2024-001' },\n      { id: 'tenant-detail', icon: 'remixUser3Line', label: 'Sarah Johnson' },\n      { id: 'inquiry-detail', icon: 'remixQuestionAnswerLine', label: 'Inquiry #INQ-2024-045' },\n    ],\n  },\n]"
            },
            {
                "name": "demoGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SidebarGroup[]",
                "defaultValue": "[\n  {\n    id: 'servicehub',\n    label: 'SERVICEHUB',\n    items: [\n      { id: 'inbox', label: 'Inbox', icon: 'remixMailLine', badgeText: '2' },\n      { id: 'inquiries', label: 'Inquiries', icon: 'remixQuestionAnswerLine', badgeText: '2' },\n      { id: 'tasks', label: 'Tasks', icon: 'remixTaskLine' },\n      { id: 'surveys', label: 'Surveys', icon: 'remixSurveyLine' },\n    ],\n  },\n  {\n    id: 'company',\n    label: 'COMPANY',\n    items: [\n      { id: 'dashboard', label: 'Dashboard', icon: 'remixDashboardLine' },\n      { id: 'rating', label: 'Rating', icon: 'remixStarLine' },\n      { id: 'calendar', label: 'Calendar', icon: 'remixCalendarLine' },\n      { id: 'settings', label: 'Settings', icon: 'remixSettings4Line' },\n    ],\n  },\n  {\n    id: 'kartoteker',\n    label: 'KARTOTEKER',\n    items: [\n      { id: 'customers', label: 'Customers', icon: 'remixTeamLine' },\n      { id: 'companies', label: 'Companies', icon: 'remixBuilding4Line' },\n      { id: 'properties', label: 'Properties', icon: 'remixBuilding2Line' },\n      { id: 'leases', label: 'Leases', icon: 'remixFileListLine' },\n      { id: 'tenants', label: 'Tenants', icon: 'remixUserLine' },\n      { id: 'vendors', label: 'Vendors', icon: 'remixStore2Line' },\n      { id: 'vendor-agreements', label: 'Vendor agreements', icon: 'remixFileTextLine' },\n      { id: 'assets', label: 'Assets', icon: 'remixDatabase2Line' },\n      { id: 'real-esg', label: 'Real ESG', icon: 'remixLeafLine' },\n    ],\n  },\n  {\n    id: 'me',\n    label: 'ME',\n      items: [\n        { id: 'my-details', label: 'My details', icon: 'remixUserSettingsLine' },\n        { id: 'whats-new', label: 'What\\'s new', icon: 'remixNotification4Line' },\n      ],\n  },\n]"
            },
            {
                "name": "Diamond",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    shape: 'diamond',\n    variant: 'brand',\n    label: 'Contact',\n  },\n}"
            },
            {
                "name": "DifferentPlacements",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 4rem; padding: 4rem; place-items: center;\">\n        <ds-tooltip text=\"Tooltip on top\">\n          <ds-button>Top</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Tooltip on right\">\n          <ds-button>Right</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Tooltip on bottom\">\n          <ds-button>Bottom</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Tooltip on left\">\n          <ds-button>Left</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Auto placement\">\n          <ds-button>Auto</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Another tooltip\">\n          <ds-button>Center</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    disabled: true,\n  },\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'error',\n  },\n}"
            },
            {
                "name": "groupedOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DsSelectOption[]",
                "defaultValue": "[\n  { id: '1', label: 'Apple', value: 'apple', group: 'Fruits' },\n  { id: '2', label: 'Banana', value: 'banana', group: 'Fruits' },\n  { id: '3', label: 'Orange', value: 'orange', group: 'Fruits' },\n  { id: '4', label: 'Carrot', value: 'carrot', group: 'Vegetables' },\n  { id: '5', label: 'Broccoli', value: 'broccoli', group: 'Vegetables' },\n  { id: '6', label: 'Potato', value: 'potato', group: 'Vegetables' },\n]"
            },
            {
                "name": "HorizontalAvatarIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Owner',\n    value: 'System User',\n    layout: 'horizontal',\n    valueType: 'avatar-text',\n    avatarType: 'icon',\n    avatarIconName: 'remixRobotFill',\n  },\n}"
            },
            {
                "name": "HorizontalAvatarPhoto",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Created by',\n    value: 'Sarah Wilson',\n    layout: 'horizontal',\n    valueType: 'avatar-text',\n    avatarType: 'photo',\n    avatarSrc: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face',\n  },\n}"
            },
            {
                "name": "HorizontalBadgeIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Status',\n    layout: 'horizontal',\n    valueType: 'badge',\n    badgeVariant: 'success',\n    badgeContentType: 'icon-text',\n    badgeContent: 'Completed',\n    badgeIcon: 'remixCheckboxCircleFill',\n  },\n}"
            },
            {
                "name": "HorizontalBadgeIndicator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Type',\n    layout: 'horizontal',\n    valueType: 'badge',\n    badgeVariant: 'brand',\n    badgeContentType: 'indicator-text',\n    badgeContent: 'Premium',\n    badgeIndicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "HorizontalIconText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Location',\n    value: 'New York, NY',\n    layout: 'horizontal',\n    valueType: 'icon-text',\n    iconName: 'remixMapPin2Fill',\n  },\n}"
            },
            {
                "name": "HorizontalText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Full Name',\n    value: 'John Doe',\n    layout: 'horizontal',\n    valueType: 'text',\n  },\n}"
            },
            {
                "name": "IconButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <ds-tooltip text=\"Add to favorites\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixStarLine\" \n            ariaLabel=\"Favorite\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Settings and preferences\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixSettingsLine\" \n            ariaLabel=\"Settings\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"More options menu\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixMoreLine\" \n            ariaLabel=\"More options\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Delete permanently\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixDeleteBinLine\" \n            ariaLabel=\"Delete\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "IconButtonVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixStarLine\" \n          ariaLabel=\"Favorite\"\n          variant=\"primary\"\n        ></ds-button>\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixSettingsLine\" \n          ariaLabel=\"Settings\"\n          variant=\"secondary\"\n        ></ds-button>\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixMoreLine\" \n          ariaLabel=\"More options\"\n          variant=\"ghost\"\n        ></ds-button>\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixDeleteBinLine\" \n          ariaLabel=\"Delete\"\n          variant=\"destructive\"\n        ></ds-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "IconOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Icons Only</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px; align-items: center;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"square\" variant=\"destructive\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"diamond\" variant=\"success\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"triangle\" variant=\"warning\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"pentagon\" variant=\"blue\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "IconTextBrand",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'New Feature',\n    contentType: 'icon-text',\n    leadingIcon: 'remixStarFill',\n    variant: 'brand',\n  },\n}"
            },
            {
                "name": "IconTextDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Feature',\n    contentType: 'icon-text',\n    leadingIcon: 'remixStarLine',\n    variant: 'default',\n  },\n}"
            },
            {
                "name": "IconTextDestructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Critical',\n    contentType: 'icon-text',\n    leadingIcon: 'remixErrorWarningFill',\n    variant: 'destructive',\n  },\n}"
            },
            {
                "name": "IconTextSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Verified',\n    contentType: 'icon-text',\n    leadingIcon: 'remixCheckboxCircleFill',\n    variant: 'success',\n  },\n}"
            },
            {
                "name": "IconTextWarning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Attention',\n    contentType: 'icon-text',\n    leadingIcon: 'remixAlertFill',\n    variant: 'warning',\n  },\n}"
            },
            {
                "name": "IconType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"sm\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Small (6px radius)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Medium (8px radius)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"lg\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Large (12px radius)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"xl\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">XLarge (16px radius)</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "IconVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Default User</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixTeamFill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Team</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixBuildingFill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Organization</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixRobotFill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Bot</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "IndicatorTextBlue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Info',\n    contentType: 'indicator-text',\n    variant: 'blue',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextBrand",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'In Progress',\n    contentType: 'indicator-text',\n    variant: 'brand',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Default',\n    contentType: 'indicator-text',\n    variant: 'default',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextDestructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Failed',\n    contentType: 'indicator-text',\n    variant: 'destructive',\n    indicatorShape: 'square',\n  },\n}"
            },
            {
                "name": "IndicatorTextGrey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Neutral',\n    contentType: 'indicator-text',\n    variant: 'grey',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextLightPurple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Special',\n    contentType: 'indicator-text',\n    variant: 'light-purple',\n    indicatorShape: 'diamond',\n  },\n}"
            },
            {
                "name": "IndicatorTextLimeGreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Fresh',\n    contentType: 'indicator-text',\n    variant: 'lime-green',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextOrange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Alert',\n    contentType: 'indicator-text',\n    variant: 'orange',\n    indicatorShape: 'triangle',\n  },\n}"
            },
            {
                "name": "IndicatorTextPink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Accent',\n    contentType: 'indicator-text',\n    variant: 'pink',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextSalmonOrange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Warm',\n    contentType: 'indicator-text',\n    variant: 'salmon-orange',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Completed',\n    contentType: 'indicator-text',\n    variant: 'success',\n    indicatorShape: 'circle',\n  },\n}"
            },
            {
                "name": "IndicatorTextWarning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Pending',\n    contentType: 'indicator-text',\n    variant: 'warning',\n    indicatorShape: 'triangle',\n  },\n}"
            },
            {
                "name": "InitiallyCollapsed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    isMobileOverride: false, // Force desktop mode\n    isSidebarCollapsed: true,\n  },\n  render: Default.render,\n}"
            },
            {
                "name": "InitialsType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">John Doe</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"AS\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Alice Smith</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"MJ\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Michael Johnson</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"EB\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Emily Brown</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Interactive App Shell',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Click on different sidebar items to see how the topbar updates with contextual information. Use the action buttons to toggle sidebar collapse and breadcrumb visibility.',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'primary',\n    size: 'md',\n    leadingIcon: 'remixThumbUpLine',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      clickCount: 0,\n      onClick: function(event: MouseEvent) {\n        this['clickCount']++;\n        console.log('Button clicked!', event);\n      }\n    },\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: center;\">\n        <ds-button \n          [variant]=\"variant\"\n          [size]=\"size\"\n          [leadingIcon]=\"leadingIcon\"\n          (clicked)=\"onClick($event)\"\n        >\n          Like ({{clickCount}})\n        </ds-button>\n        <p style=\"font-size: 0.875rem; color: var(--color-gray-600);\">\n          Click count: {{clickCount}}\n        </p>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox \n          label=\"Click me to toggle\" \n          (checkedChange)=\"onCheckedChange($event)\">\n        </ds-checkbox>\n        <ds-checkbox \n          label=\"I'm required\" \n          [required]=\"true\"\n          variant=\"error\">\n        </ds-checkbox>\n        <ds-checkbox \n          label=\"Hover over me\"\n          size=\"lg\">\n        </ds-checkbox>\n      </div>\n    `,\n    props: {\n      onCheckedChange: (checked: boolean) => {\n        console.log('Checkbox checked:', checked);\n      },\n    },\n  }),\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'remixSettingsLine',\n    size: '24px',\n    color: 'brand',\n    interactive: true\n  }\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    text: 'Click to see the action',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      clickCount: 0,\n      onClick: function() {\n        this['clickCount']++;\n        console.log('Button clicked from tooltip!');\n      }\n    },\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: center;\">\n        <ds-tooltip [text]=\"text\">\n          <ds-button (clicked)=\"onClick()\">\n            Click me ({{clickCount}})\n          </ds-button>\n        </ds-tooltip>\n        <p style=\"font-size: 0.875rem; color: var(--text-color-default-secondary);\">\n          Click count: {{clickCount}}\n        </p>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "InteractiveExamples",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <ds-link href=\"#\" content=\"Simple link\"></ds-link>\n        <ds-link href=\"https://example.com\" target=\"_blank\" rel=\"noopener noreferrer\" [showIcon]=\"true\" iconName=\"remixExternalLinkLine\" content=\"External link\"></ds-link>\n        <ds-link href=\"mailto:test@example.com\" [showIcon]=\"true\" iconName=\"remixMailLine\" content=\"Email link\"></ds-link>\n        <ds-link href=\"#\" [showIcon]=\"true\" iconName=\"remixDownloadLine\" content=\"Download link\"></ds-link>\n        <ds-link href=\"#\">Link with <strong>formatted</strong> content</ds-link>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "LabelToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <h4>With Labels</h4>\n        <ds-checkbox [showLabel]=\"true\" label=\"I have a visible label\"></ds-checkbox>\n        <ds-checkbox [showLabel]=\"true\" label=\"Me too!\"></ds-checkbox>\n        \n        <h4 style=\"margin-top: 24px;\">Without Labels (using aria-label)</h4>\n        <ds-checkbox [showLabel]=\"false\" ariaLabel=\"Hidden label checkbox 1\"></ds-checkbox>\n        <ds-checkbox [showLabel]=\"false\" ariaLabel=\"Hidden label checkbox 2\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "LargeTextarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'This is a large textarea for longer content...',\n    rows: 8,\n    size: 'lg',\n  },\n}"
            },
            {
                "name": "LayoutComparison",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 24px; max-width: 400px;\">\n        <div>\n          <h3 style=\"margin: 0 0 16px 0; font-size: 16px; font-weight: 500;\">Vertical Layout</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 16px;\">\n            <ds-data-item\n              label=\"Email Address\"\n              value=\"user@example.com\"\n              layout=\"vertical\"\n              valueType=\"text\"\n            />\n            <ds-data-item\n              label=\"Status\"\n              value=\"Active\"\n              layout=\"vertical\"\n              valueType=\"icon-text\"\n              iconName=\"remixCheckboxCircleFill\"\n            />\n            <ds-data-item\n              label=\"Assigned to\"\n              value=\"John Doe\"\n              layout=\"vertical\"\n              valueType=\"avatar-text\"\n              avatarType=\"initials\"\n              avatarInitials=\"JD\"\n            />\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 16px 0; font-size: 16px; font-weight: 500;\">Horizontal Layout</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 16px;\">\n            <ds-data-item\n              label=\"Email Address\"\n              value=\"user@example.com\"\n              layout=\"horizontal\"\n              valueType=\"text\"\n            />\n            <ds-data-item\n              label=\"Status\"\n              value=\"Active\"\n              layout=\"horizontal\"\n              valueType=\"icon-text\"\n              iconName=\"remixCheckboxCircleFill\"\n            />\n            <ds-data-item\n              label=\"Assigned to\"\n              value=\"John Doe\"\n              layout=\"horizontal\"\n              valueType=\"avatar-text\"\n              avatarType=\"initials\"\n              avatarInitials=\"JD\"\n            />\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
            },
            {
                "name": "LeaseDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Lease management example demonstrating how to display lease agreement details with actions for renewal and report generation.'\n      }\n    }\n  },\n  args: {\n    title: 'Lease Agreement #LA-2024-001',\n    showPrimaryAction: true,\n    primaryActionText: 'Renew Lease',\n    primaryActionIcon: 'remixRefreshLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'Generate Report',\n    secondaryActionIcon: 'remixFileTextLine',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Tenant\"\n            value=\"Michael Chen\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"MC\"\n          />\n          <ds-data-item\n            label=\"Property\"\n            value=\"Sunset Blvd Apt 4B\"\n            layout=\"vertical\"\n            valueType=\"icon-text\"\n            iconName=\"remixBuildingLine\"\n          />\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Rent Amount\"\n            value=\"$2,400/month\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n          <ds-data-item\n            label=\"Lease Term\"\n            value=\"12 months\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
            },
            {
                "name": "LoadingStates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button [loading]=\"true\" variant=\"primary\">\n          Saving...\n        </ds-button>\n        <ds-button \n          [loading]=\"true\" \n          variant=\"ghost\"\n          leadingIcon=\"remixUploadLine\"\n        >\n          Uploading...\n        </ds-button>\n        <ds-button \n          [loading]=\"true\" \n          variant=\"secondary\"\n        >\n          Processing\n        </ds-button>\n        <ds-button \n          [loading]=\"true\" \n          variant=\"destructive\"\n        >\n          Deleting...\n        </ds-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "LongText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <ds-tooltip text=\"This is a very long tooltip text that should wrap properly and demonstrate how the tooltip handles longer content gracefully without breaking the layout.\">\n        <ds-button>Long tooltip text</ds-button>\n      </ds-tooltip>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "LongTitleWithBreadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'This is a Very Long Page Title That Should Be Truncated',\n    iconName: 'remixFileTextLine',\n    userInitials: 'LT',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Documents', path: '/documents', isLast: false },\n      { label: 'Reports', path: '/documents/reports', isLast: false },\n      { label: 'This is a Very Long Page Title That Should Be Truncated', path: '/documents/reports/long-title', isLast: true }\n    ],\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppShellShowcaseComponent>",
                "defaultValue": "{\n  title: 'Application shell/App Shell Showcase',\n  component: AppShellShowcaseComponent,\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      description: {\n        component: 'Interactive showcase demonstrating the sidebar and topbar components working together in a complete application shell layout. Click sidebar items to see the topbar update dynamically with different page titles, icons, and breadcrumbs.',\n      },\n    },\n  },\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsAppLayoutComponent>",
                "defaultValue": "{\n  title: 'Application shell/App Layout',\n  component: DsAppLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [DebugWrapperComponent],\n      providers: [ViewportService]\n    }),\n  ],\n  parameters: {\n    layout: 'fullscreen',\n    // Add viewport toolbar to allow easy resizing\n    viewport: {\n      defaultViewport: 'desktop',\n      viewports: {\n        mobile: {\n          name: 'Mobile',\n          styles: {\n            width: '375px',\n            height: '100%',\n          },\n        },\n        tablet: {\n          name: 'Tablet',\n          styles: {\n            width: '768px',\n            height: '100%',\n          },\n        },\n        desktop: {\n          name: 'Desktop',\n          styles: {\n            width: '1024px',\n            height: '100%',\n          },\n        },\n        'large-desktop': {\n          name: 'Large Desktop',\n          styles: {\n            width: '1440px',\n            height: '100%',\n          },\n        },\n      },\n    },\n  },\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsAvatarComponent>",
                "defaultValue": "{\n  title: 'Primitives/Avatar',\n  component: DsAvatarComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    type: {\n      control: { type: 'select' },\n      options: ['initials', 'photo', 'icon'],\n      description: 'The type of avatar display',\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl'],\n      description: 'The size of the avatar',\n    },\n    initials: {\n      control: { type: 'text' },\n      description: 'Initials to display (for initials type)',\n    },\n    src: {\n      control: { type: 'text' },\n      description: 'Image source URL (for photo type)',\n    },\n    alt: {\n      control: { type: 'text' },\n      description: 'Alternative text for the image',\n    },\n    iconName: {\n      control: { type: 'text' },\n      description: 'Icon name to display (for icon type)',\n    },\n    iconColor: {\n      control: { type: 'text' },\n      description: 'Color of the icon (automatically white for icon avatars)',\n      table: { disable: true }, // Disable control since it's always white for icon avatars\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsBadgeComponent>",
                "defaultValue": "{\n  title: 'Primitives/Badge',\n  component: DsBadgeComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'brand', 'success', 'warning', 'destructive', 'blue', 'light-purple', 'pink', 'salmon-orange', 'orange', 'lime-green', 'grey'],\n    },\n    contentType: {\n      control: 'select',\n      options: ['text', 'icon-text', 'indicator-text'],\n    },\n    content: {\n      control: 'text',\n    },\n    leadingIcon: {\n      control: 'text',\n    },\n    indicatorShape: {\n      control: 'select',\n      options: ['circle', 'square', 'diamond', 'triangle', 'pentagon'],\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsButtonComponent>",
                "defaultValue": "{\n  title: 'Primitives/Button',\n  component: DsButtonComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'ghost', 'destructive'],\n      description: 'The visual style variant of the button',\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the button',\n    },\n    disabled: {\n      control: { type: 'boolean' },\n      description: 'Whether the button is disabled',\n    },\n    loading: {\n      control: { type: 'boolean' },\n      description: 'Whether the button is in loading state',\n    },\n    pressed: {\n      control: { type: 'boolean' },\n      description: 'Whether the button appears pressed (for toggle buttons)',\n    },\n    expanded: {\n      control: { type: 'boolean' },\n      description: 'Whether the button is expanded (for dropdown buttons)',\n    },\n    leadingIcon: {\n      control: { type: 'text' },\n      description: 'Icon to display before the button text',\n    },\n    trailingIcon: {\n      control: { type: 'text' },\n      description: 'Icon to display after the button text',\n    },\n    ariaLabel: {\n      control: { type: 'text' },\n      description: 'Accessibility label for the button',\n    },\n    iconOnly: {\n      control: { type: 'boolean' },\n      description: 'Whether the button displays only an icon without text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsCheckboxComponent>",
                "defaultValue": "{\n  title: 'Primitives/Checkbox',\n  component: DsCheckboxComponent,\n  parameters: { layout: 'centered' },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: { type: 'select' }, options: ['default', 'error', 'warning', 'success'] },\n    size: { control: { type: 'select' }, options: ['sm', 'md', 'lg'] },\n    label: { control: 'text' },\n    showLabel: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n    required: { control: 'boolean' },\n    indeterminate: { control: 'boolean' },\n    checkboxId: { control: 'text' },\n    ariaLabel: { control: 'text' },\n    ariaDescribedBy: { control: 'text' },\n    ariaLabelledBy: { control: 'text' },\n  },\n  args: {\n    variant: 'default',\n    size: 'md',\n    label: 'Accept terms and conditions',\n    showLabel: true,\n    disabled: false,\n    required: false,\n    indeterminate: false,\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsFormFieldComponent>",
                "defaultValue": "{\n  title: 'Primitives/Form Field',\n  component: DsFormFieldComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [DsFormFieldComponent, DsInputComponent, NgpError],\n    }),\n  ],\n  tags: ['autodocs'],\n  parameters: { layout: 'centered' },\n  argTypes: {\n    label: { control: 'text' },\n    description: { control: 'text' },\n    labelId: { control: 'text' },\n    descriptionId: { control: 'text' },\n  },\n  args: {\n    label: 'Email',\n    description: 'We will never share your email.',\n    labelId: 'email-label',\n    descriptionId: 'email-desc',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsDataItemComponent>",
                "defaultValue": "{\n  title: 'Primitives/Data Item',\n  component: DsDataItemComponent,\n  parameters: {\n    layout: 'padded',\n    docs: {\n      description: {\n        component: `\nA flexible data item component for displaying label-value pairs with multiple layout options and value types. Perfect for user profiles, task details, settings panels, and structured data displays.\n\n## Features\n\n- **Two Layout Types**: Vertical and horizontal arrangements for different use cases\n- **Fixed Value Height**: 32px height for consistent alignment across all value types\n- **Four Value Types**: Text, Icon+Text, Avatar+Text, and Badge variants\n- **Responsive Design**: Horizontal layout automatically collapses to vertical on mobile\n- **Consistent Spacing**: 8px gap between elements in value container\n- **Semantic Typography**: Uses ui-sm-regular (14px, 400 weight) for value text\n\n## Layout Types\n\n### Vertical Layout\nStacks label above value with 4px gap. Ideal for compact displays, mobile layouts, and when you need to conserve horizontal space.\n\n### Horizontal Layout\nPlaces label and value side-by-side with 12px gap. Label container has fixed 128px width for consistent alignment across multiple data items.\n\n## Value Types\n\n### Text Only\nSimple text display using ui-sm-regular typography with primary text color.\n\n### Icon + Text\n16px icon with secondary color paired with text. Perfect for status indicators, locations, or categorized information.\n\n### Avatar + Text\n20x20px avatar (xs size) with text. Supports all avatar types: initials, photo, and icon. Ideal for user assignments, ownership, or person-related data.\n\n### Badge\nFull badge component with all variants and content types. Perfect for status, priority, categories, or any labeled information.\n\nFor complete documentation, properties reference, and implementation guidelines, see the [Data Item README](/?path=/docs/components-data-item--docs).\n        `,\n      },\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The label text to display',\n    },\n    value: {\n      control: 'text',\n      description: 'The value text to display (not used for badge type)',\n    },\n    layout: {\n      control: 'select',\n      options: ['vertical', 'horizontal'],\n      description: 'Layout arrangement of label and value',\n    },\n    valueType: {\n      control: 'select',\n      options: ['text', 'icon-text', 'avatar-text', 'badge'],\n      description: 'Type of value display',\n    },\n    iconName: {\n      control: 'text',\n      description: 'Icon name for icon-text type',\n      if: { arg: 'valueType', eq: 'icon-text' },\n    },\n    avatarType: {\n      control: 'select',\n      options: ['initials', 'photo', 'icon'],\n      description: 'Avatar type for avatar-text type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    avatarInitials: {\n      control: 'text',\n      description: 'Avatar initials for initials type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    avatarSrc: {\n      control: 'text',\n      description: 'Avatar image source for photo type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    avatarIconName: {\n      control: 'text',\n      description: 'Avatar icon name for icon type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    badgeVariant: {\n      control: 'select',\n      options: ['default', 'brand', 'success', 'warning', 'destructive', 'blue', 'light-purple', 'pink', 'salmon-orange', 'orange', 'lime-green', 'grey'],\n      description: 'Badge color variant',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeContentType: {\n      control: 'select',\n      options: ['text', 'icon-text', 'indicator-text'],\n      description: 'Badge content type',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeContent: {\n      control: 'text',\n      description: 'Badge content text',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeIcon: {\n      control: 'text',\n      description: 'Badge icon name for icon-text type',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeIndicatorShape: {\n      control: 'select',\n      options: ['circle', 'square'],\n      description: 'Badge indicator shape for indicator-text type',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n  },\n  args: {\n    label: 'Email',\n    value: 'user@example.com',\n    layout: 'vertical',\n    valueType: 'text',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsHeaderDetailsComponent>",
                "defaultValue": "{\n  title: 'Primitives/Headers/Header Details',\n  component: DsHeaderDetailsComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [DsDataItemComponent]\n    })\n  ],\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      story: {\n        inline: true,\n        height: 'auto'\n      },\n      description: {\n        component: `\n# Header Details Component\n\nA specialized header component designed for entity detail pages such as Properties, Leases, Inquiries, Assets, and other business entities. It provides a consistent layout with a title row, configurable actions, and flexible content slots for metadata display.\n\n## Design Principles\n\n- **Consistent Spacing**: 24px top padding and gaps for visual hierarchy\n- **Content-First**: Responsive width (10/12 columns of parent) ensures optimal reading experience  \n- **Action-Oriented**: Prominent placement of primary and secondary actions\n- **Flexible Content**: Slot-based architecture for customizable metadata layouts\n- **Responsive**: Adapts gracefully from desktop to mobile viewports\n\n## Anatomy\n\n\\`\\`\\`\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  24px padding-top                                           ‚îÇ\n‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ\n‚îÇ  ‚îÇ Title Row                                             ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê           ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îÇ Entity Title    ‚îÇ           ‚îÇ Action Buttons      ‚îÇ ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îÇ (H1, 2xl-medium)‚îÇ           ‚îÇ [Primary][Secondary]‚îÇ ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò           ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ  ‚îÇ\n‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ\n‚îÇ  24px gap                                                   ‚îÇ\n‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ\n‚îÇ  ‚îÇ Details Row (Content Projection)                     ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îÇ Data Item 1 ‚îÇ ‚îÇ Data Item 2 ‚îÇ ‚îÇ Data Item 3 ‚îÇ ... ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îÇ  ‚îÇ\n‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ\n‚îÇ  Width: 83.33% (10/12 columns of parent), centered        ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\\`\\`\\`\n\n## Usage\n\nPerfect for entity detail pages where you need to display:\n- Entity title (e.g., property name, lease reference)\n- Action buttons (edit, delete, follow, etc.)\n- Metadata items using ds-data-item components\n\nThe details row uses content projection with \\`slot=\"details\"\\` to allow flexible arrangement of data items.\n\n## Content Projection\n\n\\`\\`\\`html\n<ds-header-details title=\"Entity Name\">\n  <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 24px;\">\n    <ds-data-item label=\"Field 1\" value=\"Value 1\" layout=\"horizontal\" />\n    <ds-data-item label=\"Field 2\" value=\"Value 2\" layout=\"horizontal\" />\n  </div>\n</ds-header-details>\n\\`\\`\\`\n\n## Best Practices\n\n### Do ‚úÖ\n- Use descriptive, entity-specific titles\n- Limit to 2-3 primary actions to avoid overwhelming users\n- Use horizontal layout for data items in the details row\n- Provide meaningful action labels and icons\n\n### Don't ‚ùå\n- Don't use generic titles like \"Details\" or \"Entity\"\n- Don't overcrowd the actions area with too many buttons\n- Don't mix vertical and horizontal data item layouts\n- Don't forget to handle action click events\n\n## Responsive Behavior\n\n- **Desktop (>768px)**: Full horizontal layout with side-by-side title and actions\n- **Tablet (‚â§768px)**: Title and actions stack vertically with reduced spacing  \n- **Mobile (‚â§480px)**: Compact spacing and optimized touch targets\n        `\n      }\n    }\n  },\n  argTypes: {\n    title: {\n      control: 'text',\n      description: 'The main title displayed in the header'\n    },\n    showPrimaryAction: {\n      control: 'boolean',\n      description: 'Whether to show the primary action button'\n    },\n    primaryActionText: {\n      control: 'text',\n      description: 'Text for the primary action button'\n    },\n    primaryActionIcon: {\n      control: 'text',\n      description: 'Icon for the primary action button'\n    },\n    primaryActionVariant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'ghost', 'destructive'],\n      description: 'Visual variant for the primary action button'\n    },\n    showSecondaryAction: {\n      control: 'boolean',\n      description: 'Whether to show the secondary action button'\n    },\n    secondaryActionText: {\n      control: 'text',\n      description: 'Text for the secondary action button'\n    },\n    secondaryActionIcon: {\n      control: 'text',\n      description: 'Icon for the secondary action button'\n    },\n    secondaryActionVariant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'ghost', 'destructive'],\n      description: 'Visual variant for the secondary action button'\n    },\n    showMoreActions: {\n      control: 'boolean',\n      description: 'Whether to show the more actions (three dots) button'\n    }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsIconComponent>",
                "defaultValue": "{\n  title: 'Primitives/Icon',\n  component: DsIconComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    name: {\n      control: { type: 'text' },\n      description: 'The name of the icon to display',\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['12px', '14px', '16px', '18px', '20px', '22px', '24px', '32px'],\n      description: 'The size of the icon (pixel values or custom CSS value)',\n    },\n    color: {\n      control: { type: 'text' },\n      description: 'The color of the icon. Use predefined values (primary, secondary, tertiary, brand, success, warning, destructive) or any CSS color value (#hex, rgb(), hsl(), var(), etc.)',\n    },\n    interactive: {\n      control: { type: 'boolean' },\n      description: 'Whether the icon has interactive states (hover, active)',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/input/ds-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsInputComponent>",
                "defaultValue": "{\n  title: 'Primitives/Input',\n  component: DsInputComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      story: {\n        inline: true,\n        iframeHeight: 100,\n      }\n    }\n  },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px;\">${story}</div></div>`\n    )\n  ],\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: { type: 'select' }, options: ['default', 'error', 'warning', 'success'] },\n    type: { control: { type: 'select' }, options: ['text', 'email', 'password', 'number', 'tel', 'url', 'search'] },\n    placeholder: { control: 'text' },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    required: { control: 'boolean' },\n    clearable: { control: 'boolean' },\n    leadingIcon: { control: 'text' },\n    trailingIcon: { control: 'text' },\n    ariaLabel: { control: 'text' },\n    ariaDescribedBy: { control: 'text' },\n  },\n  args: {\n    variant: 'default',\n    type: 'text',\n    placeholder: 'Enter text...',\n    disabled: false,\n    readonly: false,\n    required: false,\n    clearable: false,\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/label/ds-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsLabelComponent>",
                "defaultValue": "{\n  title: 'Primitives/Label',\n  component: DsLabelComponent,\n  tags: ['autodocs'],\n  parameters: { layout: 'centered' },\n  decorators: [\n    moduleMetadata({\n      imports: [DsInputComponent],\n    })\n  ],\n  argTypes: {\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes to apply to the label',\n    },\n    for: {\n      control: 'text',\n      description: 'The ID of the form control this label is associated with',\n    },\n    id: {\n      control: 'text',\n      description: 'The ID of the label element',\n    },\n    size: {\n      control: 'radio',\n      options: ['sm', 'md'],\n      description: 'The size of the label text (sm = ui-xs-regular, md = ui-sm-regular)',\n      defaultValue: 'md',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsLinkComponent>",
                "defaultValue": "{\n  title: 'Primitives/Link',\n  component: DsLinkComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    href: {\n      control: 'text',\n    },\n    target: {\n      control: 'select',\n      options: ['_self', '_blank', '_parent', '_top'],\n    },\n    rel: {\n      control: 'text',\n    },\n    content: {\n      control: 'text',\n    },\n    showIcon: {\n      control: 'boolean',\n    },\n    iconName: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsSelectComponent>",
                "defaultValue": "{\n  title: 'Primitives/Select',\n  component: DsSelectComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [FormsModule],\n    }),\n    componentWrapperDecorator(\n      (story) => `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px;\">${story}</div></div>`\n    )\n  ],\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      story: {\n        inline: true,\n        iframeHeight: 100,\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'error', 'warning', 'success'],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    required: {\n      control: 'boolean',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsShapeIndicatorComponent>",
                "defaultValue": "{\n  title: 'Primitives/Shape Indicator',\n  component: DsShapeIndicatorComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    shape: {\n      control: 'select',\n      options: ['circle', 'square', 'diamond', 'triangle', 'pentagon'],\n    },\n    variant: {\n      control: 'select',\n      options: ['default', 'brand', 'success', 'warning', 'destructive', 'blue', 'light-purple', 'pink', 'salmon-orange', 'orange', 'lime-green', 'grey'],\n    },\n    label: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsSidebarComponent>",
                "defaultValue": "{\n  title: 'Application shell/Sidebar',\n  component: DsSidebarComponent,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  tags: ['autodocs'],\n  argTypes: {},\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsTextareaComponent>",
                "defaultValue": "{\n  title: 'Primitives/Textarea',\n  component: DsTextareaComponent,\n  parameters: { layout: 'centered' },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: { type: 'select' }, options: ['default', 'error', 'warning', 'success'] },\n    size: { control: { type: 'select' }, options: ['sm', 'md', 'lg'] },\n    placeholder: { control: 'text' },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    required: { control: 'boolean' },\n    rows: { control: { type: 'number', min: 1, max: 20 } },\n    cols: { control: { type: 'number', min: 10, max: 100 } },\n    maxlength: { control: { type: 'number', min: 1, max: 1000 } },\n    minlength: { control: { type: 'number', min: 0, max: 100 } },\n    ariaLabel: { control: 'text' },\n    ariaDescribedBy: { control: 'text' },\n    ariaLabelledBy: { control: 'text' },\n  },\n  args: {\n    variant: 'default',\n    size: 'md',\n    placeholder: 'Enter your message...',\n    disabled: false,\n    readonly: false,\n    required: false,\n    rows: 4,\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsTooltipComponent>",
                "defaultValue": "{\n  title: 'Primitives/Tooltip',\n  component: DsTooltipComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    text: {\n      control: { type: 'text' },\n      description: 'The text content to display in the tooltip',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DsTopbarComponent>",
                "defaultValue": "{\n  title: 'Application shell/Topbar',\n  component: DsTopbarComponent,\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      description: {\n        component: 'A page header component that displays a page title with icon on the left and action buttons with user avatar on the right. Can optionally show breadcrumb navigation for nested pages.',\n      },\n    },\n  },\n  argTypes: {\n    pageTitle: {\n      control: 'text',\n      description: 'The title of the page',\n    },\n    iconName: {\n      control: 'text',\n      description: 'Icon name to display next to the page title',\n    },\n    userInitials: {\n      control: 'text',\n      description: 'User initials to display in the avatar',\n    },\n    showBreadcrumbs: {\n      control: 'boolean',\n      description: 'Whether to show breadcrumb navigation',\n    },\n    breadcrumbItems: {\n      control: 'object',\n      description: 'Array of breadcrumb items to display',\n    },\n    showFirstAction: {\n      control: 'boolean',\n      description: 'Whether to show the first action button',\n    },\n    firstActionIcon: {\n      control: 'text',\n      description: 'Icon name for the first action button',\n    },\n    firstActionLabel: {\n      control: 'text',\n      description: 'Aria label for the first action button',\n    },\n    showSecondAction: {\n      control: 'boolean',\n      description: 'Whether to show the second action button',\n    },\n    secondActionIcon: {\n      control: 'text',\n      description: 'Icon name for the second action button',\n    },\n    secondActionLabel: {\n      control: 'text',\n      description: 'Aria label for the second action button',\n    },\n  },\n  args: {\n    pageTitle: 'Dashboard',\n    iconName: 'remixHome4Line',\n    userInitials: 'JD',\n    showBreadcrumbs: false,\n    breadcrumbItems: [],\n    showFirstAction: true,\n    firstActionIcon: 'remixNotification3Line',\n    firstActionLabel: 'Notifications',\n    showSecondAction: true,\n    secondActionIcon: 'remixSettings3Line',\n    secondActionLabel: 'Settings',\n  },\n}"
            },
            {
                "name": "MinimalNoActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Minimal header example with no action buttons, useful for read-only entity displays or when actions are handled elsewhere on the page.'\n      }\n    }\n  },\n  args: {\n    title: 'Simple Entity Details',\n    showPrimaryAction: false,\n    showSecondaryAction: false,\n    showMoreActions: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Created\"\n            value=\"March 15, 2024\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n          <ds-data-item\n            label=\"Last Modified\"\n            value=\"Yesterday\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
            },
            {
                "name": "MobileView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Mobile Responsive',\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1',\n    },\n    docs: {\n      description: {\n        story: 'App shell optimized for mobile viewports with responsive behavior.',\n      },\n    },\n  },\n}"
            },
            {
                "name": "MobileView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    title: 'Mobile Responsive Header',\n    showPrimaryAction: true,\n    primaryActionText: 'Edit',\n    primaryActionIcon: 'remixEditLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'Share',\n    secondaryActionIcon: 'remixShareLine',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1'\n    },\n    docs: {\n      description: {\n        story: 'Mobile responsive behavior showing how the header adapts to smaller screens with stacked layout and compact spacing. Data items switch to vertical layout for better mobile experience.'\n      }\n    }\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Owner\"\n            value=\"John Doe\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"JD\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
            },
            {
                "name": "MobileViewWithBreadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1',\n    },\n  },\n  args: {\n    pageTitle: 'Account Details',\n    iconName: 'remixSmartphoneLine',\n    userInitials: 'MB',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Settings', path: '/settings', isLast: false },\n      { label: 'Account', path: '/settings/account', isLast: false },\n      { label: 'Details', path: '/settings/account/details', isLast: true }\n    ],\n  },\n}"
            },
            {
                "name": "NestedPageWithBreadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'Edit Profile',\n    iconName: 'remixUser3Line',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Settings', path: '/settings', isLast: false },\n      { label: 'Users', path: '/settings/users', isLast: false },\n      { label: 'Edit Profile', path: '/settings/users/profile', isLast: true }\n    ],\n  },\n}"
            },
            {
                "name": "NoActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'Read Only Page',\n    iconName: 'remixEyeLine',\n    userInitials: 'RO',\n    showFirstAction: false,\n    showSecondAction: false,\n  },\n}"
            },
            {
                "name": "Overview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'The Header Details component provides a consistent layout for entity detail pages with configurable actions and flexible metadata display.'\n      }\n    }\n  },\n  args: {\n    title: 'Entity Detail Example',\n    showPrimaryAction: true,\n    primaryActionText: 'Edit',\n    primaryActionIcon: 'remixEditLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'Share',\n    secondaryActionIcon: 'remixShareLine',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n        (primaryActionClick)=\"onPrimaryAction($event)\"\n        (secondaryActionClick)=\"onSecondaryAction($event)\"\n        (moreActionsClick)=\"onMoreActions($event)\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Owner\"\n            value=\"Sarah Johnson\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"SJ\"\n          />\n          <ds-data-item\n            label=\"Created\"\n            value=\"March 15, 2024\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n          <ds-data-item\n            label=\"Category\"\n            value=\"Important\"\n            layout=\"vertical\"\n            valueType=\"icon-text\"\n            iconName=\"remixStarFill\"\n          />\n        </div>\n      </ds-header-details>\n    `,\n    methods: {\n      onPrimaryAction: (event: MouseEvent) => {\n        console.log('Primary action clicked:', event);\n      },\n      onSecondaryAction: (event: MouseEvent) => {\n        console.log('Secondary action clicked:', event);\n      },\n      onMoreActions: (event: MouseEvent) => {\n        console.log('More actions clicked:', event);\n      }\n    }\n  })\n}"
            },
            {
                "name": "Pentagon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    shape: 'pentagon',\n    variant: 'brand',\n    label: 'Maintenance',\n  },\n}"
            },
            {
                "name": "PhotoType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n            alt=\"John Doe\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">John Doe</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100&h=100&fit=crop&crop=face\"\n            alt=\"Alice Smith\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Alice Smith</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face\"\n            alt=\"Michael Johnson\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Michael Johnson</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&crop=face\"\n            alt=\"Emily Brown\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Emily Brown</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [provideAllRemixIcons()]\n    })\n  ],\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    options: {\n      storySort: {\n        order: ['*'],\n        method: 'alphabetical'\n      },\n    },\n  },\n}"
            },
            {
                "name": "ProjectOverview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'Project Overview',\n    iconName: 'remixFolderLine',\n    userInitials: 'AM',\n  },\n}"
            },
            {
                "name": "PropertyDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Real estate property management example showing how to display property information with relevant actions like editing and viewing related leases.'\n      }\n    }\n  },\n  args: {\n    title: 'Sunset Boulevard Apartments',\n    showPrimaryAction: true,\n    primaryActionText: 'Edit Property',\n    primaryActionIcon: 'remixEditLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'View Leases',\n    secondaryActionIcon: 'remixFileList3Line',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Property Type\"\n            value=\"Residential\"\n            layout=\"vertical\"\n            valueType=\"icon-text\"\n            iconName=\"remixHome4Line\"\n          />\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Owner\"\n            value=\"Sarah Johnson\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"SJ\"\n          />\n          <ds-data-item\n            label=\"Units\"\n            value=\"24 units\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
            },
            {
                "name": "simpleOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DsSelectOption[]",
                "defaultValue": "[\n  { id: '1', label: 'Option 1', value: 1 },\n  { id: '2', label: 'Option 2', value: 2 },\n  { id: '3', label: 'Option 3', value: 3 },\n  { id: '4', label: 'Option 4', value: 4 },\n]"
            },
            {
                "name": "SingleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'Profile',\n    iconName: 'remixUser3Line',\n    userInitials: 'SA',\n    showFirstAction: true,\n    showSecondAction: false,\n    firstActionIcon: 'remixEditLine',\n    firstActionLabel: 'Edit Profile',\n  },\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"sm\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Small (24px)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Medium (32px)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"lg\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Large (48px)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"xl\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">XLarge (64px)</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <ds-button size=\"sm\">Small</ds-button>\n        <ds-button size=\"md\">Medium</ds-button>\n        <ds-button size=\"lg\">Large</ds-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox size=\"sm\" label=\"Small checkbox\"></ds-checkbox>\n        <ds-checkbox size=\"md\" label=\"Medium checkbox\"></ds-checkbox>\n        <ds-checkbox size=\"lg\" label=\"Large checkbox\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; align-items: center; gap: 16px;\">\n        <ds-icon name=\"remixHomeLine\" size=\"12px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"14px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"16px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"18px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"20px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"22px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"24px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"32px\"></ds-icon>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/label/ds-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    className: '',\n  },\n  render: () => ({\n    styles: [`\n      :host {\n        display: block;\n        padding: 1rem;\n        background: white;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n      }\n    `],\n    template: `\n      <div class=\"container\">\n        <ds-label size=\"sm\">\n          Small Label (ui-xs-regular)\n        </ds-label>\n        <ds-label size=\"md\">\n          Medium Label (ui-sm-regular)\n        </ds-label>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 400px;\">\n        <ds-textarea size=\"sm\" placeholder=\"Small textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea size=\"md\" placeholder=\"Medium textarea\" rows=\"4\"></ds-textarea>\n        <ds-textarea size=\"lg\" placeholder=\"Large textarea\" rows=\"5\"></ds-textarea>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "SlotContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    href: '#',\n    showIcon: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-link [href]=\"href\" [showIcon]=\"showIcon\">\n        Link with <strong>formatted</strong> content\n      </ds-link>\n    `,\n  }),\n}"
            },
            {
                "name": "SlotContentWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    href: 'mailto:contact@example.com',\n    showIcon: true,\n    iconName: 'remixMailLine',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-link [href]=\"href\" [showIcon]=\"showIcon\" [iconName]=\"iconName\">\n        Send us an <em>email</em>\n      </ds-link>\n    `,\n  }),\n}"
            },
            {
                "name": "Square",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    shape: 'square',\n    variant: 'destructive',\n    label: 'Stage tags',\n  },\n}"
            },
            {
                "name": "States",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button>Normal</ds-button>\n        <ds-button [disabled]=\"true\">Disabled</ds-button>\n        <ds-button [loading]=\"true\">Loading</ds-button>\n        <ds-button [pressed]=\"true\" variant=\"ghost\">Pressed</ds-button>\n        <ds-button \n          [expanded]=\"true\" \n          trailingIcon=\"remixArrowDownLine\"\n          variant=\"secondary\"\n        >\n          Expanded\n        </ds-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "States",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox label=\"Unchecked checkbox\"></ds-checkbox>\n        <ds-checkbox label=\"Checked checkbox\" [checked]=\"true\"></ds-checkbox>\n        <ds-checkbox label=\"Indeterminate checkbox\" [indeterminate]=\"true\"></ds-checkbox>\n        <ds-checkbox label=\"Disabled checkbox\" [disabled]=\"true\"></ds-checkbox>\n        <ds-checkbox label=\"Disabled checked checkbox\" [disabled]=\"true\" [checked]=\"true\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "States",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 400px;\">\n        <ds-textarea placeholder=\"Normal textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea placeholder=\"Disabled textarea\" [disabled]=\"true\" rows=\"3\"></ds-textarea>\n        <ds-textarea placeholder=\"Readonly textarea\" [readonly]=\"true\" rows=\"3\"></ds-textarea>\n        <ds-textarea placeholder=\"Required textarea\" [required]=\"true\" rows=\"3\"></ds-textarea>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Static",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'initials',\n    size: 'md',\n    initials: 'JD',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: center;\">\n        <ds-avatar \n          [type]=\"type\"\n          [size]=\"size\"\n          [initials]=\"initials\"\n          [src]=\"src\"\n          [alt]=\"alt\"\n          [iconName]=\"iconName\"\n          [iconColor]=\"iconColor\"\n        ></ds-avatar>\n        <p style=\"font-size: 0.875rem; color: var(--text-color-default-secondary);\">\n          Static avatar with no interactions\n        </p>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'success',\n  },\n}"
            },
            {
                "name": "TaskDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;\">\n        <h3 style=\"margin: 0 0 8px 0; font-size: 18px; font-weight: 600;\">Task Details</h3>\n        \n        <ds-data-item\n          label=\"Title\"\n          value=\"Implement user authentication\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Priority\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"warning\"\n          badgeContentType=\"text\"\n          badgeContent=\"High\"\n        />\n        <ds-data-item\n          label=\"Status\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"blue\"\n          badgeContentType=\"indicator-text\"\n          badgeContent=\"In Progress\"\n          badgeIndicatorShape=\"circle\"\n        />\n        <ds-data-item\n          label=\"Assignee\"\n          value=\"Sarah Wilson\"\n          layout=\"horizontal\"\n          valueType=\"avatar-text\"\n          avatarType=\"photo\"\n          avatarSrc=\"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face\"\n        />\n        <ds-data-item\n          label=\"Due Date\"\n          value=\"March 15, 2024\"\n          layout=\"horizontal\"\n          valueType=\"icon-text\"\n          iconName=\"remixCalendarLine\"\n        />\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
            },
            {
                "name": "TextBlue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Blue',\n    contentType: 'text',\n    variant: 'blue',\n  },\n}"
            },
            {
                "name": "TextBrand",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Brand',\n    contentType: 'text',\n    variant: 'brand',\n  },\n}"
            },
            {
                "name": "TextDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Default',\n    contentType: 'text',\n    variant: 'default',\n  },\n}"
            },
            {
                "name": "TextDestructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Error',\n    contentType: 'text',\n    variant: 'destructive',\n  },\n}"
            },
            {
                "name": "TextGrey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Grey',\n    contentType: 'text',\n    variant: 'grey',\n  },\n}"
            },
            {
                "name": "TextLightPurple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Light Purple',\n    contentType: 'text',\n    variant: 'light-purple',\n  },\n}"
            },
            {
                "name": "TextLimeGreen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Lime Green',\n    contentType: 'text',\n    variant: 'lime-green',\n  },\n}"
            },
            {
                "name": "TextOrange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Orange',\n    contentType: 'text',\n    variant: 'orange',\n  },\n}"
            },
            {
                "name": "TextPink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Pink',\n    contentType: 'text',\n    variant: 'pink',\n  },\n}"
            },
            {
                "name": "TextSalmonOrange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Salmon Orange',\n    contentType: 'text',\n    variant: 'salmon-orange',\n  },\n}"
            },
            {
                "name": "TextSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Success',\n    contentType: 'text',\n    variant: 'success',\n  },\n}"
            },
            {
                "name": "TextWarning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Warning',\n    contentType: 'text',\n    variant: 'warning',\n  },\n}"
            },
            {
                "name": "TopbarDebug",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    isMobileOverride: false, // Force desktop mode\n    isSidebarCollapsed: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-app-layout\n        [sidebarGroups]=\"sidebarGroups\"\n        [isMobileOverride]=\"isMobileOverride\"\n        [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      >\n        <ds-topbar\n          [pageTitle]=\"'Debug Page'\"\n          [iconName]=\"'remixHome4Line'\"\n          [userInitials]=\"'DB'\"\n          [showFirstAction]=\"false\"\n          [showSecondAction]=\"false\"\n        />\n        <div class=\"p-6\">\n          <h2>Debug: Check if topbar renders with minimal props</h2>\n        </div>\n      </ds-app-layout>\n    `,\n  }),\n}"
            },
            {
                "name": "Triangle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    shape: 'triangle',\n    variant: 'blue',\n    label: 'Upcoming',\n  },\n}"
            },
            {
                "name": "UsageExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Stage Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\" label=\"Received\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"diamond\" variant=\"brand\" label=\"Contact\"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Category Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"diamond\" variant=\"brand\" label=\"Maintenance\"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Inspection Status Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"blue\" label=\"Upcoming\"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Defect Status Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"triangle\" variant=\"default\" label=\"Not a defect\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "UserProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;\">\n        <h3 style=\"margin: 0 0 8px 0; font-size: 18px; font-weight: 600;\">User Profile</h3>\n        \n        <ds-data-item\n          label=\"Full Name\"\n          value=\"Sarah Wilson\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Email\"\n          value=\"sarah.wilson@company.com\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Role\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"brand\"\n          badgeContentType=\"text\"\n          badgeContent=\"Admin\"\n        />\n        <ds-data-item\n          label=\"Status\"\n          value=\"Online\"\n          layout=\"horizontal\"\n          valueType=\"icon-text\"\n          iconName=\"remixCheckboxCircleFill\"\n        />\n        <ds-data-item\n          label=\"Manager\"\n          value=\"John Doe\"\n          layout=\"horizontal\"\n          valueType=\"avatar-text\"\n          avatarType=\"initials\"\n          avatarInitials=\"JD\"\n        />\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
            },
            {
                "name": "UserSettings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'User Settings',\n    iconName: 'remixSettings3Line',\n    userInitials: 'SM',\n    firstActionIcon: 'remixSaveLine',\n    firstActionLabel: 'Save Settings',\n    secondActionIcon: 'remixRefreshLine',\n    secondActionLabel: 'Reset Settings',\n  },\n}"
            },
            {
                "name": "ValueTypesShowcase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 400px;\">\n        <ds-data-item\n          label=\"Text Value\"\n          value=\"Simple text content\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Icon + Text\"\n          value=\"With icon prefix\"\n          layout=\"horizontal\"\n          valueType=\"icon-text\"\n          iconName=\"remixStarFill\"\n        />\n        <ds-data-item\n          label=\"Avatar + Text\"\n          value=\"John Doe\"\n          layout=\"horizontal\"\n          valueType=\"avatar-text\"\n          avatarType=\"initials\"\n          avatarInitials=\"JD\"\n        />\n        <ds-data-item\n          label=\"Badge Value\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"success\"\n          badgeContentType=\"icon-text\"\n          badgeContent=\"Verified\"\n          badgeIcon=\"remixShieldCheckFill\"\n        />\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button variant=\"primary\">Primary</ds-button>\n        <ds-button variant=\"secondary\">Secondary</ds-button>\n        <ds-button variant=\"ghost\">Ghost</ds-button>\n        <ds-button variant=\"destructive\">Destructive</ds-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox variant=\"default\" label=\"Default checkbox\"></ds-checkbox>\n        <ds-checkbox variant=\"success\" label=\"Success checkbox\"></ds-checkbox>\n        <ds-checkbox variant=\"warning\" label=\"Warning checkbox\"></ds-checkbox>\n        <ds-checkbox variant=\"error\" label=\"Error checkbox\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 400px;\">\n        <ds-textarea variant=\"default\" placeholder=\"Default textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea variant=\"success\" placeholder=\"Success textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea variant=\"warning\" placeholder=\"Warning textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea variant=\"error\" placeholder=\"Error textarea\" rows=\"3\"></ds-textarea>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "VerticalAvatarInitials",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Assigned to',\n    value: 'John Doe',\n    layout: 'vertical',\n    valueType: 'avatar-text',\n    avatarType: 'initials',\n    avatarInitials: 'JD',\n  },\n}"
            },
            {
                "name": "VerticalBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Priority',\n    layout: 'vertical',\n    valueType: 'badge',\n    badgeVariant: 'destructive',\n    badgeContentType: 'text',\n    badgeContent: 'High',\n  },\n}"
            },
            {
                "name": "VerticalIconText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Status',\n    value: 'Active',\n    layout: 'vertical',\n    valueType: 'icon-text',\n    iconName: 'remixCheckboxCircleFill',\n  },\n}"
            },
            {
                "name": "VerticalText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Email Address',\n    value: 'user@example.com',\n    layout: 'vertical',\n    valueType: 'text',\n  },\n}"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'warning',\n  },\n}"
            },
            {
                "name": "WithBreadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'With Breadcrumbs',\n  render: () => ({\n    template: `\n      <app-shell-showcase style=\"display: block;\"></app-shell-showcase>\n      <script>\n        setTimeout(() => {\n          const component = document.querySelector('app-shell-showcase');\n          if (component) {\n            component.onItemSelected('reports');\n          }\n        }, 100);\n      </script>\n    `,\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'App shell showing breadcrumb navigation in the topbar for nested page contexts.',\n      },\n    },\n  },\n}"
            },
            {
                "name": "WithBreadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    pageTitle: 'PFA Pension',\n    iconName: 'remixBuilding4Line',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Customers', path: '/customers', isLast: false },\n      { label: 'PFA Pension', path: '/customers/pfa-pension', isLast: true }\n    ],\n  },\n}"
            },
            {
                "name": "WithButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem; align-items: center; flex-wrap: wrap;\">\n        <ds-tooltip text=\"Primary action button\">\n          <ds-button variant=\"primary\">Primary</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Secondary action button\">\n          <ds-button variant=\"secondary\">Secondary</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Ghost style button\">\n          <ds-button variant=\"ghost\">Ghost</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Destructive action - use with caution\">\n          <ds-button variant=\"destructive\">Delete</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "WithCustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'Download file',\n    href: '#',\n    showIcon: true,\n    iconName: 'remixDownloadLine',\n  },\n}"
            },
            {
                "name": "WithDisabledOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: [\n      { id: '1', label: 'Option 1', value: 1 },\n      { id: '2', label: 'Option 2', value: 2, disabled: true },\n      { id: '3', label: 'Option 3', value: 3 },\n      { id: '4', label: 'Option 4', value: 4, disabled: true },\n    ],\n    placeholder: 'Select an option',\n  },\n}"
            },
            {
                "name": "WithError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"width: 360px;\">\n        <ds-form-field [label]=\"label\" [description]=\"description\" [labelId]=\"labelId\" [descriptionId]=\"descriptionId\">\n          <ds-input ariaLabelledBy=\"email-label\" ariaDescribedBy=\"email-desc\" placeholder=\"you@example.com\"></ds-input>\n          <p ngpError ngpErrorValidator=\"required\">Email is required.</p>\n        </ds-form-field>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "WithFormElements",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 2rem; align-items: flex-start; width: 300px;\">\n        <ds-tooltip text=\"Enter your email address\">\n          <ds-input \n            type=\"email\" \n            placeholder=\"Email address\"\n            variant=\"default\"\n          />\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Check this to receive notifications\">\n          <div style=\"display: flex; align-items: center; gap: 8px;\">\n            <ds-checkbox />\n            <ds-label>Subscribe to notifications</ds-label>\n          </div>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"This icon represents settings\">\n          <ds-icon name=\"remixSettingsLine\" size=\"24px\" style=\"cursor: pointer;\" />\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Submit your information\">\n          <ds-button variant=\"primary\" size=\"sm\">Submit</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsInputComponent, DsCheckboxComponent, DsLabelComponent, DsIconComponent, DsButtonComponent],\n    },\n  }),\n}"
            },
            {
                "name": "WithFormField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <ds-form-field \n        label=\"Newsletter Preferences\" \n        description=\"Choose your newsletter preferences\"\n        style=\"width: 400px;\">\n        <div style=\"display: grid; gap: 12px; margin-top: 8px;\">\n          <ds-checkbox label=\"Weekly newsletter\"></ds-checkbox>\n          <ds-checkbox label=\"Product updates\"></ds-checkbox>\n          <ds-checkbox label=\"Marketing emails\" variant=\"warning\"></ds-checkbox>\n          <ds-checkbox label=\"Security notifications\" [checked]=\"true\" [disabled]=\"true\"></ds-checkbox>\n        </div>\n      </ds-form-field>\n    `,\n  }),\n  parameters: {\n    docs: {\n      source: {\n        code: `<ds-form-field \n  label=\"Newsletter Preferences\" \n  description=\"Choose your newsletter preferences\">\n  <div style=\"display: grid; gap: 12px; margin-top: 8px;\">\n    <ds-checkbox label=\"Weekly newsletter\"></ds-checkbox>\n    <ds-checkbox label=\"Product updates\"></ds-checkbox>\n    <ds-checkbox label=\"Marketing emails\" variant=\"warning\"></ds-checkbox>\n    <ds-checkbox label=\"Security notifications\" [checked]=\"true\" [disabled]=\"true\"></ds-checkbox>\n  </div>\n</ds-form-field>`,\n      },\n    },\n  },\n}"
            },
            {
                "name": "WithFormField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <ds-form-field \n        label=\"Message\" \n        description=\"Please provide detailed feedback\"\n        style=\"width: 400px;\">\n        <ds-textarea \n          placeholder=\"Enter your feedback here...\" \n          rows=\"5\"\n          [required]=\"true\">\n        </ds-textarea>\n      </ds-form-field>\n    `,\n  }),\n  parameters: {\n    docs: {\n      source: {\n        code: `<ds-form-field \n  label=\"Message\" \n  description=\"Please provide detailed feedback\">\n  <ds-textarea \n    placeholder=\"Enter your feedback here...\" \n    rows=\"5\"\n    [required]=\"true\">\n  </ds-textarea>\n</ds-form-field>`,\n      },\n    },\n  },\n}"
            },
            {
                "name": "WithGlobalAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { groups: demoGroups, showGlobalAction: true, globalActionLabel: 'New', globalActionIcon: 'remixAddLine' },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [showGlobalAction]=\"showGlobalAction\" [globalActionLabel]=\"globalActionLabel\" [globalActionIcon]=\"globalActionIcon\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "WithGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: groupedOptions,\n    placeholder: 'Select food',\n    variant: 'default',\n  },\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: 'External link',\n    href: 'https://example.com',\n    target: '_blank',\n    rel: 'noopener noreferrer',\n    showIcon: true,\n    iconName: 'remixExternalLinkLine',\n  },\n}"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button leadingIcon=\"remixHomeLine\">\n          Home\n        </ds-button>\n        <ds-button trailingIcon=\"remixArrowRightLine\">\n          Continue\n        </ds-button>\n        <ds-button \n          leadingIcon=\"remixUserLine\"\n          variant=\"secondary\"\n        >\n          Profile\n        </ds-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "WithInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/label/ds-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    className: '',\n    for: 'example-input',\n    size: 'md',\n  },\n  render: (args) => ({\n    props: {\n      ...args\n    },\n    styles: [`\n      :host {\n        display: block;\n        padding: 1rem;\n        background: white;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n      }\n    `],\n    template: `\n      <div class=\"container\">\n        <ds-label [className]=\"className\" [for]=\"for\" [id]=\"id\" [size]=\"size\">\n          Input Label\n        </ds-label>\n        <ds-input id=\"example-input\" placeholder=\"Enter text...\"></ds-input>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "WithLeadingIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/input/ds-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { leadingIcon: 'remixUserLine', placeholder: 'Username' },\n}"
            },
            {
                "name": "WithLimits",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'This textarea has a 100 character limit...',\n    maxlength: 100,\n    minlength: 10,\n    rows: 4,\n  },\n}"
            },
            {
                "name": "WithoutLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showLabel: false,\n    ariaLabel: 'Accept terms and conditions',\n  },\n}"
            },
            {
                "name": "WithPlaceholder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { \n    placeholder: 'Write your thoughts here...',\n    rows: 6 \n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AppShellShowcaseComponent>",
                "file": "src/app/pages/app-shell-showcase.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsAppLayoutComponent>",
                "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsAvatarComponent>",
                "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsBadgeComponent>",
                "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsButtonComponent>",
                "file": "src/app/components/ui/button/ds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsCheckboxComponent>",
                "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsFormFieldComponent>",
                "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsDataItemComponent>",
                "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsHeaderDetailsComponent>",
                "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsIconComponent>",
                "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsInputComponent>",
                "file": "src/app/components/ui/input/ds-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsLabelComponent>",
                "file": "src/app/components/ui/label/ds-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsLinkComponent>",
                "file": "src/app/components/ui/link/ds-link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsSelectComponent>",
                "file": "src/app/components/ui/select/ds-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsShapeIndicatorComponent>",
                "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsSidebarComponent>",
                "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsTextareaComponent>",
                "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsTooltipComponent>",
                "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DsTopbarComponent>",
                "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/ui/sidebar/ds-sidebar.stories.ts": [
                {
                    "name": "ActiveItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { groups: demoGroups, activeItemId: 'inbox' },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [activeItemId]=\"activeItemId\" />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Collapsed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { groups: demoGroups, collapsed: true },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [collapsed]=\"collapsed\" />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "CollapsedWithGlobalAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { \n    groups: demoGroups, \n    collapsed: true, \n    showGlobalAction: true, \n    globalActionLabel: 'Create New', \n    globalActionIcon: 'remixAddLine' \n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar \n          [groups]=\"groups\" \n          [collapsed]=\"collapsed\" \n          [showGlobalAction]=\"showGlobalAction\" \n          [globalActionLabel]=\"globalActionLabel\" \n          [globalActionIcon]=\"globalActionIcon\" \n        />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    groups: demoGroups,\n    ariaLabel: 'Main navigation',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [ariaLabel]=\"ariaLabel\" />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "demoGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarGroup[]",
                    "defaultValue": "[\n  {\n    id: 'servicehub',\n    label: 'SERVICEHUB',\n    items: [\n      { id: 'inbox', label: 'Inbox', icon: 'remixMailLine', badgeText: '2' },\n      { id: 'inquiries', label: 'Inquiries', icon: 'remixQuestionAnswerLine', badgeText: '2' },\n      { id: 'tasks', label: 'Tasks', icon: 'remixTaskLine' },\n      { id: 'surveys', label: 'Surveys', icon: 'remixSurveyLine' },\n    ],\n  },\n  {\n    id: 'company',\n    label: 'COMPANY',\n    items: [\n      { id: 'dashboard', label: 'Dashboard', icon: 'remixDashboardLine' },\n      { id: 'rating', label: 'Rating', icon: 'remixStarLine' },\n      { id: 'calendar', label: 'Calendar', icon: 'remixCalendarLine' },\n      { id: 'settings', label: 'Settings', icon: 'remixSettings4Line' },\n    ],\n  },\n  {\n    id: 'kartoteker',\n    label: 'KARTOTEKER',\n    items: [\n      { id: 'customers', label: 'Customers', icon: 'remixTeamLine' },\n      { id: 'companies', label: 'Companies', icon: 'remixBuilding4Line' },\n      { id: 'properties', label: 'Properties', icon: 'remixBuilding2Line' },\n      { id: 'leases', label: 'Leases', icon: 'remixFileListLine' },\n      { id: 'tenants', label: 'Tenants', icon: 'remixUserLine' },\n      { id: 'vendors', label: 'Vendors', icon: 'remixStore2Line' },\n      { id: 'vendor-agreements', label: 'Vendor agreements', icon: 'remixFileTextLine' },\n      { id: 'assets', label: 'Assets', icon: 'remixDatabase2Line' },\n      { id: 'real-esg', label: 'Real ESG', icon: 'remixLeafLine' },\n    ],\n  },\n  {\n    id: 'me',\n    label: 'ME',\n      items: [\n        { id: 'my-details', label: 'My details', icon: 'remixUserSettingsLine' },\n        { id: 'whats-new', label: 'What\\'s new', icon: 'remixNotification4Line' },\n      ],\n  },\n]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsSidebarComponent>",
                    "defaultValue": "{\n  title: 'Application shell/Sidebar',\n  component: DsSidebarComponent,\n  parameters: {\n    layout: 'fullscreen',\n  },\n  tags: ['autodocs'],\n  argTypes: {},\n}"
                },
                {
                    "name": "WithGlobalAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { groups: demoGroups, showGlobalAction: true, globalActionLabel: 'New', globalActionIcon: 'remixAddLine' },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 600px; display: flex;\">\n        <ds-sidebar [groups]=\"groups\" [showGlobalAction]=\"showGlobalAction\" [globalActionLabel]=\"globalActionLabel\" [globalActionIcon]=\"globalActionIcon\" />\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "src/app/components/ui/badge/ds-badge.stories.ts": [
                {
                    "name": "AllColorVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <h3 style=\"margin: 0; font-size: 16px; font-weight: 600;\">All Badge Color Variants</h3>\n        <div style=\"display: flex; flex-wrap: wrap; gap: 8px; max-width: 600px;\">\n          <ds-badge content=\"Default\" variant=\"default\"></ds-badge>\n          <ds-badge content=\"Brand\" variant=\"brand\"></ds-badge>\n          <ds-badge content=\"Success\" variant=\"success\"></ds-badge>\n          <ds-badge content=\"Warning\" variant=\"warning\"></ds-badge>\n          <ds-badge content=\"Destructive\" variant=\"destructive\"></ds-badge>\n          <ds-badge content=\"Blue\" variant=\"blue\"></ds-badge>\n          <ds-badge content=\"Light Purple\" variant=\"light-purple\"></ds-badge>\n          <ds-badge content=\"Pink\" variant=\"pink\"></ds-badge>\n          <ds-badge content=\"Salmon Orange\" variant=\"salmon-orange\"></ds-badge>\n          <ds-badge content=\"Orange\" variant=\"orange\"></ds-badge>\n          <ds-badge content=\"Lime Green\" variant=\"lime-green\"></ds-badge>\n          <ds-badge content=\"Grey\" variant=\"grey\"></ds-badge>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "ContentTypeComparison",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Text Only</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px;\">\n            <ds-badge content=\"Default\" contentType=\"text\" variant=\"default\"></ds-badge>\n            <ds-badge content=\"Brand\" contentType=\"text\" variant=\"brand\"></ds-badge>\n            <ds-badge content=\"Success\" contentType=\"text\" variant=\"success\"></ds-badge>\n            <ds-badge content=\"Warning\" contentType=\"text\" variant=\"warning\"></ds-badge>\n            <ds-badge content=\"Destructive\" contentType=\"text\" variant=\"destructive\"></ds-badge>\n            <ds-badge content=\"Blue\" contentType=\"text\" variant=\"blue\"></ds-badge>\n            <ds-badge content=\"Light Purple\" contentType=\"text\" variant=\"light-purple\"></ds-badge>\n            <ds-badge content=\"Pink\" contentType=\"text\" variant=\"pink\"></ds-badge>\n            <ds-badge content=\"Salmon Orange\" contentType=\"text\" variant=\"salmon-orange\"></ds-badge>\n            <ds-badge content=\"Orange\" contentType=\"text\" variant=\"orange\"></ds-badge>\n            <ds-badge content=\"Lime Green\" contentType=\"text\" variant=\"lime-green\"></ds-badge>\n            <ds-badge content=\"Grey\" contentType=\"text\" variant=\"grey\"></ds-badge>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Icon + Text</h3>\n          <div style=\"display: flex; gap: 8px;\">\n            <ds-badge content=\"Feature\" contentType=\"icon-text\" leadingIcon=\"remixStarLine\" variant=\"default\"></ds-badge>\n            <ds-badge content=\"Premium\" contentType=\"icon-text\" leadingIcon=\"remixStarFill\" variant=\"brand\"></ds-badge>\n            <ds-badge content=\"Verified\" contentType=\"icon-text\" leadingIcon=\"remixCheckboxCircleFill\" variant=\"success\"></ds-badge>\n            <ds-badge content=\"Alert\" contentType=\"icon-text\" leadingIcon=\"remixAlertFill\" variant=\"warning\"></ds-badge>\n            <ds-badge content=\"Error\" contentType=\"icon-text\" leadingIcon=\"remixErrorWarningFill\" variant=\"destructive\"></ds-badge>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Indicator + Text (Always white background)</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px;\">\n            <ds-badge content=\"Default\" contentType=\"indicator-text\" variant=\"default\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Brand\" contentType=\"indicator-text\" variant=\"brand\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Success\" contentType=\"indicator-text\" variant=\"success\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Warning\" contentType=\"indicator-text\" variant=\"warning\" indicatorShape=\"triangle\"></ds-badge>\n            <ds-badge content=\"Destructive\" contentType=\"indicator-text\" variant=\"destructive\" indicatorShape=\"square\"></ds-badge>\n            <ds-badge content=\"Blue\" contentType=\"indicator-text\" variant=\"blue\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Light Purple\" contentType=\"indicator-text\" variant=\"light-purple\" indicatorShape=\"diamond\"></ds-badge>\n            <ds-badge content=\"Pink\" contentType=\"indicator-text\" variant=\"pink\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Salmon Orange\" contentType=\"indicator-text\" variant=\"salmon-orange\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Orange\" contentType=\"indicator-text\" variant=\"orange\" indicatorShape=\"triangle\"></ds-badge>\n            <ds-badge content=\"Lime Green\" contentType=\"indicator-text\" variant=\"lime-green\" indicatorShape=\"circle\"></ds-badge>\n            <ds-badge content=\"Grey\" contentType=\"indicator-text\" variant=\"grey\" indicatorShape=\"circle\"></ds-badge>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Badge',\n    contentType: 'text',\n    variant: 'default',\n  },\n}"
                },
                {
                    "name": "IconTextBrand",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'New Feature',\n    contentType: 'icon-text',\n    leadingIcon: 'remixStarFill',\n    variant: 'brand',\n  },\n}"
                },
                {
                    "name": "IconTextDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Feature',\n    contentType: 'icon-text',\n    leadingIcon: 'remixStarLine',\n    variant: 'default',\n  },\n}"
                },
                {
                    "name": "IconTextDestructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Critical',\n    contentType: 'icon-text',\n    leadingIcon: 'remixErrorWarningFill',\n    variant: 'destructive',\n  },\n}"
                },
                {
                    "name": "IconTextSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Verified',\n    contentType: 'icon-text',\n    leadingIcon: 'remixCheckboxCircleFill',\n    variant: 'success',\n  },\n}"
                },
                {
                    "name": "IconTextWarning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Attention',\n    contentType: 'icon-text',\n    leadingIcon: 'remixAlertFill',\n    variant: 'warning',\n  },\n}"
                },
                {
                    "name": "IndicatorTextBlue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Info',\n    contentType: 'indicator-text',\n    variant: 'blue',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextBrand",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'In Progress',\n    contentType: 'indicator-text',\n    variant: 'brand',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Default',\n    contentType: 'indicator-text',\n    variant: 'default',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextDestructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Failed',\n    contentType: 'indicator-text',\n    variant: 'destructive',\n    indicatorShape: 'square',\n  },\n}"
                },
                {
                    "name": "IndicatorTextGrey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Neutral',\n    contentType: 'indicator-text',\n    variant: 'grey',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextLightPurple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Special',\n    contentType: 'indicator-text',\n    variant: 'light-purple',\n    indicatorShape: 'diamond',\n  },\n}"
                },
                {
                    "name": "IndicatorTextLimeGreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Fresh',\n    contentType: 'indicator-text',\n    variant: 'lime-green',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextOrange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Alert',\n    contentType: 'indicator-text',\n    variant: 'orange',\n    indicatorShape: 'triangle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextPink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Accent',\n    contentType: 'indicator-text',\n    variant: 'pink',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextSalmonOrange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Warm',\n    contentType: 'indicator-text',\n    variant: 'salmon-orange',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Completed',\n    contentType: 'indicator-text',\n    variant: 'success',\n    indicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "IndicatorTextWarning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Pending',\n    contentType: 'indicator-text',\n    variant: 'warning',\n    indicatorShape: 'triangle',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsBadgeComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Badge',\n  component: DsBadgeComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'brand', 'success', 'warning', 'destructive', 'blue', 'light-purple', 'pink', 'salmon-orange', 'orange', 'lime-green', 'grey'],\n    },\n    contentType: {\n      control: 'select',\n      options: ['text', 'icon-text', 'indicator-text'],\n    },\n    content: {\n      control: 'text',\n    },\n    leadingIcon: {\n      control: 'text',\n    },\n    indicatorShape: {\n      control: 'select',\n      options: ['circle', 'square', 'diamond', 'triangle', 'pentagon'],\n    },\n  },\n}"
                },
                {
                    "name": "TextBlue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Blue',\n    contentType: 'text',\n    variant: 'blue',\n  },\n}"
                },
                {
                    "name": "TextBrand",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Brand',\n    contentType: 'text',\n    variant: 'brand',\n  },\n}"
                },
                {
                    "name": "TextDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Default',\n    contentType: 'text',\n    variant: 'default',\n  },\n}"
                },
                {
                    "name": "TextDestructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Error',\n    contentType: 'text',\n    variant: 'destructive',\n  },\n}"
                },
                {
                    "name": "TextGrey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Grey',\n    contentType: 'text',\n    variant: 'grey',\n  },\n}"
                },
                {
                    "name": "TextLightPurple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Light Purple',\n    contentType: 'text',\n    variant: 'light-purple',\n  },\n}"
                },
                {
                    "name": "TextLimeGreen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Lime Green',\n    contentType: 'text',\n    variant: 'lime-green',\n  },\n}"
                },
                {
                    "name": "TextOrange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Orange',\n    contentType: 'text',\n    variant: 'orange',\n  },\n}"
                },
                {
                    "name": "TextPink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Pink',\n    contentType: 'text',\n    variant: 'pink',\n  },\n}"
                },
                {
                    "name": "TextSalmonOrange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Salmon Orange',\n    contentType: 'text',\n    variant: 'salmon-orange',\n  },\n}"
                },
                {
                    "name": "TextSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Success',\n    contentType: 'text',\n    variant: 'success',\n  },\n}"
                },
                {
                    "name": "TextWarning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Warning',\n    contentType: 'text',\n    variant: 'warning',\n  },\n}"
                }
            ],
            "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts": [
                {
                    "name": "AllShapes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">All Shape Variants (8x8px)</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 16px; align-items: center;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\" label=\"Received\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"square\" variant=\"destructive\" label=\"Stage tags\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"diamond\" variant=\"brand\" label=\"Contact\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"triangle\" variant=\"blue\" label=\"Upcoming\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"pentagon\" variant=\"brand\" label=\"Maintenance\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Circle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    shape: 'circle',\n    variant: 'brand',\n    label: 'Received',\n  },\n}"
                },
                {
                    "name": "ColorVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">All Color Variants</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 16px; align-items: center; max-width: 600px;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"default\" label=\"Default\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\" label=\"Brand\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"success\" label=\"Success\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"warning\" label=\"Warning\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"destructive\" label=\"Destructive\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"blue\" label=\"Blue\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"light-purple\" label=\"Light Purple\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"pink\" label=\"Pink\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"salmon-orange\" label=\"Salmon Orange\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"orange\" label=\"Orange\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"lime-green\" label=\"Lime Green\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"circle\" variant=\"grey\" label=\"Grey\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Diamond",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    shape: 'diamond',\n    variant: 'brand',\n    label: 'Contact',\n  },\n}"
                },
                {
                    "name": "IconOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Icons Only</h3>\n          <div style=\"display: flex; flex-wrap: wrap; gap: 8px; align-items: center;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"square\" variant=\"destructive\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"diamond\" variant=\"success\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"triangle\" variant=\"warning\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"pentagon\" variant=\"blue\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsShapeIndicatorComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Shape Indicator',\n  component: DsShapeIndicatorComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    shape: {\n      control: 'select',\n      options: ['circle', 'square', 'diamond', 'triangle', 'pentagon'],\n    },\n    variant: {\n      control: 'select',\n      options: ['default', 'brand', 'success', 'warning', 'destructive', 'blue', 'light-purple', 'pink', 'salmon-orange', 'orange', 'lime-green', 'grey'],\n    },\n    label: {\n      control: 'text',\n    },\n  },\n}"
                },
                {
                    "name": "Pentagon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    shape: 'pentagon',\n    variant: 'brand',\n    label: 'Maintenance',\n  },\n}"
                },
                {
                    "name": "Square",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    shape: 'square',\n    variant: 'destructive',\n    label: 'Stage tags',\n  },\n}"
                },
                {
                    "name": "Triangle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    shape: 'triangle',\n    variant: 'blue',\n    label: 'Upcoming',\n  },\n}"
                },
                {
                    "name": "UsageExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Stage Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"brand\" label=\"Received\"></ds-shape-indicator>\n            <ds-shape-indicator shape=\"diamond\" variant=\"brand\" label=\"Contact\"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Category Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"diamond\" variant=\"brand\" label=\"Maintenance\"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Inspection Status Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"circle\" variant=\"blue\" label=\"Upcoming\"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 8px 0; font-size: 14px; font-weight: 600;\">Defect Status Tags</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 8px; align-items: flex-start;\">\n            <ds-shape-indicator shape=\"triangle\" variant=\"default\" label=\"Not a defect\"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "src/app/components/ui/checkbox/ds-checkbox.stories.ts": [
                {
                    "name": "AllSizesAndVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 24px;\">\n        <div>\n          <h4>Small Size</h4>\n          <div style=\"display: grid; gap: 8px; margin-top: 8px;\">\n            <ds-checkbox size=\"sm\" variant=\"default\" label=\"Default small\"></ds-checkbox>\n            <ds-checkbox size=\"sm\" variant=\"success\" label=\"Success small\"></ds-checkbox>\n            <ds-checkbox size=\"sm\" variant=\"warning\" label=\"Warning small\"></ds-checkbox>\n            <ds-checkbox size=\"sm\" variant=\"error\" label=\"Error small\"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Medium Size</h4>\n          <div style=\"display: grid; gap: 8px; margin-top: 8px;\">\n            <ds-checkbox size=\"md\" variant=\"default\" label=\"Default medium\"></ds-checkbox>\n            <ds-checkbox size=\"md\" variant=\"success\" label=\"Success medium\"></ds-checkbox>\n            <ds-checkbox size=\"md\" variant=\"warning\" label=\"Warning medium\"></ds-checkbox>\n            <ds-checkbox size=\"md\" variant=\"error\" label=\"Error medium\"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Large Size</h4>\n          <div style=\"display: grid; gap: 8px; margin-top: 8px;\">\n            <ds-checkbox size=\"lg\" variant=\"default\" label=\"Default large\"></ds-checkbox>\n            <ds-checkbox size=\"lg\" variant=\"success\" label=\"Success large\"></ds-checkbox>\n            <ds-checkbox size=\"lg\" variant=\"warning\" label=\"Warning large\"></ds-checkbox>\n            <ds-checkbox size=\"lg\" variant=\"error\" label=\"Error large\"></ds-checkbox>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox \n          label=\"Click me to toggle\" \n          (checkedChange)=\"onCheckedChange($event)\">\n        </ds-checkbox>\n        <ds-checkbox \n          label=\"I'm required\" \n          [required]=\"true\"\n          variant=\"error\">\n        </ds-checkbox>\n        <ds-checkbox \n          label=\"Hover over me\"\n          size=\"lg\">\n        </ds-checkbox>\n      </div>\n    `,\n    props: {\n      onCheckedChange: (checked: boolean) => {\n        console.log('Checkbox checked:', checked);\n      },\n    },\n  }),\n}"
                },
                {
                    "name": "LabelToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <h4>With Labels</h4>\n        <ds-checkbox [showLabel]=\"true\" label=\"I have a visible label\"></ds-checkbox>\n        <ds-checkbox [showLabel]=\"true\" label=\"Me too!\"></ds-checkbox>\n        \n        <h4 style=\"margin-top: 24px;\">Without Labels (using aria-label)</h4>\n        <ds-checkbox [showLabel]=\"false\" ariaLabel=\"Hidden label checkbox 1\"></ds-checkbox>\n        <ds-checkbox [showLabel]=\"false\" ariaLabel=\"Hidden label checkbox 2\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsCheckboxComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Checkbox',\n  component: DsCheckboxComponent,\n  parameters: { layout: 'centered' },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: { type: 'select' }, options: ['default', 'error', 'warning', 'success'] },\n    size: { control: { type: 'select' }, options: ['sm', 'md', 'lg'] },\n    label: { control: 'text' },\n    showLabel: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n    required: { control: 'boolean' },\n    indeterminate: { control: 'boolean' },\n    checkboxId: { control: 'text' },\n    ariaLabel: { control: 'text' },\n    ariaDescribedBy: { control: 'text' },\n    ariaLabelledBy: { control: 'text' },\n  },\n  args: {\n    variant: 'default',\n    size: 'md',\n    label: 'Accept terms and conditions',\n    showLabel: true,\n    disabled: false,\n    required: false,\n    indeterminate: false,\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox size=\"sm\" label=\"Small checkbox\"></ds-checkbox>\n        <ds-checkbox size=\"md\" label=\"Medium checkbox\"></ds-checkbox>\n        <ds-checkbox size=\"lg\" label=\"Large checkbox\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "States",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox label=\"Unchecked checkbox\"></ds-checkbox>\n        <ds-checkbox label=\"Checked checkbox\" [checked]=\"true\"></ds-checkbox>\n        <ds-checkbox label=\"Indeterminate checkbox\" [indeterminate]=\"true\"></ds-checkbox>\n        <ds-checkbox label=\"Disabled checkbox\" [disabled]=\"true\"></ds-checkbox>\n        <ds-checkbox label=\"Disabled checked checkbox\" [disabled]=\"true\" [checked]=\"true\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 300px;\">\n        <ds-checkbox variant=\"default\" label=\"Default checkbox\"></ds-checkbox>\n        <ds-checkbox variant=\"success\" label=\"Success checkbox\"></ds-checkbox>\n        <ds-checkbox variant=\"warning\" label=\"Warning checkbox\"></ds-checkbox>\n        <ds-checkbox variant=\"error\" label=\"Error checkbox\"></ds-checkbox>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithFormField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <ds-form-field \n        label=\"Newsletter Preferences\" \n        description=\"Choose your newsletter preferences\"\n        style=\"width: 400px;\">\n        <div style=\"display: grid; gap: 12px; margin-top: 8px;\">\n          <ds-checkbox label=\"Weekly newsletter\"></ds-checkbox>\n          <ds-checkbox label=\"Product updates\"></ds-checkbox>\n          <ds-checkbox label=\"Marketing emails\" variant=\"warning\"></ds-checkbox>\n          <ds-checkbox label=\"Security notifications\" [checked]=\"true\" [disabled]=\"true\"></ds-checkbox>\n        </div>\n      </ds-form-field>\n    `,\n  }),\n  parameters: {\n    docs: {\n      source: {\n        code: `<ds-form-field \n  label=\"Newsletter Preferences\" \n  description=\"Choose your newsletter preferences\">\n  <div style=\"display: grid; gap: 12px; margin-top: 8px;\">\n    <ds-checkbox label=\"Weekly newsletter\"></ds-checkbox>\n    <ds-checkbox label=\"Product updates\"></ds-checkbox>\n    <ds-checkbox label=\"Marketing emails\" variant=\"warning\"></ds-checkbox>\n    <ds-checkbox label=\"Security notifications\" [checked]=\"true\" [disabled]=\"true\"></ds-checkbox>\n  </div>\n</ds-form-field>`,\n      },\n    },\n  },\n}"
                },
                {
                    "name": "WithoutLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showLabel: false,\n    ariaLabel: 'Accept terms and conditions',\n  },\n}"
                }
            ],
            "src/app/components/ui/avatar/ds-avatar.stories.ts": [
                {
                    "name": "AllTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem; align-items: start; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n          <h3 style=\"margin: 0; font-size: 14px; font-weight: 600; color: var(--text-color-default-primary);\">Initials (Always Round)</h3>\n          <div style=\"display: flex; gap: 1rem; align-items: center;\">\n            <ds-avatar type=\"initials\" size=\"sm\" initials=\"JD\"></ds-avatar>\n            <ds-avatar type=\"initials\" size=\"md\" initials=\"JD\"></ds-avatar>\n            <ds-avatar type=\"initials\" size=\"lg\" initials=\"JD\"></ds-avatar>\n            <ds-avatar type=\"initials\" size=\"xl\" initials=\"JD\"></ds-avatar>\n          </div>\n        </div>\n        \n        <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n          <h3 style=\"margin: 0; font-size: 14px; font-weight: 600; color: var(--text-color-default-primary);\">Photo (Always Round)</h3>\n          <div style=\"display: flex; gap: 1rem; align-items: center;\">\n            <ds-avatar \n              type=\"photo\" \n              size=\"sm\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n            <ds-avatar \n              type=\"photo\" \n              size=\"md\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n            <ds-avatar \n              type=\"photo\" \n              size=\"lg\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n            <ds-avatar \n              type=\"photo\" \n              size=\"xl\" \n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n              alt=\"Profile\"\n            ></ds-avatar>\n          </div>\n        </div>\n        \n        <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n          <h3 style=\"margin: 0; font-size: 14px; font-weight: 600; color: var(--text-color-default-primary);\">Icon (Brand Background + Depth)</h3>\n          <div style=\"display: flex; gap: 1rem; align-items: center;\">\n            <ds-avatar type=\"icon\" size=\"sm\" iconName=\"remixUser3Fill\"></ds-avatar>\n            <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixUser3Fill\"></ds-avatar>\n            <ds-avatar type=\"icon\" size=\"lg\" iconName=\"remixUser3Fill\"></ds-avatar>\n            <ds-avatar type=\"icon\" size=\"xl\" iconName=\"remixUser3Fill\"></ds-avatar>\n          </div>\n          <div style=\"font-size: 12px; color: var(--text-color-default-secondary);\">\n            6px ‚Üí 8px ‚Üí 12px ‚Üí 16px radius<br/>\n            depth-sm ‚Üí depth-sm ‚Üí depth-md ‚Üí depth-lg\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'initials',\n    size: 'md',\n    initials: 'JD',\n  },\n}"
                },
                {
                    "name": "IconType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"sm\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Small (6px radius)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Medium (8px radius)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"lg\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Large (12px radius)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"xl\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">XLarge (16px radius)</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "IconVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixUser3Fill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Default User</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixTeamFill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Team</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixBuildingFill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Organization</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"icon\" size=\"md\" iconName=\"remixRobotFill\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Bot</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "InitialsType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">John Doe</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"AS\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Alice Smith</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"MJ\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Michael Johnson</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"EB\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Emily Brown</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsAvatarComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Avatar',\n  component: DsAvatarComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    type: {\n      control: { type: 'select' },\n      options: ['initials', 'photo', 'icon'],\n      description: 'The type of avatar display',\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl'],\n      description: 'The size of the avatar',\n    },\n    initials: {\n      control: { type: 'text' },\n      description: 'Initials to display (for initials type)',\n    },\n    src: {\n      control: { type: 'text' },\n      description: 'Image source URL (for photo type)',\n    },\n    alt: {\n      control: { type: 'text' },\n      description: 'Alternative text for the image',\n    },\n    iconName: {\n      control: { type: 'text' },\n      description: 'Icon name to display (for icon type)',\n    },\n    iconColor: {\n      control: { type: 'text' },\n      description: 'Color of the icon (automatically white for icon avatars)',\n      table: { disable: true }, // Disable control since it's always white for icon avatars\n    },\n  },\n}"
                },
                {
                    "name": "PhotoType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\n            alt=\"John Doe\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">John Doe</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100&h=100&fit=crop&crop=face\"\n            alt=\"Alice Smith\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Alice Smith</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face\"\n            alt=\"Michael Johnson\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Michael Johnson</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar \n            type=\"photo\" \n            size=\"md\" \n            src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&crop=face\"\n            alt=\"Emily Brown\"\n          ></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Emily Brown</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"sm\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Small (24px)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"md\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Medium (32px)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"lg\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">Large (48px)</span>\n        </div>\n        <div style=\"display: flex; flex-direction: column; align-items: center; gap: 0.5rem;\">\n          <ds-avatar type=\"initials\" size=\"xl\" initials=\"JD\"></ds-avatar>\n          <span style=\"font-size: 12px; color: var(--text-color-default-secondary);\">XLarge (64px)</span>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Static",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'initials',\n    size: 'md',\n    initials: 'JD',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: center;\">\n        <ds-avatar \n          [type]=\"type\"\n          [size]=\"size\"\n          [initials]=\"initials\"\n          [src]=\"src\"\n          [alt]=\"alt\"\n          [iconName]=\"iconName\"\n          [iconColor]=\"iconColor\"\n        ></ds-avatar>\n        <p style=\"font-size: 0.875rem; color: var(--text-color-default-secondary);\">\n          Static avatar with no interactions\n        </p>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "src/app/components/ui/app-layout/ds-app-layout.stories.ts": [
                {
                    "name": "AutoResponsive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    // No isMobileOverride - let ViewportService handle automatic detection\n    isSidebarCollapsed: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-app-layout\n        [sidebarGroups]=\"sidebarGroups\"\n        [isMobileOverride]=\"isMobileOverride\"\n        [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      >\n        <ds-topbar\n          [pageTitle]=\"'Auto Responsive'\"\n          [iconName]=\"'remixSmartphoneLine'\"\n          [userInitials]=\"'AR'\"\n          [showFirstAction]=\"true\"\n          [firstActionIcon]=\"'remixNotification3Line'\"\n          [firstActionLabel]=\"'Notifications'\"\n          [showSecondAction]=\"true\"\n          [secondActionIcon]=\"'remixSettings3Line'\"\n          [secondActionLabel]=\"'Settings'\"\n        />\n        <div class=\"p-6\">\n          <div class=\"max-w-3xl mx-auto\">\n            <h2 class=\"text-2xl font-semibold mb-4\">Auto-Responsive Layout</h2>\n            <div class=\"space-y-4\">\n              <div class=\"p-4 bg-white rounded-lg border border-gray-200\">\n                <h3 class=\"font-medium mb-2\">üöÄ Automatic Viewport Detection</h3>\n                <p class=\"text-gray-600\">\n                  This layout automatically detects your viewport size and switches between mobile and desktop modes at 992px breakpoint.\n                </p>\n                <p class=\"mt-2 text-sm text-gray-500\">\n                  <strong>Try resizing your browser window or using the viewport toolbar above!</strong>\n                </p>\n              </div>\n              \n              <div class=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                <h3 class=\"font-medium mb-2 text-blue-900\">How it works:</h3>\n                <ul class=\"text-sm text-blue-800 space-y-1\">\n                  <li>‚Ä¢ <strong>‚â§ 991px:</strong> Mobile mode with collapsible drawer menu</li>\n                  <li>‚Ä¢ <strong>‚â• 992px:</strong> Desktop mode with persistent sidebar</li>\n                  <li>‚Ä¢ <strong>Automatic:</strong> No manual prop toggling needed!</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ds-app-layout>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    isSidebarCollapsed: false,\n  },\n  render: () => ({\n    template: '<ds-debug-wrapper></ds-debug-wrapper>'\n  })\n}"
                },
                {
                    "name": "InitiallyCollapsed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    isMobileOverride: false, // Force desktop mode\n    isSidebarCollapsed: true,\n  },\n  render: Default.render,\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsAppLayoutComponent>",
                    "defaultValue": "{\n  title: 'Application shell/App Layout',\n  component: DsAppLayoutComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [DebugWrapperComponent],\n      providers: [ViewportService]\n    }),\n  ],\n  parameters: {\n    layout: 'fullscreen',\n    // Add viewport toolbar to allow easy resizing\n    viewport: {\n      defaultViewport: 'desktop',\n      viewports: {\n        mobile: {\n          name: 'Mobile',\n          styles: {\n            width: '375px',\n            height: '100%',\n          },\n        },\n        tablet: {\n          name: 'Tablet',\n          styles: {\n            width: '768px',\n            height: '100%',\n          },\n        },\n        desktop: {\n          name: 'Desktop',\n          styles: {\n            width: '1024px',\n            height: '100%',\n          },\n        },\n        'large-desktop': {\n          name: 'Large Desktop',\n          styles: {\n            width: '1440px',\n            height: '100%',\n          },\n        },\n      },\n    },\n  },\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "TopbarDebug",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    sidebarGroups: demoGroups,\n    isMobileOverride: false, // Force desktop mode\n    isSidebarCollapsed: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-app-layout\n        [sidebarGroups]=\"sidebarGroups\"\n        [isMobileOverride]=\"isMobileOverride\"\n        [isSidebarCollapsed]=\"isSidebarCollapsed\"\n      >\n        <ds-topbar\n          [pageTitle]=\"'Debug Page'\"\n          [iconName]=\"'remixHome4Line'\"\n          [userInitials]=\"'DB'\"\n          [showFirstAction]=\"false\"\n          [showSecondAction]=\"false\"\n        />\n        <div class=\"p-6\">\n          <h2>Debug: Check if topbar renders with minimal props</h2>\n        </div>\n      </ds-app-layout>\n    `,\n  }),\n}"
                }
            ],
            "src/app/components/ui/tooltip/ds-tooltip.stories.ts": [
                {
                    "name": "ButtonSizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem; align-items: center; flex-wrap: wrap;\">\n        <ds-tooltip text=\"Small button tooltip\">\n          <ds-button size=\"sm\" variant=\"primary\">Small</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Medium button tooltip\">\n          <ds-button size=\"md\" variant=\"secondary\">Medium</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Large button tooltip\">\n          <ds-button size=\"lg\" variant=\"ghost\">Large</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    text: 'This is a helpful tooltip',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-tooltip [text]=\"text\">\n        <ds-button variant=\"primary\">Hover me</ds-button>\n      </ds-tooltip>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "DifferentPlacements",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 4rem; padding: 4rem; place-items: center;\">\n        <ds-tooltip text=\"Tooltip on top\">\n          <ds-button>Top</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Tooltip on right\">\n          <ds-button>Right</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Tooltip on bottom\">\n          <ds-button>Bottom</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Tooltip on left\">\n          <ds-button>Left</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Auto placement\">\n          <ds-button>Auto</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Another tooltip\">\n          <ds-button>Center</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "IconButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <ds-tooltip text=\"Add to favorites\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixStarLine\" \n            ariaLabel=\"Favorite\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Settings and preferences\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixSettingsLine\" \n            ariaLabel=\"Settings\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"More options menu\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixMoreLine\" \n            ariaLabel=\"More options\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Delete permanently\">\n          <ds-button \n            [iconOnly]=\"true\" \n            leadingIcon=\"remixDeleteBinLine\" \n            ariaLabel=\"Delete\"\n            variant=\"ghost\"\n          ></ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    text: 'Click to see the action',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      clickCount: 0,\n      onClick: function() {\n        this['clickCount']++;\n        console.log('Button clicked from tooltip!');\n      }\n    },\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: center;\">\n        <ds-tooltip [text]=\"text\">\n          <ds-button (clicked)=\"onClick()\">\n            Click me ({{clickCount}})\n          </ds-button>\n        </ds-tooltip>\n        <p style=\"font-size: 0.875rem; color: var(--text-color-default-secondary);\">\n          Click count: {{clickCount}}\n        </p>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "LongText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <ds-tooltip text=\"This is a very long tooltip text that should wrap properly and demonstrate how the tooltip handles longer content gracefully without breaking the layout.\">\n        <ds-button>Long tooltip text</ds-button>\n      </ds-tooltip>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsTooltipComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Tooltip',\n  component: DsTooltipComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    text: {\n      control: { type: 'text' },\n      description: 'The text content to display in the tooltip',\n    },\n  },\n}"
                },
                {
                    "name": "WithButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 2rem; align-items: center; flex-wrap: wrap;\">\n        <ds-tooltip text=\"Primary action button\">\n          <ds-button variant=\"primary\">Primary</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Secondary action button\">\n          <ds-button variant=\"secondary\">Secondary</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Ghost style button\">\n          <ds-button variant=\"ghost\">Ghost</ds-button>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Destructive action - use with caution\">\n          <ds-button variant=\"destructive\">Delete</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsButtonComponent],\n    },\n  }),\n}"
                },
                {
                    "name": "WithFormElements",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 2rem; align-items: flex-start; width: 300px;\">\n        <ds-tooltip text=\"Enter your email address\">\n          <ds-input \n            type=\"email\" \n            placeholder=\"Email address\"\n            variant=\"default\"\n          />\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Check this to receive notifications\">\n          <div style=\"display: flex; align-items: center; gap: 8px;\">\n            <ds-checkbox />\n            <ds-label>Subscribe to notifications</ds-label>\n          </div>\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"This icon represents settings\">\n          <ds-icon name=\"remixSettingsLine\" size=\"24px\" style=\"cursor: pointer;\" />\n        </ds-tooltip>\n        \n        <ds-tooltip text=\"Submit your information\">\n          <ds-button variant=\"primary\" size=\"sm\">Submit</ds-button>\n        </ds-tooltip>\n      </div>\n    `,\n    moduleMetadata: {\n      imports: [DsTooltipComponent, DsInputComponent, DsCheckboxComponent, DsLabelComponent, DsIconComponent, DsButtonComponent],\n    },\n  }),\n}"
                }
            ],
            "src/app/pages/app-shell-showcase.stories.ts": [
                {
                    "name": "CollapsedSidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'With Collapsed Sidebar',\n  render: () => ({\n    template: `\n      <app-shell-showcase style=\"display: block;\"></app-shell-showcase>\n      <script>\n        setTimeout(() => {\n          const component = document.querySelector('app-shell-showcase');\n          if (component) {\n            component.toggleSidebar();\n          }\n        }, 100);\n      </script>\n    `,\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'App shell with the sidebar in collapsed state, showing icons only.',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "demoGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarGroup[]",
                    "defaultValue": "[\n  {\n    id: 'grp-top',\n    label: '',\n    showLabel: false,\n    items: [\n      { id: 'inbox', icon: 'remixInboxLine', label: 'Inbox', badgeText: '3' },\n      { id: 'my-tasks', icon: 'remixTaskLine', label: 'My tasks' },\n    ],\n  },\n  {\n    id: 'grp-service',\n    label: 'Service hub',\n    items: [\n      { id: 'inquiries', icon: 'remixQuestionAnswerLine', label: 'Inquiries' },\n      { id: 'tasks', icon: 'remixClipboardLine', label: 'Tasks' },\n      { id: 'documents', icon: 'remixFile2Line', label: 'Documents' },\n      { id: 'notices', icon: 'remixNotificationLine', label: 'Notices' },\n    ],\n  },\n  {\n    id: 'grp-company',\n    label: 'Company',\n    items: [\n      { id: 'dashboard', icon: 'remixLayout4Line', label: 'Dashboard' },\n      { id: 'ratings', icon: 'remixStarSmileLine', label: 'Ratings' },\n      { id: 'calendar', icon: 'remixCalendarLine', label: 'Calendar' },\n      { id: 'reports', icon: 'remixBarChart2Line', label: 'Reports' },\n    ],\n  },\n  {\n    id: 'grp-catalog',\n    label: 'Catalog',\n    items: [\n      { id: 'customers', icon: 'remixUser3Line', label: 'Customers' },\n      { id: 'portfolios', icon: 'remixFolderLine', label: 'Portfolios' },\n      { id: 'properties', icon: 'remixBuilding2Line', label: 'Properties' },\n      { id: 'leases', icon: 'remixFileList3Line', label: 'Leases' },\n    ],\n  },\n  {\n    id: 'grp-entities',\n    label: 'Entity Details (Demo)',\n    items: [\n      { id: 'property-detail', icon: 'remixBuilding2Line', label: 'Sunset Boulevard Apartments' },\n      { id: 'lease-detail', icon: 'remixFileList3Line', label: 'Lease Agreement #LA-2024-001' },\n      { id: 'tenant-detail', icon: 'remixUser3Line', label: 'Sarah Johnson' },\n      { id: 'inquiry-detail', icon: 'remixQuestionAnswerLine', label: 'Inquiry #INQ-2024-045' },\n    ],\n  },\n]"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Interactive App Shell',\n  parameters: {\n    docs: {\n      description: {\n        story: 'Click on different sidebar items to see how the topbar updates with contextual information. Use the action buttons to toggle sidebar collapse and breadcrumb visibility.',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppShellShowcaseComponent>",
                    "defaultValue": "{\n  title: 'Application shell/App Shell Showcase',\n  component: AppShellShowcaseComponent,\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      description: {\n        component: 'Interactive showcase demonstrating the sidebar and topbar components working together in a complete application shell layout. Click sidebar items to see the topbar update dynamically with different page titles, icons, and breadcrumbs.',\n      },\n    },\n  },\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "MobileView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Mobile Responsive',\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1',\n    },\n    docs: {\n      description: {\n        story: 'App shell optimized for mobile viewports with responsive behavior.',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "WithBreadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'With Breadcrumbs',\n  render: () => ({\n    template: `\n      <app-shell-showcase style=\"display: block;\"></app-shell-showcase>\n      <script>\n        setTimeout(() => {\n          const component = document.querySelector('app-shell-showcase');\n          if (component) {\n            component.onItemSelected('reports');\n          }\n        }, 100);\n      </script>\n    `,\n  }),\n  parameters: {\n    docs: {\n      description: {\n        story: 'App shell showing breadcrumb navigation in the topbar for nested page contexts.',\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/components/ui/icon/ds-icon.stories.ts": [
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px;\">\n        <div style=\"display: flex; align-items: center; gap: 16px;\">\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"primary\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"secondary\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"tertiary\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"brand\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"success\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"warning\"></ds-icon>\n          <ds-icon name=\"remixHomeLine\" size=\"24px\" color=\"destructive\"></ds-icon>\n        </div>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "ColorTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 24px; padding: 20px;\">\n        <!-- Test 1: Hardcoded colors for reference -->\n        <div>\n          <h4>Reference Colors (hardcoded)</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center;\">\n            <div style=\"color: #202227;\">‚ñ† primary (#202227)</div>\n            <div style=\"color: #545B66;\">‚ñ† secondary (#545B66)</div>\n            <div style=\"color: #626B78;\">‚ñ† tertiary (#626B78)</div>\n            <div style=\"color: #6B5FF5;\">‚ñ† brand (#6B5FF5)</div>\n            <div style=\"color: #158452;\">‚ñ† success (#158452)</div>\n            <div style=\"color: #d97706;\">‚ñ† warning (#d97706)</div>\n            <div style=\"color: #dc2626;\">‚ñ† destructive (#dc2626)</div>\n          </div>\n        </div>\n        \n        <!-- Test 2: Our icon component -->\n        <div>\n          <h4>Icon Component Colors</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center;\">\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"primary\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"secondary\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"tertiary\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"brand\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"success\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"warning\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"destructive\"></ds-icon>\n          </div>\n        </div>\n        \n        <!-- Test 3: Custom colors that bypass CSS classes -->\n        <div>\n          <h4>Custom Colors (bypass CSS)</h4>\n          <div style=\"display: flex; gap: 16px; align-items: center;\">\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#202227\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#545B66\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#626B78\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#6B5FF5\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#158452\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#d97706\"></ds-icon>\n            <ds-icon name=\"remixHomeLine\" size=\"lg\" color=\"#dc2626\"></ds-icon>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "CustomSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'remixSearchLine',\n    size: '48px',\n    color: 'brand'\n  }\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'remixHomeLine',\n    size: '20px'\n  }\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'remixSettingsLine',\n    size: '24px',\n    color: 'brand',\n    interactive: true\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsIconComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Icon',\n  component: DsIconComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    name: {\n      control: { type: 'text' },\n      description: 'The name of the icon to display',\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['12px', '14px', '16px', '18px', '20px', '22px', '24px', '32px'],\n      description: 'The size of the icon (pixel values or custom CSS value)',\n    },\n    color: {\n      control: { type: 'text' },\n      description: 'The color of the icon. Use predefined values (primary, secondary, tertiary, brand, success, warning, destructive) or any CSS color value (#hex, rgb(), hsl(), var(), etc.)',\n    },\n    interactive: {\n      control: { type: 'boolean' },\n      description: 'Whether the icon has interactive states (hover, active)',\n    },\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; align-items: center; gap: 16px;\">\n        <ds-icon name=\"remixHomeLine\" size=\"12px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"14px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"16px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"18px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"20px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"22px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"24px\"></ds-icon>\n        <ds-icon name=\"remixHomeLine\" size=\"32px\"></ds-icon>\n      </div>\n    `\n  })\n}"
                }
            ],
            "src/app/components/ui/button/ds-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'primary',\n    size: 'md',\n    disabled: false,\n    loading: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `<ds-button [variant]=\"variant\" [size]=\"size\" [disabled]=\"disabled\" [loading]=\"loading\">Default Button</ds-button>`,\n  }),\n}"
                },
                {
                    "name": "IconButtonVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixStarLine\" \n          ariaLabel=\"Favorite\"\n          variant=\"primary\"\n        ></ds-button>\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixSettingsLine\" \n          ariaLabel=\"Settings\"\n          variant=\"secondary\"\n        ></ds-button>\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixMoreLine\" \n          ariaLabel=\"More options\"\n          variant=\"ghost\"\n        ></ds-button>\n        <ds-button \n          [iconOnly]=\"true\" \n          leadingIcon=\"remixDeleteBinLine\" \n          ariaLabel=\"Delete\"\n          variant=\"destructive\"\n        ></ds-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'primary',\n    size: 'md',\n    leadingIcon: 'remixThumbUpLine',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      clickCount: 0,\n      onClick: function(event: MouseEvent) {\n        this['clickCount']++;\n        console.log('Button clicked!', event);\n      }\n    },\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: center;\">\n        <ds-button \n          [variant]=\"variant\"\n          [size]=\"size\"\n          [leadingIcon]=\"leadingIcon\"\n          (clicked)=\"onClick($event)\"\n        >\n          Like ({{clickCount}})\n        </ds-button>\n        <p style=\"font-size: 0.875rem; color: var(--color-gray-600);\">\n          Click count: {{clickCount}}\n        </p>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "LoadingStates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button [loading]=\"true\" variant=\"primary\">\n          Saving...\n        </ds-button>\n        <ds-button \n          [loading]=\"true\" \n          variant=\"ghost\"\n          leadingIcon=\"remixUploadLine\"\n        >\n          Uploading...\n        </ds-button>\n        <ds-button \n          [loading]=\"true\" \n          variant=\"secondary\"\n        >\n          Processing\n        </ds-button>\n        <ds-button \n          [loading]=\"true\" \n          variant=\"destructive\"\n        >\n          Deleting...\n        </ds-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsButtonComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Button',\n  component: DsButtonComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'ghost', 'destructive'],\n      description: 'The visual style variant of the button',\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg'],\n      description: 'The size of the button',\n    },\n    disabled: {\n      control: { type: 'boolean' },\n      description: 'Whether the button is disabled',\n    },\n    loading: {\n      control: { type: 'boolean' },\n      description: 'Whether the button is in loading state',\n    },\n    pressed: {\n      control: { type: 'boolean' },\n      description: 'Whether the button appears pressed (for toggle buttons)',\n    },\n    expanded: {\n      control: { type: 'boolean' },\n      description: 'Whether the button is expanded (for dropdown buttons)',\n    },\n    leadingIcon: {\n      control: { type: 'text' },\n      description: 'Icon to display before the button text',\n    },\n    trailingIcon: {\n      control: { type: 'text' },\n      description: 'Icon to display after the button text',\n    },\n    ariaLabel: {\n      control: { type: 'text' },\n      description: 'Accessibility label for the button',\n    },\n    iconOnly: {\n      control: { type: 'boolean' },\n      description: 'Whether the button displays only an icon without text',\n    },\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;\">\n        <ds-button size=\"sm\">Small</ds-button>\n        <ds-button size=\"md\">Medium</ds-button>\n        <ds-button size=\"lg\">Large</ds-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "States",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button>Normal</ds-button>\n        <ds-button [disabled]=\"true\">Disabled</ds-button>\n        <ds-button [loading]=\"true\">Loading</ds-button>\n        <ds-button [pressed]=\"true\" variant=\"ghost\">Pressed</ds-button>\n        <ds-button \n          [expanded]=\"true\" \n          trailingIcon=\"remixArrowDownLine\"\n          variant=\"secondary\"\n        >\n          Expanded\n        </ds-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button variant=\"primary\">Primary</ds-button>\n        <ds-button variant=\"secondary\">Secondary</ds-button>\n        <ds-button variant=\"ghost\">Ghost</ds-button>\n        <ds-button variant=\"destructive\">Destructive</ds-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 1rem; flex-wrap: wrap; align-items: center;\">\n        <ds-button leadingIcon=\"remixHomeLine\">\n          Home\n        </ds-button>\n        <ds-button trailingIcon=\"remixArrowRightLine\">\n          Continue\n        </ds-button>\n        <ds-button \n          leadingIcon=\"remixUserLine\"\n          variant=\"secondary\"\n        >\n          Profile\n        </ds-button>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "src/app/components/ui/form-field/ds-form-field.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"width: 360px;\">\n        <ds-form-field [label]=\"label\" [description]=\"description\" [labelId]=\"labelId\" [descriptionId]=\"descriptionId\">\n          <ds-input ariaLabelledBy=\"email-label\" ariaDescribedBy=\"email-desc\" placeholder=\"you@example.com\"></ds-input>\n        </ds-form-field>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsFormFieldComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Form Field',\n  component: DsFormFieldComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [DsFormFieldComponent, DsInputComponent, NgpError],\n    }),\n  ],\n  tags: ['autodocs'],\n  parameters: { layout: 'centered' },\n  argTypes: {\n    label: { control: 'text' },\n    description: { control: 'text' },\n    labelId: { control: 'text' },\n    descriptionId: { control: 'text' },\n  },\n  args: {\n    label: 'Email',\n    description: 'We will never share your email.',\n    labelId: 'email-label',\n    descriptionId: 'email-desc',\n  },\n}"
                },
                {
                    "name": "WithError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"width: 360px;\">\n        <ds-form-field [label]=\"label\" [description]=\"description\" [labelId]=\"labelId\" [descriptionId]=\"descriptionId\">\n          <ds-input ariaLabelledBy=\"email-label\" ariaDescribedBy=\"email-desc\" placeholder=\"you@example.com\"></ds-input>\n          <p ngpError ngpErrorValidator=\"required\">Email is required.</p>\n        </ds-form-field>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "src/app/components/ui/header-details/ds-header-details.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Basic header details example with a primary action and more actions menu. This demonstrates the typical layout for an entity detail page.'\n      }\n    }\n  },\n  args: {\n    title: 'Woods Augusthus',\n    showPrimaryAction: true,\n    primaryActionText: 'Follow',\n    primaryActionIcon: 'remixUserFollowLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: false,\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"User name\"\n            value=\"Woods Augusthus\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"WA\"\n          />\n          <ds-data-item\n            label=\"Company name\"\n            value=\"Propbinder Inc.\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"PI\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
                },
                {
                    "name": "LeaseDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Lease management example demonstrating how to display lease agreement details with actions for renewal and report generation.'\n      }\n    }\n  },\n  args: {\n    title: 'Lease Agreement #LA-2024-001',\n    showPrimaryAction: true,\n    primaryActionText: 'Renew Lease',\n    primaryActionIcon: 'remixRefreshLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'Generate Report',\n    secondaryActionIcon: 'remixFileTextLine',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Tenant\"\n            value=\"Michael Chen\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"MC\"\n          />\n          <ds-data-item\n            label=\"Property\"\n            value=\"Sunset Blvd Apt 4B\"\n            layout=\"vertical\"\n            valueType=\"icon-text\"\n            iconName=\"remixBuildingLine\"\n          />\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Rent Amount\"\n            value=\"$2,400/month\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n          <ds-data-item\n            label=\"Lease Term\"\n            value=\"12 months\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsHeaderDetailsComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Headers/Header Details',\n  component: DsHeaderDetailsComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [DsDataItemComponent]\n    })\n  ],\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      story: {\n        inline: true,\n        height: 'auto'\n      },\n      description: {\n        component: `\n# Header Details Component\n\nA specialized header component designed for entity detail pages such as Properties, Leases, Inquiries, Assets, and other business entities. It provides a consistent layout with a title row, configurable actions, and flexible content slots for metadata display.\n\n## Design Principles\n\n- **Consistent Spacing**: 24px top padding and gaps for visual hierarchy\n- **Content-First**: Responsive width (10/12 columns of parent) ensures optimal reading experience  \n- **Action-Oriented**: Prominent placement of primary and secondary actions\n- **Flexible Content**: Slot-based architecture for customizable metadata layouts\n- **Responsive**: Adapts gracefully from desktop to mobile viewports\n\n## Anatomy\n\n\\`\\`\\`\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  24px padding-top                                           ‚îÇ\n‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ\n‚îÇ  ‚îÇ Title Row                                             ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê           ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îÇ Entity Title    ‚îÇ           ‚îÇ Action Buttons      ‚îÇ ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îÇ (H1, 2xl-medium)‚îÇ           ‚îÇ [Primary][Secondary]‚îÇ ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò           ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ  ‚îÇ\n‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ\n‚îÇ  24px gap                                                   ‚îÇ\n‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ\n‚îÇ  ‚îÇ Details Row (Content Projection)                     ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îÇ Data Item 1 ‚îÇ ‚îÇ Data Item 2 ‚îÇ ‚îÇ Data Item 3 ‚îÇ ... ‚îÇ  ‚îÇ\n‚îÇ  ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îÇ  ‚îÇ\n‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ\n‚îÇ  Width: 83.33% (10/12 columns of parent), centered        ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\\`\\`\\`\n\n## Usage\n\nPerfect for entity detail pages where you need to display:\n- Entity title (e.g., property name, lease reference)\n- Action buttons (edit, delete, follow, etc.)\n- Metadata items using ds-data-item components\n\nThe details row uses content projection with \\`slot=\"details\"\\` to allow flexible arrangement of data items.\n\n## Content Projection\n\n\\`\\`\\`html\n<ds-header-details title=\"Entity Name\">\n  <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 24px;\">\n    <ds-data-item label=\"Field 1\" value=\"Value 1\" layout=\"horizontal\" />\n    <ds-data-item label=\"Field 2\" value=\"Value 2\" layout=\"horizontal\" />\n  </div>\n</ds-header-details>\n\\`\\`\\`\n\n## Best Practices\n\n### Do ‚úÖ\n- Use descriptive, entity-specific titles\n- Limit to 2-3 primary actions to avoid overwhelming users\n- Use horizontal layout for data items in the details row\n- Provide meaningful action labels and icons\n\n### Don't ‚ùå\n- Don't use generic titles like \"Details\" or \"Entity\"\n- Don't overcrowd the actions area with too many buttons\n- Don't mix vertical and horizontal data item layouts\n- Don't forget to handle action click events\n\n## Responsive Behavior\n\n- **Desktop (>768px)**: Full horizontal layout with side-by-side title and actions\n- **Tablet (‚â§768px)**: Title and actions stack vertically with reduced spacing  \n- **Mobile (‚â§480px)**: Compact spacing and optimized touch targets\n        `\n      }\n    }\n  },\n  argTypes: {\n    title: {\n      control: 'text',\n      description: 'The main title displayed in the header'\n    },\n    showPrimaryAction: {\n      control: 'boolean',\n      description: 'Whether to show the primary action button'\n    },\n    primaryActionText: {\n      control: 'text',\n      description: 'Text for the primary action button'\n    },\n    primaryActionIcon: {\n      control: 'text',\n      description: 'Icon for the primary action button'\n    },\n    primaryActionVariant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'ghost', 'destructive'],\n      description: 'Visual variant for the primary action button'\n    },\n    showSecondaryAction: {\n      control: 'boolean',\n      description: 'Whether to show the secondary action button'\n    },\n    secondaryActionText: {\n      control: 'text',\n      description: 'Text for the secondary action button'\n    },\n    secondaryActionIcon: {\n      control: 'text',\n      description: 'Icon for the secondary action button'\n    },\n    secondaryActionVariant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'ghost', 'destructive'],\n      description: 'Visual variant for the secondary action button'\n    },\n    showMoreActions: {\n      control: 'boolean',\n      description: 'Whether to show the more actions (three dots) button'\n    }\n  }\n}"
                },
                {
                    "name": "MinimalNoActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Minimal header example with no action buttons, useful for read-only entity displays or when actions are handled elsewhere on the page.'\n      }\n    }\n  },\n  args: {\n    title: 'Simple Entity Details',\n    showPrimaryAction: false,\n    showSecondaryAction: false,\n    showMoreActions: false\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Created\"\n            value=\"March 15, 2024\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n          <ds-data-item\n            label=\"Last Modified\"\n            value=\"Yesterday\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
                },
                {
                    "name": "MobileView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    title: 'Mobile Responsive Header',\n    showPrimaryAction: true,\n    primaryActionText: 'Edit',\n    primaryActionIcon: 'remixEditLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'Share',\n    secondaryActionIcon: 'remixShareLine',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1'\n    },\n    docs: {\n      description: {\n        story: 'Mobile responsive behavior showing how the header adapts to smaller screens with stacked layout and compact spacing. Data items switch to vertical layout for better mobile experience.'\n      }\n    }\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Owner\"\n            value=\"John Doe\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"JD\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
                },
                {
                    "name": "Overview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'The Header Details component provides a consistent layout for entity detail pages with configurable actions and flexible metadata display.'\n      }\n    }\n  },\n  args: {\n    title: 'Entity Detail Example',\n    showPrimaryAction: true,\n    primaryActionText: 'Edit',\n    primaryActionIcon: 'remixEditLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'Share',\n    secondaryActionIcon: 'remixShareLine',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n        (primaryActionClick)=\"onPrimaryAction($event)\"\n        (secondaryActionClick)=\"onSecondaryAction($event)\"\n        (moreActionsClick)=\"onMoreActions($event)\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Owner\"\n            value=\"Sarah Johnson\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"SJ\"\n          />\n          <ds-data-item\n            label=\"Created\"\n            value=\"March 15, 2024\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n          <ds-data-item\n            label=\"Category\"\n            value=\"Important\"\n            layout=\"vertical\"\n            valueType=\"icon-text\"\n            iconName=\"remixStarFill\"\n          />\n        </div>\n      </ds-header-details>\n    `,\n    methods: {\n      onPrimaryAction: (event: MouseEvent) => {\n        console.log('Primary action clicked:', event);\n      },\n      onSecondaryAction: (event: MouseEvent) => {\n        console.log('Secondary action clicked:', event);\n      },\n      onMoreActions: (event: MouseEvent) => {\n        console.log('More actions clicked:', event);\n      }\n    }\n  })\n}"
                },
                {
                    "name": "PropertyDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Real estate property management example showing how to display property information with relevant actions like editing and viewing related leases.'\n      }\n    }\n  },\n  args: {\n    title: 'Sunset Boulevard Apartments',\n    showPrimaryAction: true,\n    primaryActionText: 'Edit Property',\n    primaryActionIcon: 'remixEditLine',\n    primaryActionVariant: 'primary',\n    showSecondaryAction: true,\n    secondaryActionText: 'View Leases',\n    secondaryActionIcon: 'remixFileList3Line',\n    secondaryActionVariant: 'secondary',\n    showMoreActions: true\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-header-details\n        [title]=\"title\"\n        [showPrimaryAction]=\"showPrimaryAction\"\n        [primaryActionText]=\"primaryActionText\"\n        [primaryActionIcon]=\"primaryActionIcon\"\n        [primaryActionVariant]=\"primaryActionVariant\"\n        [showSecondaryAction]=\"showSecondaryAction\"\n        [secondaryActionText]=\"secondaryActionText\"\n        [secondaryActionIcon]=\"secondaryActionIcon\"\n        [secondaryActionVariant]=\"secondaryActionVariant\"\n        [showMoreActions]=\"showMoreActions\"\n      >\n        <div slot=\"details\" style=\"display: flex; flex-wrap: wrap; gap: 48px;\">\n          <ds-data-item\n            label=\"Property Type\"\n            value=\"Residential\"\n            layout=\"vertical\"\n            valueType=\"icon-text\"\n            iconName=\"remixHome4Line\"\n          />\n          <ds-data-item\n            label=\"Status\"\n            value=\"Active\"\n            layout=\"vertical\"\n            valueType=\"badge\"\n            badgeVariant=\"success\"\n            badgeContent=\"Active\"\n            badgeContentType=\"text\"\n          />\n          <ds-data-item\n            label=\"Owner\"\n            value=\"Sarah Johnson\"\n            layout=\"vertical\"\n            valueType=\"avatar-text\"\n            avatarType=\"initials\"\n            avatarInitials=\"SJ\"\n          />\n          <ds-data-item\n            label=\"Units\"\n            value=\"24 units\"\n            layout=\"vertical\"\n            valueType=\"text\"\n          />\n        </div>\n      </ds-header-details>\n    `\n  })\n}"
                }
            ],
            "src/app/components/ui/input/ds-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/input/ds-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/input/ds-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsInputComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Input',\n  component: DsInputComponent,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      story: {\n        inline: true,\n        iframeHeight: 100,\n      }\n    }\n  },\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px;\">${story}</div></div>`\n    )\n  ],\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: { type: 'select' }, options: ['default', 'error', 'warning', 'success'] },\n    type: { control: { type: 'select' }, options: ['text', 'email', 'password', 'number', 'tel', 'url', 'search'] },\n    placeholder: { control: 'text' },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    required: { control: 'boolean' },\n    clearable: { control: 'boolean' },\n    leadingIcon: { control: 'text' },\n    trailingIcon: { control: 'text' },\n    ariaLabel: { control: 'text' },\n    ariaDescribedBy: { control: 'text' },\n  },\n  args: {\n    variant: 'default',\n    type: 'text',\n    placeholder: 'Enter text...',\n    disabled: false,\n    readonly: false,\n    required: false,\n    clearable: false,\n  },\n}"
                },
                {
                    "name": "WithLeadingIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/input/ds-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { leadingIcon: 'remixUserLine', placeholder: 'Username' },\n}"
                }
            ],
            "src/app/components/ui/label/ds-label.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/label/ds-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    className: '',\n    size: 'md',\n  },\n  render: (args) => ({\n    props: {\n      ...args\n    },\n    styles: [`\n      :host {\n        display: block;\n        padding: 1rem;\n        background: white;\n      }\n    `],\n    template: `\n      <ds-label [className]=\"className\" [for]=\"for\" [id]=\"id\" [size]=\"size\">\n        Label Text\n      </ds-label>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/label/ds-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsLabelComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Label',\n  component: DsLabelComponent,\n  tags: ['autodocs'],\n  parameters: { layout: 'centered' },\n  decorators: [\n    moduleMetadata({\n      imports: [DsInputComponent],\n    })\n  ],\n  argTypes: {\n    className: {\n      control: 'text',\n      description: 'Additional CSS classes to apply to the label',\n    },\n    for: {\n      control: 'text',\n      description: 'The ID of the form control this label is associated with',\n    },\n    id: {\n      control: 'text',\n      description: 'The ID of the label element',\n    },\n    size: {\n      control: 'radio',\n      options: ['sm', 'md'],\n      description: 'The size of the label text (sm = ui-xs-regular, md = ui-sm-regular)',\n      defaultValue: 'md',\n    },\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/label/ds-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    className: '',\n  },\n  render: () => ({\n    styles: [`\n      :host {\n        display: block;\n        padding: 1rem;\n        background: white;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n      }\n    `],\n    template: `\n      <div class=\"container\">\n        <ds-label size=\"sm\">\n          Small Label (ui-xs-regular)\n        </ds-label>\n        <ds-label size=\"md\">\n          Medium Label (ui-sm-regular)\n        </ds-label>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "WithInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/label/ds-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    className: '',\n    for: 'example-input',\n    size: 'md',\n  },\n  render: (args) => ({\n    props: {\n      ...args\n    },\n    styles: [`\n      :host {\n        display: block;\n        padding: 1rem;\n        background: white;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n      }\n    `],\n    template: `\n      <div class=\"container\">\n        <ds-label [className]=\"className\" [for]=\"for\" [id]=\"id\" [size]=\"size\">\n          Input Label\n        </ds-label>\n        <ds-input id=\"example-input\" placeholder=\"Enter text...\"></ds-input>\n      </div>\n    `\n  })\n}"
                }
            ],
            "src/app/components/ui/link/ds-link.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'This is a link',\n    href: '#',\n    showIcon: false,\n  },\n}"
                },
                {
                    "name": "InteractiveExamples",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; align-items: flex-start;\">\n        <ds-link href=\"#\" content=\"Simple link\"></ds-link>\n        <ds-link href=\"https://example.com\" target=\"_blank\" rel=\"noopener noreferrer\" [showIcon]=\"true\" iconName=\"remixExternalLinkLine\" content=\"External link\"></ds-link>\n        <ds-link href=\"mailto:test@example.com\" [showIcon]=\"true\" iconName=\"remixMailLine\" content=\"Email link\"></ds-link>\n        <ds-link href=\"#\" [showIcon]=\"true\" iconName=\"remixDownloadLine\" content=\"Download link\"></ds-link>\n        <ds-link href=\"#\">Link with <strong>formatted</strong> content</ds-link>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsLinkComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Link',\n  component: DsLinkComponent,\n  parameters: {\n    layout: 'centered',\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    href: {\n      control: 'text',\n    },\n    target: {\n      control: 'select',\n      options: ['_self', '_blank', '_parent', '_top'],\n    },\n    rel: {\n      control: 'text',\n    },\n    content: {\n      control: 'text',\n    },\n    showIcon: {\n      control: 'boolean',\n    },\n    iconName: {\n      control: 'text',\n    },\n  },\n}"
                },
                {
                    "name": "SlotContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    href: '#',\n    showIcon: false,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-link [href]=\"href\" [showIcon]=\"showIcon\">\n        Link with <strong>formatted</strong> content\n      </ds-link>\n    `,\n  }),\n}"
                },
                {
                    "name": "SlotContentWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    href: 'mailto:contact@example.com',\n    showIcon: true,\n    iconName: 'remixMailLine',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <ds-link [href]=\"href\" [showIcon]=\"showIcon\" [iconName]=\"iconName\">\n        Send us an <em>email</em>\n      </ds-link>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithCustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'Download file',\n    href: '#',\n    showIcon: true,\n    iconName: 'remixDownloadLine',\n  },\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: 'External link',\n    href: 'https://example.com',\n    target: '_blank',\n    rel: 'noopener noreferrer',\n    showIcon: true,\n    iconName: 'remixExternalLinkLine',\n  },\n}"
                }
            ],
            "src/app/components/ui/select/ds-select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'default',\n    disabled: false,\n    required: false,\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    disabled: true,\n  },\n}"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'error',\n  },\n}"
                },
                {
                    "name": "groupedOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DsSelectOption[]",
                    "defaultValue": "[\n  { id: '1', label: 'Apple', value: 'apple', group: 'Fruits' },\n  { id: '2', label: 'Banana', value: 'banana', group: 'Fruits' },\n  { id: '3', label: 'Orange', value: 'orange', group: 'Fruits' },\n  { id: '4', label: 'Carrot', value: 'carrot', group: 'Vegetables' },\n  { id: '5', label: 'Broccoli', value: 'broccoli', group: 'Vegetables' },\n  { id: '6', label: 'Potato', value: 'potato', group: 'Vegetables' },\n]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsSelectComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Select',\n  component: DsSelectComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [FormsModule],\n    }),\n    componentWrapperDecorator(\n      (story) => `<div style=\"display: flex; justify-content: center;\"><div style=\"width: 200px;\">${story}</div></div>`\n    )\n  ],\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      story: {\n        inline: true,\n        iframeHeight: 100,\n      }\n    }\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'error', 'warning', 'success'],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    required: {\n      control: 'boolean',\n    },\n  },\n}"
                },
                {
                    "name": "simpleOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DsSelectOption[]",
                    "defaultValue": "[\n  { id: '1', label: 'Option 1', value: 1 },\n  { id: '2', label: 'Option 2', value: 2 },\n  { id: '3', label: 'Option 3', value: 3 },\n  { id: '4', label: 'Option 4', value: 4 },\n]"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'success',\n  },\n}"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: simpleOptions,\n    placeholder: 'Select an option',\n    variant: 'warning',\n  },\n}"
                },
                {
                    "name": "WithDisabledOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: [\n      { id: '1', label: 'Option 1', value: 1 },\n      { id: '2', label: 'Option 2', value: 2, disabled: true },\n      { id: '3', label: 'Option 3', value: 3 },\n      { id: '4', label: 'Option 4', value: 4, disabled: true },\n    ],\n    placeholder: 'Select an option',\n  },\n}"
                },
                {
                    "name": "WithGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: groupedOptions,\n    placeholder: 'Select food',\n    variant: 'default',\n  },\n}"
                }
            ],
            "src/app/components/ui/textarea/ds-textarea.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "LargeTextarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'This is a large textarea for longer content...',\n    rows: 8,\n    size: 'lg',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsTextareaComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Textarea',\n  component: DsTextareaComponent,\n  parameters: { layout: 'centered' },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: { type: 'select' }, options: ['default', 'error', 'warning', 'success'] },\n    size: { control: { type: 'select' }, options: ['sm', 'md', 'lg'] },\n    placeholder: { control: 'text' },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    required: { control: 'boolean' },\n    rows: { control: { type: 'number', min: 1, max: 20 } },\n    cols: { control: { type: 'number', min: 10, max: 100 } },\n    maxlength: { control: { type: 'number', min: 1, max: 1000 } },\n    minlength: { control: { type: 'number', min: 0, max: 100 } },\n    ariaLabel: { control: 'text' },\n    ariaDescribedBy: { control: 'text' },\n    ariaLabelledBy: { control: 'text' },\n  },\n  args: {\n    variant: 'default',\n    size: 'md',\n    placeholder: 'Enter your message...',\n    disabled: false,\n    readonly: false,\n    required: false,\n    rows: 4,\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 400px;\">\n        <ds-textarea size=\"sm\" placeholder=\"Small textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea size=\"md\" placeholder=\"Medium textarea\" rows=\"4\"></ds-textarea>\n        <ds-textarea size=\"lg\" placeholder=\"Large textarea\" rows=\"5\"></ds-textarea>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "States",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 400px;\">\n        <ds-textarea placeholder=\"Normal textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea placeholder=\"Disabled textarea\" [disabled]=\"true\" rows=\"3\"></ds-textarea>\n        <ds-textarea placeholder=\"Readonly textarea\" [readonly]=\"true\" rows=\"3\"></ds-textarea>\n        <ds-textarea placeholder=\"Required textarea\" [required]=\"true\" rows=\"3\"></ds-textarea>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: grid; gap: 16px; width: 400px;\">\n        <ds-textarea variant=\"default\" placeholder=\"Default textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea variant=\"success\" placeholder=\"Success textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea variant=\"warning\" placeholder=\"Warning textarea\" rows=\"3\"></ds-textarea>\n        <ds-textarea variant=\"error\" placeholder=\"Error textarea\" rows=\"3\"></ds-textarea>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithFormField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <ds-form-field \n        label=\"Message\" \n        description=\"Please provide detailed feedback\"\n        style=\"width: 400px;\">\n        <ds-textarea \n          placeholder=\"Enter your feedback here...\" \n          rows=\"5\"\n          [required]=\"true\">\n        </ds-textarea>\n      </ds-form-field>\n    `,\n  }),\n  parameters: {\n    docs: {\n      source: {\n        code: `<ds-form-field \n  label=\"Message\" \n  description=\"Please provide detailed feedback\">\n  <ds-textarea \n    placeholder=\"Enter your feedback here...\" \n    rows=\"5\"\n    [required]=\"true\">\n  </ds-textarea>\n</ds-form-field>`,\n      },\n    },\n  },\n}"
                },
                {
                    "name": "WithLimits",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'This textarea has a 100 character limit...',\n    maxlength: 100,\n    minlength: 10,\n    rows: 4,\n  },\n}"
                },
                {
                    "name": "WithPlaceholder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { \n    placeholder: 'Write your thoughts here...',\n    rows: 6 \n  },\n}"
                }
            ],
            "src/app/components/ui/topbar/ds-topbar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "LongTitleWithBreadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'This is a Very Long Page Title That Should Be Truncated',\n    iconName: 'remixFileTextLine',\n    userInitials: 'LT',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Documents', path: '/documents', isLast: false },\n      { label: 'Reports', path: '/documents/reports', isLast: false },\n      { label: 'This is a Very Long Page Title That Should Be Truncated', path: '/documents/reports/long-title', isLast: true }\n    ],\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsTopbarComponent>",
                    "defaultValue": "{\n  title: 'Application shell/Topbar',\n  component: DsTopbarComponent,\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      description: {\n        component: 'A page header component that displays a page title with icon on the left and action buttons with user avatar on the right. Can optionally show breadcrumb navigation for nested pages.',\n      },\n    },\n  },\n  argTypes: {\n    pageTitle: {\n      control: 'text',\n      description: 'The title of the page',\n    },\n    iconName: {\n      control: 'text',\n      description: 'Icon name to display next to the page title',\n    },\n    userInitials: {\n      control: 'text',\n      description: 'User initials to display in the avatar',\n    },\n    showBreadcrumbs: {\n      control: 'boolean',\n      description: 'Whether to show breadcrumb navigation',\n    },\n    breadcrumbItems: {\n      control: 'object',\n      description: 'Array of breadcrumb items to display',\n    },\n    showFirstAction: {\n      control: 'boolean',\n      description: 'Whether to show the first action button',\n    },\n    firstActionIcon: {\n      control: 'text',\n      description: 'Icon name for the first action button',\n    },\n    firstActionLabel: {\n      control: 'text',\n      description: 'Aria label for the first action button',\n    },\n    showSecondAction: {\n      control: 'boolean',\n      description: 'Whether to show the second action button',\n    },\n    secondActionIcon: {\n      control: 'text',\n      description: 'Icon name for the second action button',\n    },\n    secondActionLabel: {\n      control: 'text',\n      description: 'Aria label for the second action button',\n    },\n  },\n  args: {\n    pageTitle: 'Dashboard',\n    iconName: 'remixHome4Line',\n    userInitials: 'JD',\n    showBreadcrumbs: false,\n    breadcrumbItems: [],\n    showFirstAction: true,\n    firstActionIcon: 'remixNotification3Line',\n    firstActionLabel: 'Notifications',\n    showSecondAction: true,\n    secondActionIcon: 'remixSettings3Line',\n    secondActionLabel: 'Settings',\n  },\n}"
                },
                {
                    "name": "MobileViewWithBreadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    viewport: {\n      defaultViewport: 'mobile1',\n    },\n  },\n  args: {\n    pageTitle: 'Account Details',\n    iconName: 'remixSmartphoneLine',\n    userInitials: 'MB',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Settings', path: '/settings', isLast: false },\n      { label: 'Account', path: '/settings/account', isLast: false },\n      { label: 'Details', path: '/settings/account/details', isLast: true }\n    ],\n  },\n}"
                },
                {
                    "name": "NestedPageWithBreadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'Edit Profile',\n    iconName: 'remixUser3Line',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Settings', path: '/settings', isLast: false },\n      { label: 'Users', path: '/settings/users', isLast: false },\n      { label: 'Edit Profile', path: '/settings/users/profile', isLast: true }\n    ],\n  },\n}"
                },
                {
                    "name": "NoActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'Read Only Page',\n    iconName: 'remixEyeLine',\n    userInitials: 'RO',\n    showFirstAction: false,\n    showSecondAction: false,\n  },\n}"
                },
                {
                    "name": "ProjectOverview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'Project Overview',\n    iconName: 'remixFolderLine',\n    userInitials: 'AM',\n  },\n}"
                },
                {
                    "name": "SingleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'Profile',\n    iconName: 'remixUser3Line',\n    userInitials: 'SA',\n    showFirstAction: true,\n    showSecondAction: false,\n    firstActionIcon: 'remixEditLine',\n    firstActionLabel: 'Edit Profile',\n  },\n}"
                },
                {
                    "name": "UserSettings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'User Settings',\n    iconName: 'remixSettings3Line',\n    userInitials: 'SM',\n    firstActionIcon: 'remixSaveLine',\n    firstActionLabel: 'Save Settings',\n    secondActionIcon: 'remixRefreshLine',\n    secondActionLabel: 'Reset Settings',\n  },\n}"
                },
                {
                    "name": "WithBreadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    pageTitle: 'PFA Pension',\n    iconName: 'remixBuilding4Line',\n    showBreadcrumbs: true,\n    breadcrumbItems: [\n      { label: 'Customers', path: '/customers', isLast: false },\n      { label: 'PFA Pension', path: '/customers/pfa-pension', isLast: true }\n    ],\n  },\n}"
                }
            ],
            "src/app/components/ui/data-item/ds-data-item.stories.ts": [
                {
                    "name": "HorizontalAvatarIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Owner',\n    value: 'System User',\n    layout: 'horizontal',\n    valueType: 'avatar-text',\n    avatarType: 'icon',\n    avatarIconName: 'remixRobotFill',\n  },\n}"
                },
                {
                    "name": "HorizontalAvatarPhoto",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Created by',\n    value: 'Sarah Wilson',\n    layout: 'horizontal',\n    valueType: 'avatar-text',\n    avatarType: 'photo',\n    avatarSrc: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face',\n  },\n}"
                },
                {
                    "name": "HorizontalBadgeIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Status',\n    layout: 'horizontal',\n    valueType: 'badge',\n    badgeVariant: 'success',\n    badgeContentType: 'icon-text',\n    badgeContent: 'Completed',\n    badgeIcon: 'remixCheckboxCircleFill',\n  },\n}"
                },
                {
                    "name": "HorizontalBadgeIndicator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Type',\n    layout: 'horizontal',\n    valueType: 'badge',\n    badgeVariant: 'brand',\n    badgeContentType: 'indicator-text',\n    badgeContent: 'Premium',\n    badgeIndicatorShape: 'circle',\n  },\n}"
                },
                {
                    "name": "HorizontalIconText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Location',\n    value: 'New York, NY',\n    layout: 'horizontal',\n    valueType: 'icon-text',\n    iconName: 'remixMapPin2Fill',\n  },\n}"
                },
                {
                    "name": "HorizontalText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Full Name',\n    value: 'John Doe',\n    layout: 'horizontal',\n    valueType: 'text',\n  },\n}"
                },
                {
                    "name": "LayoutComparison",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 24px; max-width: 400px;\">\n        <div>\n          <h3 style=\"margin: 0 0 16px 0; font-size: 16px; font-weight: 500;\">Vertical Layout</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 16px;\">\n            <ds-data-item\n              label=\"Email Address\"\n              value=\"user@example.com\"\n              layout=\"vertical\"\n              valueType=\"text\"\n            />\n            <ds-data-item\n              label=\"Status\"\n              value=\"Active\"\n              layout=\"vertical\"\n              valueType=\"icon-text\"\n              iconName=\"remixCheckboxCircleFill\"\n            />\n            <ds-data-item\n              label=\"Assigned to\"\n              value=\"John Doe\"\n              layout=\"vertical\"\n              valueType=\"avatar-text\"\n              avatarType=\"initials\"\n              avatarInitials=\"JD\"\n            />\n          </div>\n        </div>\n        \n        <div>\n          <h3 style=\"margin: 0 0 16px 0; font-size: 16px; font-weight: 500;\">Horizontal Layout</h3>\n          <div style=\"display: flex; flex-direction: column; gap: 16px;\">\n            <ds-data-item\n              label=\"Email Address\"\n              value=\"user@example.com\"\n              layout=\"horizontal\"\n              valueType=\"text\"\n            />\n            <ds-data-item\n              label=\"Status\"\n              value=\"Active\"\n              layout=\"horizontal\"\n              valueType=\"icon-text\"\n              iconName=\"remixCheckboxCircleFill\"\n            />\n            <ds-data-item\n              label=\"Assigned to\"\n              value=\"John Doe\"\n              layout=\"horizontal\"\n              valueType=\"avatar-text\"\n              avatarType=\"initials\"\n              avatarInitials=\"JD\"\n            />\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DsDataItemComponent>",
                    "defaultValue": "{\n  title: 'Primitives/Data Item',\n  component: DsDataItemComponent,\n  parameters: {\n    layout: 'padded',\n    docs: {\n      description: {\n        component: `\nA flexible data item component for displaying label-value pairs with multiple layout options and value types. Perfect for user profiles, task details, settings panels, and structured data displays.\n\n## Features\n\n- **Two Layout Types**: Vertical and horizontal arrangements for different use cases\n- **Fixed Value Height**: 32px height for consistent alignment across all value types\n- **Four Value Types**: Text, Icon+Text, Avatar+Text, and Badge variants\n- **Responsive Design**: Horizontal layout automatically collapses to vertical on mobile\n- **Consistent Spacing**: 8px gap between elements in value container\n- **Semantic Typography**: Uses ui-sm-regular (14px, 400 weight) for value text\n\n## Layout Types\n\n### Vertical Layout\nStacks label above value with 4px gap. Ideal for compact displays, mobile layouts, and when you need to conserve horizontal space.\n\n### Horizontal Layout\nPlaces label and value side-by-side with 12px gap. Label container has fixed 128px width for consistent alignment across multiple data items.\n\n## Value Types\n\n### Text Only\nSimple text display using ui-sm-regular typography with primary text color.\n\n### Icon + Text\n16px icon with secondary color paired with text. Perfect for status indicators, locations, or categorized information.\n\n### Avatar + Text\n20x20px avatar (xs size) with text. Supports all avatar types: initials, photo, and icon. Ideal for user assignments, ownership, or person-related data.\n\n### Badge\nFull badge component with all variants and content types. Perfect for status, priority, categories, or any labeled information.\n\nFor complete documentation, properties reference, and implementation guidelines, see the [Data Item README](/?path=/docs/components-data-item--docs).\n        `,\n      },\n    },\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'The label text to display',\n    },\n    value: {\n      control: 'text',\n      description: 'The value text to display (not used for badge type)',\n    },\n    layout: {\n      control: 'select',\n      options: ['vertical', 'horizontal'],\n      description: 'Layout arrangement of label and value',\n    },\n    valueType: {\n      control: 'select',\n      options: ['text', 'icon-text', 'avatar-text', 'badge'],\n      description: 'Type of value display',\n    },\n    iconName: {\n      control: 'text',\n      description: 'Icon name for icon-text type',\n      if: { arg: 'valueType', eq: 'icon-text' },\n    },\n    avatarType: {\n      control: 'select',\n      options: ['initials', 'photo', 'icon'],\n      description: 'Avatar type for avatar-text type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    avatarInitials: {\n      control: 'text',\n      description: 'Avatar initials for initials type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    avatarSrc: {\n      control: 'text',\n      description: 'Avatar image source for photo type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    avatarIconName: {\n      control: 'text',\n      description: 'Avatar icon name for icon type',\n      if: { arg: 'valueType', eq: 'avatar-text' },\n    },\n    badgeVariant: {\n      control: 'select',\n      options: ['default', 'brand', 'success', 'warning', 'destructive', 'blue', 'light-purple', 'pink', 'salmon-orange', 'orange', 'lime-green', 'grey'],\n      description: 'Badge color variant',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeContentType: {\n      control: 'select',\n      options: ['text', 'icon-text', 'indicator-text'],\n      description: 'Badge content type',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeContent: {\n      control: 'text',\n      description: 'Badge content text',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeIcon: {\n      control: 'text',\n      description: 'Badge icon name for icon-text type',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n    badgeIndicatorShape: {\n      control: 'select',\n      options: ['circle', 'square'],\n      description: 'Badge indicator shape for indicator-text type',\n      if: { arg: 'valueType', eq: 'badge' },\n    },\n  },\n  args: {\n    label: 'Email',\n    value: 'user@example.com',\n    layout: 'vertical',\n    valueType: 'text',\n  },\n}"
                },
                {
                    "name": "TaskDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;\">\n        <h3 style=\"margin: 0 0 8px 0; font-size: 18px; font-weight: 600;\">Task Details</h3>\n        \n        <ds-data-item\n          label=\"Title\"\n          value=\"Implement user authentication\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Priority\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"warning\"\n          badgeContentType=\"text\"\n          badgeContent=\"High\"\n        />\n        <ds-data-item\n          label=\"Status\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"blue\"\n          badgeContentType=\"indicator-text\"\n          badgeContent=\"In Progress\"\n          badgeIndicatorShape=\"circle\"\n        />\n        <ds-data-item\n          label=\"Assignee\"\n          value=\"Sarah Wilson\"\n          layout=\"horizontal\"\n          valueType=\"avatar-text\"\n          avatarType=\"photo\"\n          avatarSrc=\"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face\"\n        />\n        <ds-data-item\n          label=\"Due Date\"\n          value=\"March 15, 2024\"\n          layout=\"horizontal\"\n          valueType=\"icon-text\"\n          iconName=\"remixCalendarLine\"\n        />\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
                },
                {
                    "name": "UserProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;\">\n        <h3 style=\"margin: 0 0 8px 0; font-size: 18px; font-weight: 600;\">User Profile</h3>\n        \n        <ds-data-item\n          label=\"Full Name\"\n          value=\"Sarah Wilson\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Email\"\n          value=\"sarah.wilson@company.com\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Role\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"brand\"\n          badgeContentType=\"text\"\n          badgeContent=\"Admin\"\n        />\n        <ds-data-item\n          label=\"Status\"\n          value=\"Online\"\n          layout=\"horizontal\"\n          valueType=\"icon-text\"\n          iconName=\"remixCheckboxCircleFill\"\n        />\n        <ds-data-item\n          label=\"Manager\"\n          value=\"John Doe\"\n          layout=\"horizontal\"\n          valueType=\"avatar-text\"\n          avatarType=\"initials\"\n          avatarInitials=\"JD\"\n        />\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
                },
                {
                    "name": "ValueTypesShowcase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 16px; max-width: 400px;\">\n        <ds-data-item\n          label=\"Text Value\"\n          value=\"Simple text content\"\n          layout=\"horizontal\"\n          valueType=\"text\"\n        />\n        <ds-data-item\n          label=\"Icon + Text\"\n          value=\"With icon prefix\"\n          layout=\"horizontal\"\n          valueType=\"icon-text\"\n          iconName=\"remixStarFill\"\n        />\n        <ds-data-item\n          label=\"Avatar + Text\"\n          value=\"John Doe\"\n          layout=\"horizontal\"\n          valueType=\"avatar-text\"\n          avatarType=\"initials\"\n          avatarInitials=\"JD\"\n        />\n        <ds-data-item\n          label=\"Badge Value\"\n          layout=\"horizontal\"\n          valueType=\"badge\"\n          badgeVariant=\"success\"\n          badgeContentType=\"icon-text\"\n          badgeContent=\"Verified\"\n          badgeIcon=\"remixShieldCheckFill\"\n        />\n      </div>\n    `,\n  }),\n  parameters: {\n    controls: { disable: true },\n  },\n}"
                },
                {
                    "name": "VerticalAvatarInitials",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Assigned to',\n    value: 'John Doe',\n    layout: 'vertical',\n    valueType: 'avatar-text',\n    avatarType: 'initials',\n    avatarInitials: 'JD',\n  },\n}"
                },
                {
                    "name": "VerticalBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Priority',\n    layout: 'vertical',\n    valueType: 'badge',\n    badgeVariant: 'destructive',\n    badgeContentType: 'text',\n    badgeContent: 'High',\n  },\n}"
                },
                {
                    "name": "VerticalIconText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Status',\n    value: 'Active',\n    layout: 'vertical',\n    valueType: 'icon-text',\n    iconName: 'remixCheckboxCircleFill',\n  },\n}"
                },
                {
                    "name": "VerticalText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Email Address',\n    value: 'user@example.com',\n    layout: 'vertical',\n    valueType: 'text',\n  },\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  decorators: [\n    applicationConfig({\n      providers: [provideAllRemixIcons()]\n    })\n  ],\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    options: {\n      storySort: {\n        order: ['*'],\n        method: 'alphabetical'\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/pages/app-shell-showcase.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AppShellShowcaseComponent>",
                    "file": "src/app/pages/app-shell-showcase.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/app-layout/ds-app-layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsAppLayoutComponent>",
                    "file": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/avatar/ds-avatar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsAvatarComponent>",
                    "file": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/badge/ds-badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsBadgeComponent>",
                    "file": "src/app/components/ui/badge/ds-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/button/ds-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsButtonComponent>",
                    "file": "src/app/components/ui/button/ds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/checkbox/ds-checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsCheckboxComponent>",
                    "file": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/form-field/ds-form-field.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsFormFieldComponent>",
                    "file": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/data-item/ds-data-item.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsDataItemComponent>",
                    "file": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/header-details/ds-header-details.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsHeaderDetailsComponent>",
                    "file": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/icon/ds-icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsIconComponent>",
                    "file": "src/app/components/ui/icon/ds-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/input/ds-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsInputComponent>",
                    "file": "src/app/components/ui/input/ds-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/label/ds-label.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsLabelComponent>",
                    "file": "src/app/components/ui/label/ds-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/link/ds-link.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsLinkComponent>",
                    "file": "src/app/components/ui/link/ds-link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/select/ds-select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsSelectComponent>",
                    "file": "src/app/components/ui/select/ds-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsShapeIndicatorComponent>",
                    "file": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/sidebar/ds-sidebar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsSidebarComponent>",
                    "file": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/textarea/ds-textarea.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsTextareaComponent>",
                    "file": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/tooltip/ds-tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsTooltipComponent>",
                    "file": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/ui/topbar/ds-topbar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DsTopbarComponent>",
                    "file": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "DebugWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AutoResponsive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InitiallyCollapsed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopbarDebug",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/app-layout/ds-app-layout.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InitialsType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhotoType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Static",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/avatar/ds-avatar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllColorVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContentTypeComparison",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconTextBrand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconTextDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconTextDestructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconTextSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconTextWarning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextBlue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextBrand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextDestructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextGrey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextLightPurple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextLimeGreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextOrange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextPink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextSalmonOrange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IndicatorTextWarning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextBlue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextBrand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextDestructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextGrey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextLightPurple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextLimeGreen",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextOrange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextPink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextSalmonOrange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextWarning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/badge/ds-badge.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconButtonVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoadingStates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "States",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/button/ds-button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllSizesAndVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LabelToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "States",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/checkbox/ds-checkbox.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalAvatarIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalAvatarPhoto",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalBadgeIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalBadgeIndicator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalIconText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HorizontalText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LayoutComparison",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TaskDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValueTypesShowcase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalAvatarInitials",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalIconText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/data-item/ds-data-item.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/form-field/ds-form-field.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeaseDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MinimalNoActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Overview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PropertyDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header-details/ds-header-details.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/icon/ds-icon.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/input/ds-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/input/ds-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/input/ds-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLeadingIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/input/ds-input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/label/ds-label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/label/ds-label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/label/ds-label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/label/ds-label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/label/ds-label.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InteractiveExamples",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlotContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlotContentWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/link/ds-link.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ExampleOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "groupedOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabledOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/select/ds-select.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllShapes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Diamond",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pentagon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Square",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Triangle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UsageExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActiveItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Collapsed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CollapsedWithGlobalAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "demoGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithGlobalAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/ds-sidebar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeTextarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "States",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLimits",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPlaceholder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/textarea/ds-textarea.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonSizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DifferentPlacements",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormElements",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/tooltip/ds-tooltip.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongTitleWithBreadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileViewWithBreadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NestedPageWithBreadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectOverview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserSettings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithBreadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/topbar/ds-topbar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppShellShowcaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CollapsedSidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "demoGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithBreadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app-shell-showcase.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}