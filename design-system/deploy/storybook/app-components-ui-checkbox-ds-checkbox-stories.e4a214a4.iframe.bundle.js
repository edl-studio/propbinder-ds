"use strict";(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[366],{"./node_modules/ng-primitives/fesm2022/ng-primitives-checkbox.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{hJ:()=>NgpCheckbox});var _angular_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ng_primitives_form_field__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-form-field.mjs"),ng_primitives_interactions__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-interactions.mjs"),ng_primitives_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-utils.mjs"),ng_primitives_state__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-state.mjs");const NgpCheckboxStateToken=(0,ng_primitives_state__WEBPACK_IMPORTED_MODULE_0__.RX)("Checkbox"),provideCheckboxState=(0,ng_primitives_state__WEBPACK_IMPORTED_MODULE_0__.dL)(NgpCheckboxStateToken),checkboxState=((0,ng_primitives_state__WEBPACK_IMPORTED_MODULE_0__.yb)(NgpCheckboxStateToken),(0,ng_primitives_state__WEBPACK_IMPORTED_MODULE_0__.ur)(NgpCheckboxStateToken));class NgpCheckbox{constructor(){this.id=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)((0,ng_primitives_utils__WEBPACK_IMPORTED_MODULE_2__.NF)("ngp-checkbox")),this.checked=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)(!1,{alias:"ngpCheckboxChecked",transform:_angular_core__WEBPACK_IMPORTED_MODULE_1__.booleanAttribute}),this.checkedChange=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.output)({alias:"ngpCheckboxCheckedChange"}),this.indeterminate=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)(!1,{alias:"ngpCheckboxIndeterminate",transform:_angular_core__WEBPACK_IMPORTED_MODULE_1__.booleanAttribute}),this.indeterminateChange=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.output)({alias:"ngpCheckboxIndeterminateChange"}),this.required=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)(!1,{alias:"ngpCheckboxRequired",transform:_angular_core__WEBPACK_IMPORTED_MODULE_1__.booleanAttribute}),this.disabled=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)(!1,{alias:"ngpCheckboxDisabled",transform:_angular_core__WEBPACK_IMPORTED_MODULE_1__.booleanAttribute}),this.state=checkboxState(this),(0,ng_primitives_form_field__WEBPACK_IMPORTED_MODULE_3__.BU)({id:this.state.id,disabled:this.state.disabled}),(0,ng_primitives_interactions__WEBPACK_IMPORTED_MODULE_4__.XE)({hover:!0,press:!0,focusVisible:!0,disabled:this.state.disabled})}onEnter(event){event.preventDefault()}toggle(event){if(this.state.disabled())return;event?.preventDefault();const checked=!!this.state.indeterminate()||!this.state.checked();this.state.checked.set(checked),this.checkedChange.emit(checked),this.state.indeterminate()&&(this.state.indeterminate.set(!1),this.indeterminateChange.emit(!1))}static#_=this.ɵfac=function NgpCheckbox_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgpCheckbox)};static#_2=this.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_5__.FsC({type:NgpCheckbox,selectors:[["","ngpCheckbox",""]],hostAttrs:["role","checkbox"],hostVars:5,hostBindings:function NgpCheckbox_HostBindings(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_5__.bIt("keydown.enter",function NgpCheckbox_keydown_enter_HostBindingHandler($event){return ctx.onEnter($event)})("click",function NgpCheckbox_click_HostBindingHandler($event){return ctx.toggle($event)})("keydown.space",function NgpCheckbox_keydown_space_HostBindingHandler($event){return ctx.toggle($event)}),2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_5__.Avn("tabIndex",ctx.state.disabled()?-1:0),_angular_core__WEBPACK_IMPORTED_MODULE_5__.BMQ("aria-checked",ctx.state.indeterminate()?"mixed":ctx.state.checked())("data-checked",ctx.state.checked()?"":null)("data-indeterminate",ctx.state.indeterminate()?"":null)("aria-disabled",ctx.state.disabled()))},inputs:{id:[1,"id"],checked:[1,"ngpCheckboxChecked","checked"],indeterminate:[1,"ngpCheckboxIndeterminate","indeterminate"],required:[1,"ngpCheckboxRequired","required"],disabled:[1,"ngpCheckboxDisabled","disabled"]},outputs:{checkedChange:"ngpCheckboxCheckedChange",indeterminateChange:"ngpCheckboxIndeterminateChange"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_5__.Jv_([provideCheckboxState()])]})}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_5__.cDI(NgpCheckbox,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.WLR,args:[{selector:"[ngpCheckbox]",providers:[provideCheckboxState()],host:{role:"checkbox","[attr.aria-checked]":'state.indeterminate() ? "mixed" : state.checked()',"[attr.data-checked]":'state.checked() ? "" : null',"[attr.data-indeterminate]":'state.indeterminate() ? "" : null',"[attr.aria-disabled]":"state.disabled()","[tabindex]":"state.disabled() ? -1 : 0"}}]}],()=>[],{onEnter:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.Z$l,args:["keydown.enter",["$event"]]}],toggle:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.Z$l,args:["click",["$event"]]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.Z$l,args:["keydown.space",["$event"]]}]})},"./src/app/components/ui/checkbox/ds-checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllSizesAndVariants:()=>AllSizesAndVariants,Default:()=>Default,Interactive:()=>Interactive,LabelToggle:()=>LabelToggle,Sizes:()=>Sizes,States:()=>States,Variants:()=>Variants,WithFormField:()=>WithFormField,WithoutLabel:()=>WithoutLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Primitives/Checkbox",component:__webpack_require__("./src/app/components/ui/checkbox/ds-checkbox.ts").A,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:{type:"select"},options:["default","error","warning","success"]},size:{control:{type:"select"},options:["sm","md","lg"]},label:{control:"text"},showLabel:{control:"boolean"},disabled:{control:"boolean"},required:{control:"boolean"},indeterminate:{control:"boolean"},checkboxId:{control:"text"},ariaLabel:{control:"text"},ariaDescribedBy:{control:"text"},ariaLabelledBy:{control:"text"}},args:{variant:"default",size:"md",label:"Accept terms and conditions",showLabel:!0,disabled:!1,required:!1,indeterminate:!1}},Default={},WithoutLabel={args:{showLabel:!1,ariaLabel:"Accept terms and conditions"}},Sizes={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox size="sm" label="Small checkbox"></ds-checkbox>\n        <ds-checkbox size="md" label="Medium checkbox"></ds-checkbox>\n        <ds-checkbox size="lg" label="Large checkbox"></ds-checkbox>\n      </div>\n    '})},Variants={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox variant="default" label="Default checkbox"></ds-checkbox>\n        <ds-checkbox variant="success" label="Success checkbox"></ds-checkbox>\n        <ds-checkbox variant="warning" label="Warning checkbox"></ds-checkbox>\n        <ds-checkbox variant="error" label="Error checkbox"></ds-checkbox>\n      </div>\n    '})},States={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox label="Unchecked checkbox"></ds-checkbox>\n        <ds-checkbox label="Checked checkbox" [checked]="true"></ds-checkbox>\n        <ds-checkbox label="Indeterminate checkbox" [indeterminate]="true"></ds-checkbox>\n        <ds-checkbox label="Disabled checkbox" [disabled]="true"></ds-checkbox>\n        <ds-checkbox label="Disabled checked checkbox" [disabled]="true" [checked]="true"></ds-checkbox>\n      </div>\n    '})},Interactive={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox \n          label="Click me to toggle" \n          (checkedChange)="onCheckedChange($event)">\n        </ds-checkbox>\n        <ds-checkbox \n          label="I\'m required" \n          [required]="true"\n          variant="error">\n        </ds-checkbox>\n        <ds-checkbox \n          label="Hover over me"\n          size="lg">\n        </ds-checkbox>\n      </div>\n    ',props:{onCheckedChange:checked=>{console.log("Checkbox checked:",checked)}}})},WithFormField={render:()=>({template:'\n      <ds-form-field \n        label="Newsletter Preferences" \n        description="Choose your newsletter preferences"\n        style="width: 400px;">\n        <div style="display: grid; gap: 12px; margin-top: 8px;">\n          <ds-checkbox label="Weekly newsletter"></ds-checkbox>\n          <ds-checkbox label="Product updates"></ds-checkbox>\n          <ds-checkbox label="Marketing emails" variant="warning"></ds-checkbox>\n          <ds-checkbox label="Security notifications" [checked]="true" [disabled]="true"></ds-checkbox>\n        </div>\n      </ds-form-field>\n    '}),parameters:{docs:{source:{code:'<ds-form-field \n  label="Newsletter Preferences" \n  description="Choose your newsletter preferences">\n  <div style="display: grid; gap: 12px; margin-top: 8px;">\n    <ds-checkbox label="Weekly newsletter"></ds-checkbox>\n    <ds-checkbox label="Product updates"></ds-checkbox>\n    <ds-checkbox label="Marketing emails" variant="warning"></ds-checkbox>\n    <ds-checkbox label="Security notifications" [checked]="true" [disabled]="true"></ds-checkbox>\n  </div>\n</ds-form-field>'}}}},LabelToggle={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <h4>With Labels</h4>\n        <ds-checkbox [showLabel]="true" label="I have a visible label"></ds-checkbox>\n        <ds-checkbox [showLabel]="true" label="Me too!"></ds-checkbox>\n        \n        <h4 style="margin-top: 24px;">Without Labels (using aria-label)</h4>\n        <ds-checkbox [showLabel]="false" ariaLabel="Hidden label checkbox 1"></ds-checkbox>\n        <ds-checkbox [showLabel]="false" ariaLabel="Hidden label checkbox 2"></ds-checkbox>\n      </div>\n    '})},AllSizesAndVariants={render:()=>({template:'\n      <div style="display: grid; gap: 24px;">\n        <div>\n          <h4>Small Size</h4>\n          <div style="display: grid; gap: 8px; margin-top: 8px;">\n            <ds-checkbox size="sm" variant="default" label="Default small"></ds-checkbox>\n            <ds-checkbox size="sm" variant="success" label="Success small"></ds-checkbox>\n            <ds-checkbox size="sm" variant="warning" label="Warning small"></ds-checkbox>\n            <ds-checkbox size="sm" variant="error" label="Error small"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Medium Size</h4>\n          <div style="display: grid; gap: 8px; margin-top: 8px;">\n            <ds-checkbox size="md" variant="default" label="Default medium"></ds-checkbox>\n            <ds-checkbox size="md" variant="success" label="Success medium"></ds-checkbox>\n            <ds-checkbox size="md" variant="warning" label="Warning medium"></ds-checkbox>\n            <ds-checkbox size="md" variant="error" label="Error medium"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Large Size</h4>\n          <div style="display: grid; gap: 8px; margin-top: 8px;">\n            <ds-checkbox size="lg" variant="default" label="Default large"></ds-checkbox>\n            <ds-checkbox size="lg" variant="success" label="Success large"></ds-checkbox>\n            <ds-checkbox size="lg" variant="warning" label="Warning large"></ds-checkbox>\n            <ds-checkbox size="lg" variant="error" label="Error large"></ds-checkbox>\n          </div>\n        </div>\n      </div>\n    '})},__namedExportsOrder=["Default","WithoutLabel","Sizes","Variants","States","Interactive","WithFormField","LabelToggle","AllSizesAndVariants"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},WithoutLabel.parameters={...WithoutLabel.parameters,docs:{...WithoutLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    showLabel: false,\n    ariaLabel: 'Accept terms and conditions'\n  }\n}",...WithoutLabel.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox size="sm" label="Small checkbox"></ds-checkbox>\n        <ds-checkbox size="md" label="Medium checkbox"></ds-checkbox>\n        <ds-checkbox size="lg" label="Large checkbox"></ds-checkbox>\n      </div>\n    `\n  })\n}',...Sizes.parameters?.docs?.source}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox variant="default" label="Default checkbox"></ds-checkbox>\n        <ds-checkbox variant="success" label="Success checkbox"></ds-checkbox>\n        <ds-checkbox variant="warning" label="Warning checkbox"></ds-checkbox>\n        <ds-checkbox variant="error" label="Error checkbox"></ds-checkbox>\n      </div>\n    `\n  })\n}',...Variants.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox label="Unchecked checkbox"></ds-checkbox>\n        <ds-checkbox label="Checked checkbox" [checked]="true"></ds-checkbox>\n        <ds-checkbox label="Indeterminate checkbox" [indeterminate]="true"></ds-checkbox>\n        <ds-checkbox label="Disabled checkbox" [disabled]="true"></ds-checkbox>\n        <ds-checkbox label="Disabled checked checkbox" [disabled]="true" [checked]="true"></ds-checkbox>\n      </div>\n    `\n  })\n}',...States.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <ds-checkbox \n          label="Click me to toggle" \n          (checkedChange)="onCheckedChange($event)">\n        </ds-checkbox>\n        <ds-checkbox \n          label="I\'m required" \n          [required]="true"\n          variant="error">\n        </ds-checkbox>\n        <ds-checkbox \n          label="Hover over me"\n          size="lg">\n        </ds-checkbox>\n      </div>\n    `,\n    props: {\n      onCheckedChange: (checked: boolean) => {\n        console.log(\'Checkbox checked:\', checked);\n      }\n    }\n  })\n}',...Interactive.parameters?.docs?.source}}},WithFormField.parameters={...WithFormField.parameters,docs:{...WithFormField.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <ds-form-field \n        label="Newsletter Preferences" \n        description="Choose your newsletter preferences"\n        style="width: 400px;">\n        <div style="display: grid; gap: 12px; margin-top: 8px;">\n          <ds-checkbox label="Weekly newsletter"></ds-checkbox>\n          <ds-checkbox label="Product updates"></ds-checkbox>\n          <ds-checkbox label="Marketing emails" variant="warning"></ds-checkbox>\n          <ds-checkbox label="Security notifications" [checked]="true" [disabled]="true"></ds-checkbox>\n        </div>\n      </ds-form-field>\n    `\n  }),\n  parameters: {\n    docs: {\n      source: {\n        code: `<ds-form-field \n  label="Newsletter Preferences" \n  description="Choose your newsletter preferences">\n  <div style="display: grid; gap: 12px; margin-top: 8px;">\n    <ds-checkbox label="Weekly newsletter"></ds-checkbox>\n    <ds-checkbox label="Product updates"></ds-checkbox>\n    <ds-checkbox label="Marketing emails" variant="warning"></ds-checkbox>\n    <ds-checkbox label="Security notifications" [checked]="true" [disabled]="true"></ds-checkbox>\n  </div>\n</ds-form-field>`\n      }\n    }\n  }\n}',...WithFormField.parameters?.docs?.source}}},LabelToggle.parameters={...LabelToggle.parameters,docs:{...LabelToggle.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 300px;">\n        <h4>With Labels</h4>\n        <ds-checkbox [showLabel]="true" label="I have a visible label"></ds-checkbox>\n        <ds-checkbox [showLabel]="true" label="Me too!"></ds-checkbox>\n        \n        <h4 style="margin-top: 24px;">Without Labels (using aria-label)</h4>\n        <ds-checkbox [showLabel]="false" ariaLabel="Hidden label checkbox 1"></ds-checkbox>\n        <ds-checkbox [showLabel]="false" ariaLabel="Hidden label checkbox 2"></ds-checkbox>\n      </div>\n    `\n  })\n}',...LabelToggle.parameters?.docs?.source}}},AllSizesAndVariants.parameters={...AllSizesAndVariants.parameters,docs:{...AllSizesAndVariants.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 24px;">\n        <div>\n          <h4>Small Size</h4>\n          <div style="display: grid; gap: 8px; margin-top: 8px;">\n            <ds-checkbox size="sm" variant="default" label="Default small"></ds-checkbox>\n            <ds-checkbox size="sm" variant="success" label="Success small"></ds-checkbox>\n            <ds-checkbox size="sm" variant="warning" label="Warning small"></ds-checkbox>\n            <ds-checkbox size="sm" variant="error" label="Error small"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Medium Size</h4>\n          <div style="display: grid; gap: 8px; margin-top: 8px;">\n            <ds-checkbox size="md" variant="default" label="Default medium"></ds-checkbox>\n            <ds-checkbox size="md" variant="success" label="Success medium"></ds-checkbox>\n            <ds-checkbox size="md" variant="warning" label="Warning medium"></ds-checkbox>\n            <ds-checkbox size="md" variant="error" label="Error medium"></ds-checkbox>\n          </div>\n        </div>\n        \n        <div>\n          <h4>Large Size</h4>\n          <div style="display: grid; gap: 8px; margin-top: 8px;">\n            <ds-checkbox size="lg" variant="default" label="Default large"></ds-checkbox>\n            <ds-checkbox size="lg" variant="success" label="Success large"></ds-checkbox>\n            <ds-checkbox size="lg" variant="warning" label="Warning large"></ds-checkbox>\n            <ds-checkbox size="lg" variant="error" label="Error large"></ds-checkbox>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}',...AllSizesAndVariants.parameters?.docs?.source}}}}}]);