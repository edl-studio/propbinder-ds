(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[50],{"./src/app/components/ui/textarea/ds-textarea.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* Brockmann Font Definitions */\n@font-face {\n  font-family: 'Brockmann';\n  src: url('/Brockmann/Brockmann-Regular.otf') format('opentype');\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n/* Base component styles */\n:host {\n  display: block;\n  font-family: 'Brockmann', system-ui, -apple-system, sans-serif;\n  font-weight: 400;\n  width: 100%;\n}\n\n/* Textarea container styles */\n.textarea-container {\n  /* Layout */\n  position: relative;\n  display: inline-flex;\n  width: 100%;\n  border-radius: 0.375rem;\n  transition-property: all;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Ensure border is rendered inside Shadow DOM */\n  border-style: solid;\n  border-width: 1px;\n  \n  /* Base colors */\n  background-color: var(--background-color-page);\n  border-color: var(--border-color-default);\n  \n  /* Hover state */\n  &:hover:not(.textarea-container--disabled):not(.textarea-container--readonly) {\n    background-color: var(--background-color-page);\n    border-color: var(--color-brand-base);\n  }\n  \n  /* Focus state (class-based fallback) */\n  &.textarea-container--focused {\n    border-color: var(--color-brand-base);\n  }\n  \n  /* Disabled state */\n  &.textarea-container--disabled {\n    background-color: var(--background-color-disabled);\n    border-color: var(--border-color-default);\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n  \n  /* Readonly state */\n  &.textarea-container--readonly {\n    background-color: var(--background-color-container);\n    border-color: var(--border-color-default);\n    cursor: default;\n  }\n}\n\n/* Keyboard/mouse focus ring using :focus-within (works in Shadow DOM) */\n.textarea-container:focus-within {\n  box-shadow: 0 0 0 3px var(--outline-color-default);\n  outline: none;\n  border-color: var(--color-brand-base);\n}\n\n/* Preserve class-based focus hook but without visual changes (state only) */\n.textarea-container--focused {\n  /* no visual changes; ring handled by :focus-within */\n}\n\n/* Size variants */\n.textarea-container--sm {\n  padding: 0.5rem;\n  font-size: var(--font-size-sm);\n  min-height: 5rem; /* ~80px */\n}\n\n.textarea-container--md {\n  padding: 0.75rem;\n  font-size: var(--font-size-base);\n  min-height: 6rem; /* ~96px */\n}\n\n.textarea-container--lg {\n  padding: 1rem;\n  font-size: var(--font-size-lg);\n  min-height: 7rem; /* ~112px */\n}\n\n/* Variant styles */\n.textarea-container--default {\n  /* Already defined in base styles */\n}\n\n.textarea-container--error {\n  background-color: var(--color-destructive-weak);\n  border-color: var(--color-destructive-base);\n  \n  &:hover:not(.textarea-container--disabled):not(.textarea-container--readonly) {\n    border-color: var(--color-destructive-strong);\n  }\n  \n  &.textarea-container--focused {\n    outline-color: var(--color-destructive-base);\n  }\n}\n\n.textarea-container--warning {\n  background-color: var(--color-warning-weak);\n  border-color: var(--color-warning-base);\n  \n  &:hover:not(.textarea-container--disabled):not(.textarea-container--readonly) {\n    border-color: var(--color-warning-strong);\n  }\n  \n  &.textarea-container--focused {\n    outline-color: var(--color-warning-base);\n  }\n}\n\n.textarea-container--success {\n  background-color: var(--color-success-weak);\n  border-color: var(--color-success-base);\n  \n  &:hover:not(.textarea-container--disabled):not(.textarea-container--readonly) {\n    border-color: var(--color-success-strong);\n  }\n  \n  &.textarea-container--focused {\n    outline-color: var(--color-success-base);\n  }\n}\n\n/* Textarea element styles */\n.textarea {\n  /* Layout */\n  flex: 1 1 0%;\n  resize: vertical;\n  border-width: 0px;\n  background-color: transparent;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  font-size: var(--font-size-base);\n  line-height: 1.625\n}\n.textarea::placeholder {\n  --tw-placeholder-opacity: 0.6;\n}\n.textarea {\n  \n  /* Typography */\n  font-family: inherit;\n  color: var(--text-color-default-primary);\n  width: 100%;\n  \n  /* Remove default styling */\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n  \n  /* Placeholder styles */\n  &::placeholder {\n    color: var(--text-color-default-secondary);\n    opacity: 0.6;\n  }\n  \n  /* Disabled state */\n  &:disabled {\n    color: var(--text-color-disabled);\n    cursor: not-allowed;\n    resize: none;\n    \n    &::placeholder {\n      color: var(--text-color-disabled);\n    }\n  }\n  \n  /* Readonly state */\n  &:read-only {\n    cursor: default;\n    resize: none;\n  }\n}\n\n/* Size-specific textarea styles */\n.textarea--sm {\n  font-size: var(--font-size-sm);\n  line-height: 1.4;\n}\n\n.textarea--md {\n  font-size: var(--font-size-base);\n  line-height: 1.5;\n}\n\n.textarea--lg {\n  font-size: var(--font-size-lg);\n  line-height: 1.6;\n}\n\n/* Variant-specific textarea styles */\n.textarea--error {\n  color: var(--color-destructive-strong);\n  \n  &::placeholder {\n    color: var(--color-destructive-base);\n    opacity: 0.7;\n  }\n}\n\n.textarea--warning {\n  color: var(--color-warning-strong);\n  \n  &::placeholder {\n    color: var(--color-warning-base);\n    opacity: 0.7;\n  }\n}\n\n.textarea--success {\n  color: var(--color-success-strong);\n  \n  &::placeholder {\n    color: var(--color-success-base);\n    opacity: 0.7;\n  }\n}\n\n/* States for Angular Primitives data attributes */\ntextarea[data-hover] {\n  /* Hover state handled by container */\n}\n\ntextarea[data-focus] {\n  /* Focus state handled by container */\n}\n\ntextarea[data-disabled] {\n  /* Disabled state handled by textarea styles */\n}\n\n/* Custom scrollbar styles for textarea */\n.textarea::-webkit-scrollbar {\n  width: 6px;\n}\n\n.textarea::-webkit-scrollbar-track {\n  background: var(--background-color-container);\n  border-radius: 3px;\n}\n\n.textarea::-webkit-scrollbar-thumb {\n  background: var(--border-color-default);\n  border-radius: 3px;\n  \n  &:hover {\n    background: var(--text-color-default-secondary);\n  }\n}\n\n/* Firefox scrollbar */\n.textarea {\n  scrollbar-width: thin;\n  scrollbar-color: var(--border-color-default) var(--background-color-container);\n}\n",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/components/ui/textarea/ds-textarea.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LargeTextarea:()=>LargeTextarea,Sizes:()=>Sizes,States:()=>States,Variants:()=>Variants,WithFormField:()=>WithFormField,WithLimits:()=>WithLimits,WithPlaceholder:()=>WithPlaceholder,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ds_textarea_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),ds_textareangResource=__webpack_require__("./src/app/components/ui/textarea/ds-textarea.css?ngResource"),ds_textareangResource_default=__webpack_require__.n(ds_textareangResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),root_effect_scheduler=__webpack_require__("./node_modules/@angular/core/fesm2022/root_effect_scheduler.mjs"),resource=__webpack_require__("./node_modules/@angular/core/fesm2022/resource.mjs"),debug_node=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs"),common_module=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ng_primitives_form_field=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-form-field.mjs"),ng_primitives_interactions=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-interactions.mjs"),ng_primitives_utils=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-utils.mjs"),ng_primitives_state=__webpack_require__("./node_modules/ng-primitives/fesm2022/ng-primitives-state.mjs");const NgpTextareaStateToken=(0,ng_primitives_state.RX)("Textarea"),provideTextareaState=(0,ng_primitives_state.dL)(NgpTextareaStateToken),textareaState=((0,ng_primitives_state.yb)(NgpTextareaStateToken),(0,ng_primitives_state.ur)(NgpTextareaStateToken));class NgpTextarea{constructor(){this.id=(0,core.input)((0,ng_primitives_utils.NF)("ngp-textarea")),this.disabled=(0,core.input)(!1,{transform:core.booleanAttribute}),this.state=textareaState(this),(0,ng_primitives_interactions.XE)({hover:!0,press:!0,focus:!0,disabled:this.state.disabled}),(0,ng_primitives_form_field.BU)({id:this.state.id,disabled:this.state.disabled})}static#_=this.ɵfac=function NgpTextarea_Factory(__ngFactoryType__){return new(__ngFactoryType__||NgpTextarea)};static#_2=this.ɵdir=debug_node.FsC({type:NgpTextarea,selectors:[["","ngpTextarea",""]],hostVars:2,hostBindings:function NgpTextarea_HostBindings(rf,ctx){2&rf&&(debug_node.Avn("id",ctx.id()),debug_node.BMQ("disabled",ctx.disabled()?"":null))},inputs:{id:[1,"id"],disabled:[1,"disabled"]},exportAs:["ngpTextarea"],features:[debug_node.Jv_([provideTextareaState()])]})}("undefined"==typeof ngDevMode||ngDevMode)&&debug_node.cDI(NgpTextarea,[{type:debug_node.WLR,args:[{selector:"[ngpTextarea]",exportAs:"ngpTextarea",providers:[provideTextareaState()],host:{"[id]":"id()","[attr.disabled]":'disabled() ? "" : null'}}]}],()=>[],null);let DsTextareaComponent=class DsTextareaComponent{variant=(0,core.input)("default");size=(0,core.input)("md");placeholder=(0,core.input)("");disabled=(0,core.input)(!1);readonly=(0,core.input)(!1);required=(0,core.input)(!1);rows=(0,core.input)(4);cols=(0,core.input)();maxlength=(0,core.input)();minlength=(0,core.input)();ariaLabel=(0,core.input)();ariaDescribedBy=(0,core.input)();ariaLabelledBy=(0,core.input)();valueChange=(0,core.output)();focused=(0,core.output)();blurred=(0,core.output)();valueSig=(0,root_effect_scheduler.vPA)("");focusedSig=(0,root_effect_scheduler.vPA)(!1);disabledFromCva=(0,root_effect_scheduler.vPA)(!1);value=(0,resource.EW)(()=>this.valueSig());effectiveDisabled=(0,resource.EW)(()=>this.disabled()||this.disabledFromCva());containerClasses=(0,resource.EW)(()=>{const classes=["textarea-container",`textarea-container--${this.size()}`,`textarea-container--${this.variant()}`];return this.effectiveDisabled()&&classes.push("textarea-container--disabled"),this.readonly()&&classes.push("textarea-container--readonly"),this.focusedSig()&&classes.push("textarea-container--focused"),classes.join(" ")});textareaClasses=(0,resource.EW)(()=>["textarea",`textarea--${this.size()}`,`textarea--${this.variant()}`].join(" "));handleInput(event){const next=event.target.value??"";this.valueSig.set(next),this.onChangeFn(next),this.valueChange.emit(next)}handleFocus(event){this.focusedSig.set(!0),this.focused.emit(event)}handleBlur(event){this.focusedSig.set(!1),this.onTouchedFn(),this.blurred.emit(event)}onChangeFn=()=>{};onTouchedFn=()=>{};writeValue(value){this.valueSig.set(value??"")}registerOnChange(fn){this.onChangeFn=fn}registerOnTouched(fn){this.onTouchedFn=fn}setDisabledState(isDisabled){this.disabledFromCva.set(isDisabled)}static propDecorators={variant:[{type:debug_node.pde,args:[{isSignal:!0,alias:"variant",required:!1,transform:void 0}]}],size:[{type:debug_node.pde,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],placeholder:[{type:debug_node.pde,args:[{isSignal:!0,alias:"placeholder",required:!1,transform:void 0}]}],disabled:[{type:debug_node.pde,args:[{isSignal:!0,alias:"disabled",required:!1,transform:void 0}]}],readonly:[{type:debug_node.pde,args:[{isSignal:!0,alias:"readonly",required:!1,transform:void 0}]}],required:[{type:debug_node.pde,args:[{isSignal:!0,alias:"required",required:!1,transform:void 0}]}],rows:[{type:debug_node.pde,args:[{isSignal:!0,alias:"rows",required:!1,transform:void 0}]}],cols:[{type:debug_node.pde,args:[{isSignal:!0,alias:"cols",required:!1,transform:void 0}]}],maxlength:[{type:debug_node.pde,args:[{isSignal:!0,alias:"maxlength",required:!1,transform:void 0}]}],minlength:[{type:debug_node.pde,args:[{isSignal:!0,alias:"minlength",required:!1,transform:void 0}]}],ariaLabel:[{type:debug_node.pde,args:[{isSignal:!0,alias:"ariaLabel",required:!1,transform:void 0}]}],ariaDescribedBy:[{type:debug_node.pde,args:[{isSignal:!0,alias:"ariaDescribedBy",required:!1,transform:void 0}]}],ariaLabelledBy:[{type:debug_node.pde,args:[{isSignal:!0,alias:"ariaLabelledBy",required:!1,transform:void 0}]}],valueChange:[{type:debug_node.k7i,args:["valueChange"]}],focused:[{type:debug_node.k7i,args:["focused"]}],blurred:[{type:debug_node.k7i,args:["blurred"]}]}};DsTextareaComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"ds-textarea",standalone:!0,imports:[common_module.MD,NgpTextarea],encapsulation:debug_node.gXe.Emulated,providers:[{provide:fesm2022_forms.kq,useExisting:(0,root_effect_scheduler.Rfq)(()=>DsTextareaComponent),multi:!0}],template:'\n    <div [class]="containerClasses()">\n      <textarea\n        ngpTextarea\n        [placeholder]="placeholder()"\n        [disabled]="effectiveDisabled()"\n        [readonly]="readonly()"\n        [required]="required()"\n        [rows]="rows()"\n        [cols]="cols()"\n        [attr.maxlength]="maxlength()"\n        [attr.minlength]="minlength()"\n        [class]="textareaClasses()"\n        [attr.aria-label]="ariaLabel()"\n        [attr.aria-describedby]="ariaDescribedBy()"\n        [attr.aria-labelledby]="ariaLabelledBy()"\n        [attr.aria-invalid]="variant() === \'error\' ? \'true\' : null"\n        (input)="handleInput($event)"\n        (focus)="handleFocus($event)"\n        (blur)="handleBlur($event)"\n      >{{ value() }}</textarea>\n    </div>\n  ',styles:[ds_textareangResource_default()]})],DsTextareaComponent);const ds_textarea_stories={title:"Primitives/Textarea",component:DsTextareaComponent,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:{type:"select"},options:["default","error","warning","success"]},size:{control:{type:"select"},options:["sm","md","lg"]},placeholder:{control:"text"},disabled:{control:"boolean"},readonly:{control:"boolean"},required:{control:"boolean"},rows:{control:{type:"number",min:1,max:20}},cols:{control:{type:"number",min:10,max:100}},maxlength:{control:{type:"number",min:1,max:1e3}},minlength:{control:{type:"number",min:0,max:100}},ariaLabel:{control:"text"},ariaDescribedBy:{control:"text"},ariaLabelledBy:{control:"text"}},args:{variant:"default",size:"md",placeholder:"Enter your message...",disabled:!1,readonly:!1,required:!1,rows:4}},Default={},WithPlaceholder={args:{placeholder:"Write your thoughts here...",rows:6}},Sizes={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 400px;">\n        <ds-textarea size="sm" placeholder="Small textarea" rows="3"></ds-textarea>\n        <ds-textarea size="md" placeholder="Medium textarea" rows="4"></ds-textarea>\n        <ds-textarea size="lg" placeholder="Large textarea" rows="5"></ds-textarea>\n      </div>\n    '})},Variants={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 400px;">\n        <ds-textarea variant="default" placeholder="Default textarea" rows="3"></ds-textarea>\n        <ds-textarea variant="success" placeholder="Success textarea" rows="3"></ds-textarea>\n        <ds-textarea variant="warning" placeholder="Warning textarea" rows="3"></ds-textarea>\n        <ds-textarea variant="error" placeholder="Error textarea" rows="3"></ds-textarea>\n      </div>\n    '})},States={render:()=>({template:'\n      <div style="display: grid; gap: 16px; width: 400px;">\n        <ds-textarea placeholder="Normal textarea" rows="3"></ds-textarea>\n        <ds-textarea placeholder="Disabled textarea" [disabled]="true" rows="3"></ds-textarea>\n        <ds-textarea placeholder="Readonly textarea" [readonly]="true" rows="3"></ds-textarea>\n        <ds-textarea placeholder="Required textarea" [required]="true" rows="3"></ds-textarea>\n      </div>\n    '})},WithLimits={args:{placeholder:"This textarea has a 100 character limit...",maxlength:100,minlength:10,rows:4}},LargeTextarea={args:{placeholder:"This is a large textarea for longer content...",rows:8,size:"lg"}},WithFormField={render:()=>({template:'\n      <ds-form-field \n        label="Message" \n        description="Please provide detailed feedback"\n        style="width: 400px;">\n        <ds-textarea \n          placeholder="Enter your feedback here..." \n          rows="5"\n          [required]="true">\n        </ds-textarea>\n      </ds-form-field>\n    '}),parameters:{docs:{source:{code:'<ds-form-field \n  label="Message" \n  description="Please provide detailed feedback">\n  <ds-textarea \n    placeholder="Enter your feedback here..." \n    rows="5"\n    [required]="true">\n  </ds-textarea>\n</ds-form-field>'}}}},__namedExportsOrder=["Default","WithPlaceholder","Sizes","Variants","States","WithLimits","LargeTextarea","WithFormField"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},WithPlaceholder.parameters={...WithPlaceholder.parameters,docs:{...WithPlaceholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    placeholder: 'Write your thoughts here...',\n    rows: 6\n  }\n}",...WithPlaceholder.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 400px;">\n        <ds-textarea size="sm" placeholder="Small textarea" rows="3"></ds-textarea>\n        <ds-textarea size="md" placeholder="Medium textarea" rows="4"></ds-textarea>\n        <ds-textarea size="lg" placeholder="Large textarea" rows="5"></ds-textarea>\n      </div>\n    `\n  })\n}',...Sizes.parameters?.docs?.source}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 400px;">\n        <ds-textarea variant="default" placeholder="Default textarea" rows="3"></ds-textarea>\n        <ds-textarea variant="success" placeholder="Success textarea" rows="3"></ds-textarea>\n        <ds-textarea variant="warning" placeholder="Warning textarea" rows="3"></ds-textarea>\n        <ds-textarea variant="error" placeholder="Error textarea" rows="3"></ds-textarea>\n      </div>\n    `\n  })\n}',...Variants.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; gap: 16px; width: 400px;">\n        <ds-textarea placeholder="Normal textarea" rows="3"></ds-textarea>\n        <ds-textarea placeholder="Disabled textarea" [disabled]="true" rows="3"></ds-textarea>\n        <ds-textarea placeholder="Readonly textarea" [readonly]="true" rows="3"></ds-textarea>\n        <ds-textarea placeholder="Required textarea" [required]="true" rows="3"></ds-textarea>\n      </div>\n    `\n  })\n}',...States.parameters?.docs?.source}}},WithLimits.parameters={...WithLimits.parameters,docs:{...WithLimits.parameters?.docs,source:{originalSource:"{\n  args: {\n    placeholder: 'This textarea has a 100 character limit...',\n    maxlength: 100,\n    minlength: 10,\n    rows: 4\n  }\n}",...WithLimits.parameters?.docs?.source}}},LargeTextarea.parameters={...LargeTextarea.parameters,docs:{...LargeTextarea.parameters?.docs,source:{originalSource:"{\n  args: {\n    placeholder: 'This is a large textarea for longer content...',\n    rows: 8,\n    size: 'lg'\n  }\n}",...LargeTextarea.parameters?.docs?.source}}},WithFormField.parameters={...WithFormField.parameters,docs:{...WithFormField.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <ds-form-field \n        label="Message" \n        description="Please provide detailed feedback"\n        style="width: 400px;">\n        <ds-textarea \n          placeholder="Enter your feedback here..." \n          rows="5"\n          [required]="true">\n        </ds-textarea>\n      </ds-form-field>\n    `\n  }),\n  parameters: {\n    docs: {\n      source: {\n        code: `<ds-form-field \n  label="Message" \n  description="Please provide detailed feedback">\n  <ds-textarea \n    placeholder="Enter your feedback here..." \n    rows="5"\n    [required]="true">\n  </ds-textarea>\n</ds-form-field>`\n      }\n    }\n  }\n}',...WithFormField.parameters?.docs?.source}}}}}]);