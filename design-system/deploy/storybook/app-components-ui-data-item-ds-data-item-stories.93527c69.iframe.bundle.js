"use strict";(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[672],{"./node_modules/css-loader/dist/runtime/api.js":module=>{module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{module.exports=function(i){return i[1]}},"./src/app/components/ui/data-item/ds-data-item.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{HorizontalAvatarIcon:()=>HorizontalAvatarIcon,HorizontalAvatarPhoto:()=>HorizontalAvatarPhoto,HorizontalBadgeIcon:()=>HorizontalBadgeIcon,HorizontalBadgeIndicator:()=>HorizontalBadgeIndicator,HorizontalIconText:()=>HorizontalIconText,HorizontalText:()=>HorizontalText,LayoutComparison:()=>LayoutComparison,TaskDetails:()=>TaskDetails,UserProfile:()=>UserProfile,ValueTypesShowcase:()=>ValueTypesShowcase,VerticalAvatarInitials:()=>VerticalAvatarInitials,VerticalBadge:()=>VerticalBadge,VerticalIconText:()=>VerticalIconText,VerticalText:()=>VerticalText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Primitives/Data Item",component:__webpack_require__("./src/app/components/ui/data-item/ds-data-item.ts").k,parameters:{layout:"padded",docs:{description:{component:"\nA flexible data item component for displaying label-value pairs with multiple layout options and value types. Perfect for user profiles, task details, settings panels, and structured data displays.\n\n## Features\n\n- **Two Layout Types**: Vertical and horizontal arrangements for different use cases\n- **Fixed Value Height**: 32px height for consistent alignment across all value types\n- **Four Value Types**: Text, Icon+Text, Avatar+Text, and Badge variants\n- **Responsive Design**: Horizontal layout automatically collapses to vertical on mobile\n- **Consistent Spacing**: 8px gap between elements in value container\n- **Semantic Typography**: Uses ui-sm-regular (14px, 400 weight) for value text\n\n## Layout Types\n\n### Vertical Layout\nStacks label above value with 4px gap. Ideal for compact displays, mobile layouts, and when you need to conserve horizontal space.\n\n### Horizontal Layout\nPlaces label and value side-by-side with 12px gap. Label container has fixed 128px width for consistent alignment across multiple data items.\n\n## Value Types\n\n### Text Only\nSimple text display using ui-sm-regular typography with primary text color.\n\n### Icon + Text\n16px icon with secondary color paired with text. Perfect for status indicators, locations, or categorized information.\n\n### Avatar + Text\n20x20px avatar (xs size) with text. Supports all avatar types: initials, photo, and icon. Ideal for user assignments, ownership, or person-related data.\n\n### Badge\nFull badge component with all variants and content types. Perfect for status, priority, categories, or any labeled information.\n\nFor complete documentation, properties reference, and implementation guidelines, see the [Data Item README](/?path=/docs/components-data-item--docs).\n        "}}},tags:["autodocs"],argTypes:{label:{control:"text",description:"The label text to display"},value:{control:"text",description:"The value text to display (not used for badge type)"},layout:{control:"select",options:["vertical","horizontal"],description:"Layout arrangement of label and value"},valueType:{control:"select",options:["text","icon-text","avatar-text","badge"],description:"Type of value display"},iconName:{control:"text",description:"Icon name for icon-text type",if:{arg:"valueType",eq:"icon-text"}},avatarType:{control:"select",options:["initials","photo","icon"],description:"Avatar type for avatar-text type",if:{arg:"valueType",eq:"avatar-text"}},avatarInitials:{control:"text",description:"Avatar initials for initials type",if:{arg:"valueType",eq:"avatar-text"}},avatarSrc:{control:"text",description:"Avatar image source for photo type",if:{arg:"valueType",eq:"avatar-text"}},avatarIconName:{control:"text",description:"Avatar icon name for icon type",if:{arg:"valueType",eq:"avatar-text"}},badgeVariant:{control:"select",options:["default","brand","success","warning","destructive","blue","light-purple","pink","salmon-orange","orange","lime-green","grey"],description:"Badge color variant",if:{arg:"valueType",eq:"badge"}},badgeContentType:{control:"select",options:["text","icon-text","indicator-text"],description:"Badge content type",if:{arg:"valueType",eq:"badge"}},badgeContent:{control:"text",description:"Badge content text",if:{arg:"valueType",eq:"badge"}},badgeIcon:{control:"text",description:"Badge icon name for icon-text type",if:{arg:"valueType",eq:"badge"}},badgeIndicatorShape:{control:"select",options:["circle","square"],description:"Badge indicator shape for indicator-text type",if:{arg:"valueType",eq:"badge"}}},args:{label:"Email",value:"user@example.com",layout:"vertical",valueType:"text"}},VerticalText={args:{label:"Email Address",value:"user@example.com",layout:"vertical",valueType:"text"}},HorizontalText={args:{label:"Full Name",value:"John Doe",layout:"horizontal",valueType:"text"}},VerticalIconText={args:{label:"Status",value:"Active",layout:"vertical",valueType:"icon-text",iconName:"remixCheckboxCircleFill"}},HorizontalIconText={args:{label:"Location",value:"New York, NY",layout:"horizontal",valueType:"icon-text",iconName:"remixMapPin2Fill"}},VerticalAvatarInitials={args:{label:"Assigned to",value:"John Doe",layout:"vertical",valueType:"avatar-text",avatarType:"initials",avatarInitials:"JD"}},HorizontalAvatarPhoto={args:{label:"Created by",value:"Sarah Wilson",layout:"horizontal",valueType:"avatar-text",avatarType:"photo",avatarSrc:"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face"}},HorizontalAvatarIcon={args:{label:"Owner",value:"System User",layout:"horizontal",valueType:"avatar-text",avatarType:"icon",avatarIconName:"remixRobotFill"}},VerticalBadge={args:{label:"Priority",layout:"vertical",valueType:"badge",badgeVariant:"destructive",badgeContentType:"text",badgeContent:"High"}},HorizontalBadgeIcon={args:{label:"Status",layout:"horizontal",valueType:"badge",badgeVariant:"success",badgeContentType:"icon-text",badgeContent:"Completed",badgeIcon:"remixCheckboxCircleFill"}},HorizontalBadgeIndicator={args:{label:"Type",layout:"horizontal",valueType:"badge",badgeVariant:"brand",badgeContentType:"indicator-text",badgeContent:"Premium",badgeIndicatorShape:"circle"}},LayoutComparison={render:args=>({props:args,template:'\n      <div style="display: flex; flex-direction: column; gap: 24px; max-width: 400px;">\n        <div>\n          <h3 style="margin: 0 0 16px 0; font-size: 16px; font-weight: 500;">Vertical Layout</h3>\n          <div style="display: flex; flex-direction: column; gap: 16px;">\n            <ds-data-item\n              label="Email Address"\n              value="user@example.com"\n              layout="vertical"\n              valueType="text"\n            />\n            <ds-data-item\n              label="Status"\n              value="Active"\n              layout="vertical"\n              valueType="icon-text"\n              iconName="remixCheckboxCircleFill"\n            />\n            <ds-data-item\n              label="Assigned to"\n              value="John Doe"\n              layout="vertical"\n              valueType="avatar-text"\n              avatarType="initials"\n              avatarInitials="JD"\n            />\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 16px 0; font-size: 16px; font-weight: 500;">Horizontal Layout</h3>\n          <div style="display: flex; flex-direction: column; gap: 16px;">\n            <ds-data-item\n              label="Email Address"\n              value="user@example.com"\n              layout="horizontal"\n              valueType="text"\n            />\n            <ds-data-item\n              label="Status"\n              value="Active"\n              layout="horizontal"\n              valueType="icon-text"\n              iconName="remixCheckboxCircleFill"\n            />\n            <ds-data-item\n              label="Assigned to"\n              value="John Doe"\n              layout="horizontal"\n              valueType="avatar-text"\n              avatarType="initials"\n              avatarInitials="JD"\n            />\n          </div>\n        </div>\n      </div>\n    '}),parameters:{controls:{disable:!0}}},ValueTypesShowcase={render:args=>({props:args,template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; max-width: 400px;">\n        <ds-data-item\n          label="Text Value"\n          value="Simple text content"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Icon + Text"\n          value="With icon prefix"\n          layout="horizontal"\n          valueType="icon-text"\n          iconName="remixStarFill"\n        />\n        <ds-data-item\n          label="Avatar + Text"\n          value="John Doe"\n          layout="horizontal"\n          valueType="avatar-text"\n          avatarType="initials"\n          avatarInitials="JD"\n        />\n        <ds-data-item\n          label="Badge Value"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="success"\n          badgeContentType="icon-text"\n          badgeContent="Verified"\n          badgeIcon="remixShieldCheckFill"\n        />\n      </div>\n    '}),parameters:{controls:{disable:!0}}},UserProfile={render:args=>({props:args,template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;">\n        <h3 style="margin: 0 0 8px 0; font-size: 18px; font-weight: 600;">User Profile</h3>\n        \n        <ds-data-item\n          label="Full Name"\n          value="Sarah Wilson"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Email"\n          value="sarah.wilson@company.com"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Role"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="brand"\n          badgeContentType="text"\n          badgeContent="Admin"\n        />\n        <ds-data-item\n          label="Status"\n          value="Online"\n          layout="horizontal"\n          valueType="icon-text"\n          iconName="remixCheckboxCircleFill"\n        />\n        <ds-data-item\n          label="Manager"\n          value="John Doe"\n          layout="horizontal"\n          valueType="avatar-text"\n          avatarType="initials"\n          avatarInitials="JD"\n        />\n      </div>\n    '}),parameters:{controls:{disable:!0}}},TaskDetails={render:args=>({props:args,template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;">\n        <h3 style="margin: 0 0 8px 0; font-size: 18px; font-weight: 600;">Task Details</h3>\n        \n        <ds-data-item\n          label="Title"\n          value="Implement user authentication"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Priority"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="warning"\n          badgeContentType="text"\n          badgeContent="High"\n        />\n        <ds-data-item\n          label="Status"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="blue"\n          badgeContentType="indicator-text"\n          badgeContent="In Progress"\n          badgeIndicatorShape="circle"\n        />\n        <ds-data-item\n          label="Assignee"\n          value="Sarah Wilson"\n          layout="horizontal"\n          valueType="avatar-text"\n          avatarType="photo"\n          avatarSrc="https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face"\n        />\n        <ds-data-item\n          label="Due Date"\n          value="March 15, 2024"\n          layout="horizontal"\n          valueType="icon-text"\n          iconName="remixCalendarLine"\n        />\n      </div>\n    '}),parameters:{controls:{disable:!0}}},__namedExportsOrder=["VerticalText","HorizontalText","VerticalIconText","HorizontalIconText","VerticalAvatarInitials","HorizontalAvatarPhoto","HorizontalAvatarIcon","VerticalBadge","HorizontalBadgeIcon","HorizontalBadgeIndicator","LayoutComparison","ValueTypesShowcase","UserProfile","TaskDetails"];VerticalText.parameters={...VerticalText.parameters,docs:{...VerticalText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Email Address',\n    value: 'user@example.com',\n    layout: 'vertical',\n    valueType: 'text'\n  }\n}",...VerticalText.parameters?.docs?.source}}},HorizontalText.parameters={...HorizontalText.parameters,docs:{...HorizontalText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Full Name',\n    value: 'John Doe',\n    layout: 'horizontal',\n    valueType: 'text'\n  }\n}",...HorizontalText.parameters?.docs?.source}}},VerticalIconText.parameters={...VerticalIconText.parameters,docs:{...VerticalIconText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Status',\n    value: 'Active',\n    layout: 'vertical',\n    valueType: 'icon-text',\n    iconName: 'remixCheckboxCircleFill'\n  }\n}",...VerticalIconText.parameters?.docs?.source}}},HorizontalIconText.parameters={...HorizontalIconText.parameters,docs:{...HorizontalIconText.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Location',\n    value: 'New York, NY',\n    layout: 'horizontal',\n    valueType: 'icon-text',\n    iconName: 'remixMapPin2Fill'\n  }\n}",...HorizontalIconText.parameters?.docs?.source}}},VerticalAvatarInitials.parameters={...VerticalAvatarInitials.parameters,docs:{...VerticalAvatarInitials.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Assigned to',\n    value: 'John Doe',\n    layout: 'vertical',\n    valueType: 'avatar-text',\n    avatarType: 'initials',\n    avatarInitials: 'JD'\n  }\n}",...VerticalAvatarInitials.parameters?.docs?.source}}},HorizontalAvatarPhoto.parameters={...HorizontalAvatarPhoto.parameters,docs:{...HorizontalAvatarPhoto.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Created by',\n    value: 'Sarah Wilson',\n    layout: 'horizontal',\n    valueType: 'avatar-text',\n    avatarType: 'photo',\n    avatarSrc: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face'\n  }\n}",...HorizontalAvatarPhoto.parameters?.docs?.source}}},HorizontalAvatarIcon.parameters={...HorizontalAvatarIcon.parameters,docs:{...HorizontalAvatarIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Owner',\n    value: 'System User',\n    layout: 'horizontal',\n    valueType: 'avatar-text',\n    avatarType: 'icon',\n    avatarIconName: 'remixRobotFill'\n  }\n}",...HorizontalAvatarIcon.parameters?.docs?.source}}},VerticalBadge.parameters={...VerticalBadge.parameters,docs:{...VerticalBadge.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Priority',\n    layout: 'vertical',\n    valueType: 'badge',\n    badgeVariant: 'destructive',\n    badgeContentType: 'text',\n    badgeContent: 'High'\n  }\n}",...VerticalBadge.parameters?.docs?.source}}},HorizontalBadgeIcon.parameters={...HorizontalBadgeIcon.parameters,docs:{...HorizontalBadgeIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Status',\n    layout: 'horizontal',\n    valueType: 'badge',\n    badgeVariant: 'success',\n    badgeContentType: 'icon-text',\n    badgeContent: 'Completed',\n    badgeIcon: 'remixCheckboxCircleFill'\n  }\n}",...HorizontalBadgeIcon.parameters?.docs?.source}}},HorizontalBadgeIndicator.parameters={...HorizontalBadgeIndicator.parameters,docs:{...HorizontalBadgeIndicator.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Type',\n    layout: 'horizontal',\n    valueType: 'badge',\n    badgeVariant: 'brand',\n    badgeContentType: 'indicator-text',\n    badgeContent: 'Premium',\n    badgeIndicatorShape: 'circle'\n  }\n}",...HorizontalBadgeIndicator.parameters?.docs?.source}}},LayoutComparison.parameters={...LayoutComparison.parameters,docs:{...LayoutComparison.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 24px; max-width: 400px;">\n        <div>\n          <h3 style="margin: 0 0 16px 0; font-size: 16px; font-weight: 500;">Vertical Layout</h3>\n          <div style="display: flex; flex-direction: column; gap: 16px;">\n            <ds-data-item\n              label="Email Address"\n              value="user@example.com"\n              layout="vertical"\n              valueType="text"\n            />\n            <ds-data-item\n              label="Status"\n              value="Active"\n              layout="vertical"\n              valueType="icon-text"\n              iconName="remixCheckboxCircleFill"\n            />\n            <ds-data-item\n              label="Assigned to"\n              value="John Doe"\n              layout="vertical"\n              valueType="avatar-text"\n              avatarType="initials"\n              avatarInitials="JD"\n            />\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 16px 0; font-size: 16px; font-weight: 500;">Horizontal Layout</h3>\n          <div style="display: flex; flex-direction: column; gap: 16px;">\n            <ds-data-item\n              label="Email Address"\n              value="user@example.com"\n              layout="horizontal"\n              valueType="text"\n            />\n            <ds-data-item\n              label="Status"\n              value="Active"\n              layout="horizontal"\n              valueType="icon-text"\n              iconName="remixCheckboxCircleFill"\n            />\n            <ds-data-item\n              label="Assigned to"\n              value="John Doe"\n              layout="horizontal"\n              valueType="avatar-text"\n              avatarType="initials"\n              avatarInitials="JD"\n            />\n          </div>\n        </div>\n      </div>\n    `\n  }),\n  parameters: {\n    controls: {\n      disable: true\n    }\n  }\n}',...LayoutComparison.parameters?.docs?.source}}},ValueTypesShowcase.parameters={...ValueTypesShowcase.parameters,docs:{...ValueTypesShowcase.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; max-width: 400px;">\n        <ds-data-item\n          label="Text Value"\n          value="Simple text content"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Icon + Text"\n          value="With icon prefix"\n          layout="horizontal"\n          valueType="icon-text"\n          iconName="remixStarFill"\n        />\n        <ds-data-item\n          label="Avatar + Text"\n          value="John Doe"\n          layout="horizontal"\n          valueType="avatar-text"\n          avatarType="initials"\n          avatarInitials="JD"\n        />\n        <ds-data-item\n          label="Badge Value"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="success"\n          badgeContentType="icon-text"\n          badgeContent="Verified"\n          badgeIcon="remixShieldCheckFill"\n        />\n      </div>\n    `\n  }),\n  parameters: {\n    controls: {\n      disable: true\n    }\n  }\n}',...ValueTypesShowcase.parameters?.docs?.source}}},UserProfile.parameters={...UserProfile.parameters,docs:{...UserProfile.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;">\n        <h3 style="margin: 0 0 8px 0; font-size: 18px; font-weight: 600;">User Profile</h3>\n        \n        <ds-data-item\n          label="Full Name"\n          value="Sarah Wilson"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Email"\n          value="sarah.wilson@company.com"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Role"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="brand"\n          badgeContentType="text"\n          badgeContent="Admin"\n        />\n        <ds-data-item\n          label="Status"\n          value="Online"\n          layout="horizontal"\n          valueType="icon-text"\n          iconName="remixCheckboxCircleFill"\n        />\n        <ds-data-item\n          label="Manager"\n          value="John Doe"\n          layout="horizontal"\n          valueType="avatar-text"\n          avatarType="initials"\n          avatarInitials="JD"\n        />\n      </div>\n    `\n  }),\n  parameters: {\n    controls: {\n      disable: true\n    }\n  }\n}',...UserProfile.parameters?.docs?.source}}},TaskDetails.parameters={...TaskDetails.parameters,docs:{...TaskDetails.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; max-width: 500px; padding: 24px; border: 1px solid var(--border-color-default); border-radius: 8px;">\n        <h3 style="margin: 0 0 8px 0; font-size: 18px; font-weight: 600;">Task Details</h3>\n        \n        <ds-data-item\n          label="Title"\n          value="Implement user authentication"\n          layout="horizontal"\n          valueType="text"\n        />\n        <ds-data-item\n          label="Priority"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="warning"\n          badgeContentType="text"\n          badgeContent="High"\n        />\n        <ds-data-item\n          label="Status"\n          layout="horizontal"\n          valueType="badge"\n          badgeVariant="blue"\n          badgeContentType="indicator-text"\n          badgeContent="In Progress"\n          badgeIndicatorShape="circle"\n        />\n        <ds-data-item\n          label="Assignee"\n          value="Sarah Wilson"\n          layout="horizontal"\n          valueType="avatar-text"\n          avatarType="photo"\n          avatarSrc="https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face"\n        />\n        <ds-data-item\n          label="Due Date"\n          value="March 15, 2024"\n          layout="horizontal"\n          valueType="icon-text"\n          iconName="remixCalendarLine"\n        />\n      </div>\n    `\n  }),\n  parameters: {\n    controls: {\n      disable: true\n    }\n  }\n}',...TaskDetails.parameters?.docs?.source}}}}}]);