(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[238],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./src/app/components/ui/shape-indicator/ds-shape-indicator.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* Base shape indicator styles */\n.shape-indicator {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  font-family: 'Brockmann', system-ui, -apple-system, sans-serif;\n}\n\n/* Shape indicator label */\n.shape-indicator__label {\n  font-size: var(--font-size-xs); /* 12px */\n  font-weight: 400;\n  line-height: 1.2;\n  white-space: nowrap;\n}\n\n/* Color variants for text */\n.shape-indicator--default .shape-indicator__label {\n  color: var(--text-color-default-primary);\n}\n\n.shape-indicator--brand .shape-indicator__label {\n  color: var(--text-color-brand);\n}\n\n.shape-indicator--success .shape-indicator__label {\n  color: var(--color-success-base);\n}\n\n.shape-indicator--warning .shape-indicator__label {\n  color: var(--color-warning-base);\n}\n\n.shape-indicator--destructive .shape-indicator__label {\n  color: var(--color-destructive-base);\n}\n\n.shape-indicator--blue .shape-indicator__label {\n  color: var(--color-blue-base);\n}\n\n.shape-indicator--light-purple .shape-indicator__label {\n  color: var(--color-light-purple-base);\n}\n\n.shape-indicator--pink .shape-indicator__label {\n  color: var(--color-pink-base);\n}\n\n.shape-indicator--salmon-orange .shape-indicator__label {\n  color: var(--color-salmon-orange-base);\n}\n\n.shape-indicator--orange .shape-indicator__label {\n  color: var(--color-orange-base);\n}\n\n.shape-indicator--lime-green .shape-indicator__label {\n  color: var(--color-lime-green-base);\n}\n\n.shape-indicator--grey .shape-indicator__label {\n  color: var(--color-grey-base);\n}\n\n/* SVG styling */\nsvg {\n  flex-shrink: 0;\n  display: block;\n  width: 8px;\n  height: 8px;\n}\n\n/* Ensure shapes are centered within their viewBox */\nsvg path {\n  vector-effect: non-scaling-stroke;\n}\n",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/components/ui/shape-indicator/ds-shape-indicator.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllShapes:()=>AllShapes,Circle:()=>Circle,ColorVariants:()=>ColorVariants,Diamond:()=>Diamond,IconOnly:()=>IconOnly,Pentagon:()=>Pentagon,Square:()=>Square,Triangle:()=>Triangle,UsageExample:()=>UsageExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Primitives/Shape Indicator",component:__webpack_require__("./src/app/components/ui/shape-indicator/ds-shape-indicator.ts").z,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{shape:{control:"select",options:["circle","square","diamond","triangle","pentagon"]},variant:{control:"select",options:["default","brand","success","warning","destructive","blue","light-purple","pink","salmon-orange","orange","lime-green","grey"]},label:{control:"text"}}},Circle={args:{shape:"circle",variant:"brand",label:"Received"}},Square={args:{shape:"square",variant:"destructive",label:"Stage tags"}},Diamond={args:{shape:"diamond",variant:"brand",label:"Contact"}},Triangle={args:{shape:"triangle",variant:"blue",label:"Upcoming"}},Pentagon={args:{shape:"pentagon",variant:"brand",label:"Maintenance"}},AllShapes={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">All Shape Variants (8x8px)</h3>\n          <div style="display: flex; flex-wrap: wrap; gap: 16px; align-items: center;">\n            <ds-shape-indicator shape="circle" variant="brand" label="Received"></ds-shape-indicator>\n            <ds-shape-indicator shape="square" variant="destructive" label="Stage tags"></ds-shape-indicator>\n            <ds-shape-indicator shape="diamond" variant="brand" label="Contact"></ds-shape-indicator>\n            <ds-shape-indicator shape="triangle" variant="blue" label="Upcoming"></ds-shape-indicator>\n            <ds-shape-indicator shape="pentagon" variant="brand" label="Maintenance"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    '})},ColorVariants={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">All Color Variants</h3>\n          <div style="display: flex; flex-wrap: wrap; gap: 16px; align-items: center; max-width: 600px;">\n            <ds-shape-indicator shape="circle" variant="default" label="Default"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="brand" label="Brand"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="success" label="Success"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="warning" label="Warning"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="destructive" label="Destructive"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="blue" label="Blue"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="light-purple" label="Light Purple"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="pink" label="Pink"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="salmon-orange" label="Salmon Orange"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="orange" label="Orange"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="lime-green" label="Lime Green"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="grey" label="Grey"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    '})},IconOnly={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Icons Only</h3>\n          <div style="display: flex; flex-wrap: wrap; gap: 8px; align-items: center;">\n            <ds-shape-indicator shape="circle" variant="brand"></ds-shape-indicator>\n            <ds-shape-indicator shape="square" variant="destructive"></ds-shape-indicator>\n            <ds-shape-indicator shape="diamond" variant="success"></ds-shape-indicator>\n            <ds-shape-indicator shape="triangle" variant="warning"></ds-shape-indicator>\n            <ds-shape-indicator shape="pentagon" variant="blue"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    '})},UsageExample={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Stage Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="circle" variant="brand" label="Received"></ds-shape-indicator>\n            <ds-shape-indicator shape="diamond" variant="brand" label="Contact"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Category Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="diamond" variant="brand" label="Maintenance"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Inspection Status Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="circle" variant="blue" label="Upcoming"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Defect Status Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="triangle" variant="default" label="Not a defect"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    '})},__namedExportsOrder=["Circle","Square","Diamond","Triangle","Pentagon","AllShapes","ColorVariants","IconOnly","UsageExample"];Circle.parameters={...Circle.parameters,docs:{...Circle.parameters?.docs,source:{originalSource:"{\n  args: {\n    shape: 'circle',\n    variant: 'brand',\n    label: 'Received'\n  }\n}",...Circle.parameters?.docs?.source}}},Square.parameters={...Square.parameters,docs:{...Square.parameters?.docs,source:{originalSource:"{\n  args: {\n    shape: 'square',\n    variant: 'destructive',\n    label: 'Stage tags'\n  }\n}",...Square.parameters?.docs?.source}}},Diamond.parameters={...Diamond.parameters,docs:{...Diamond.parameters?.docs,source:{originalSource:"{\n  args: {\n    shape: 'diamond',\n    variant: 'brand',\n    label: 'Contact'\n  }\n}",...Diamond.parameters?.docs?.source}}},Triangle.parameters={...Triangle.parameters,docs:{...Triangle.parameters?.docs,source:{originalSource:"{\n  args: {\n    shape: 'triangle',\n    variant: 'blue',\n    label: 'Upcoming'\n  }\n}",...Triangle.parameters?.docs?.source}}},Pentagon.parameters={...Pentagon.parameters,docs:{...Pentagon.parameters?.docs,source:{originalSource:"{\n  args: {\n    shape: 'pentagon',\n    variant: 'brand',\n    label: 'Maintenance'\n  }\n}",...Pentagon.parameters?.docs?.source}}},AllShapes.parameters={...AllShapes.parameters,docs:{...AllShapes.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">All Shape Variants (8x8px)</h3>\n          <div style="display: flex; flex-wrap: wrap; gap: 16px; align-items: center;">\n            <ds-shape-indicator shape="circle" variant="brand" label="Received"></ds-shape-indicator>\n            <ds-shape-indicator shape="square" variant="destructive" label="Stage tags"></ds-shape-indicator>\n            <ds-shape-indicator shape="diamond" variant="brand" label="Contact"></ds-shape-indicator>\n            <ds-shape-indicator shape="triangle" variant="blue" label="Upcoming"></ds-shape-indicator>\n            <ds-shape-indicator shape="pentagon" variant="brand" label="Maintenance"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}',...AllShapes.parameters?.docs?.source}}},ColorVariants.parameters={...ColorVariants.parameters,docs:{...ColorVariants.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">All Color Variants</h3>\n          <div style="display: flex; flex-wrap: wrap; gap: 16px; align-items: center; max-width: 600px;">\n            <ds-shape-indicator shape="circle" variant="default" label="Default"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="brand" label="Brand"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="success" label="Success"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="warning" label="Warning"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="destructive" label="Destructive"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="blue" label="Blue"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="light-purple" label="Light Purple"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="pink" label="Pink"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="salmon-orange" label="Salmon Orange"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="orange" label="Orange"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="lime-green" label="Lime Green"></ds-shape-indicator>\n            <ds-shape-indicator shape="circle" variant="grey" label="Grey"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}',...ColorVariants.parameters?.docs?.source}}},IconOnly.parameters={...IconOnly.parameters,docs:{...IconOnly.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Icons Only</h3>\n          <div style="display: flex; flex-wrap: wrap; gap: 8px; align-items: center;">\n            <ds-shape-indicator shape="circle" variant="brand"></ds-shape-indicator>\n            <ds-shape-indicator shape="square" variant="destructive"></ds-shape-indicator>\n            <ds-shape-indicator shape="diamond" variant="success"></ds-shape-indicator>\n            <ds-shape-indicator shape="triangle" variant="warning"></ds-shape-indicator>\n            <ds-shape-indicator shape="pentagon" variant="blue"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}',...IconOnly.parameters?.docs?.source}}},UsageExample.parameters={...UsageExample.parameters,docs:{...UsageExample.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px; align-items: flex-start;">\n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Stage Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="circle" variant="brand" label="Received"></ds-shape-indicator>\n            <ds-shape-indicator shape="diamond" variant="brand" label="Contact"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Category Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="diamond" variant="brand" label="Maintenance"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Inspection Status Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="circle" variant="blue" label="Upcoming"></ds-shape-indicator>\n          </div>\n        </div>\n        \n        <div>\n          <h3 style="margin: 0 0 8px 0; font-size: 14px; font-weight: 600;">Defect Status Tags</h3>\n          <div style="display: flex; flex-direction: column; gap: 8px; align-items: flex-start;">\n            <ds-shape-indicator shape="triangle" variant="default" label="Not a defect"></ds-shape-indicator>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}',...UsageExample.parameters?.docs?.source}}}},"./src/app/components/ui/shape-indicator/ds-shape-indicator.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>DsShapeIndicatorComponent});var tslib__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_ds_shape_indicator_css_ngResource__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/app/components/ui/shape-indicator/ds-shape-indicator.css?ngResource"),_ds_shape_indicator_css_ngResource__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_ds_shape_indicator_css_ngResource__WEBPACK_IMPORTED_MODULE_0__),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/resource.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module.mjs");let DsShapeIndicatorComponent=class DsShapeIndicatorComponent{shape=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)("circle");variant=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)("default");label=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.input)();hasContent=(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.EW)(()=>!1);containerClasses=(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.EW)(()=>{const classes=["shape-indicator"];return classes.push(`shape-indicator--${this.variant()}`),classes.join(" ")});currentColor=(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.EW)(()=>({default:"var(--background-color-interactive-default)",brand:"var(--background-color-interactive-brand)",success:"var(--color-success-base)",warning:"var(--color-warning-base)",destructive:"var(--color-destructive-base)",blue:"var(--color-blue-base)","light-purple":"var(--color-light-purple-base)",pink:"var(--color-pink-base)","salmon-orange":"var(--color-salmon-orange-base)",orange:"var(--color-orange-base)","lime-green":"var(--color-lime-green-base)",grey:"var(--color-grey-base)"}[this.variant()]));static propDecorators={shape:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.pde,args:[{isSignal:!0,alias:"shape",required:!1,transform:void 0}]}],variant:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.pde,args:[{isSignal:!0,alias:"variant",required:!1,transform:void 0}]}],label:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.pde,args:[{isSignal:!0,alias:"label",required:!1,transform:void 0}]}]}};DsShapeIndicatorComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_4__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.uAl)({selector:"ds-shape-indicator",standalone:!0,imports:[_angular_common__WEBPACK_IMPORTED_MODULE_5__.MD],encapsulation:_angular_core__WEBPACK_IMPORTED_MODULE_3__.gXe.ShadowDom,template:'\n    <div [class]="containerClasses()">\n      <svg width="8" height="8" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        @switch (shape()) {\n          @case (\'circle\') {\n            \x3c!-- Circle: centered in 16x16 --\x3e\n            <path d="M0.887207 8C0.887207 3.85786 4.24507 0.5 8.38721 0.5C12.5293 0.5 15.8872 3.85786 15.8872 8C15.8872 12.1421 12.5293 15.5 8.38721 15.5C4.24507 15.5 0.887207 12.1421 0.887207 8Z" [attr.fill]="currentColor()" />\n          }\n          @case (\'square\') {\n            \x3c!-- Square: centered in 16x16 --\x3e\n            <path d="M0.887207 5.5C0.887207 2.73858 3.12578 0.5 5.88721 0.5H10.8872C13.6486 0.5 15.8872 2.73858 15.8872 5.5V10.5C15.8872 13.2614 13.6486 15.5 10.8872 15.5H5.88721C3.12578 15.5 0.887207 13.2614 0.887207 10.5V5.5Z" [attr.fill]="currentColor()" />\n          }\n          @case (\'diamond\') {\n            \x3c!-- Diamond: adjusted to fit 16x16 from original 17x16 --\x3e\n            <path d="M0.85777 10.3431C-0.436314 9.04906 -0.436314 6.95094 0.85777 5.65685L5.54406 0.970563C6.83814 -0.323521 8.93627 -0.323521 10.2304 0.970563L14.9166 5.65685C16.2107 6.95094 16.2107 9.04906 14.9166 10.3431L10.2304 15.0294C8.93627 16.3235 6.83814 16.3235 5.54406 15.0294L0.85777 10.3431Z" [attr.fill]="currentColor()" />\n          }\n          @case (\'triangle\') {\n            \x3c!-- Triangle: adjusted to fit 16x16 from original 17x16 --\x3e\n            <path d="M6.33574 1.4375C7.02528 0.1875 8.74913 0.1875 9.43867 1.4375L15.6445 12.6875C16.3341 13.9375 15.4721 15.5 14.0931 15.5H1.68135C0.302277 15.5 -0.559647 13.9375 0.129892 12.6875L6.33574 1.4375Z" [attr.fill]="currentColor()" />\n          }\n          @case (\'pentagon\') {\n            \x3c!-- Pentagon: adjusted to fit 16x16 from original 17x17 --\x3e\n            <path d="M6.59136 0.436532C7.36405 -0.145511 8.41036 -0.145511 9.18306 0.436533L14.9783 4.80186C15.751 5.3839 16.0743 6.4156 15.7792 7.35737L13.5656 14.4206C13.2704 15.3624 12.424 16 11.4688 16H4.30556C3.35046 16 2.50398 15.3624 2.20884 14.4206L-0.00474 7.35736C-0.299884 6.4156 0.023444 5.3839 0.796144 4.80186L6.59136 0.436532Z" [attr.fill]="currentColor()" />\n          }\n        }\n      </svg>\n      \n      @if (label()) {\n        <span class="shape-indicator__label">{{ label() }}</span>\n      } @else if (hasContent()) {\n        <span class="shape-indicator__label">\n          <ng-content></ng-content>\n        </span>\n      }\n    </div>\n  ',styles:[_ds_shape_indicator_css_ngResource__WEBPACK_IMPORTED_MODULE_0___default()]})],DsShapeIndicatorComponent)}}]);