.ds-input {
  @apply tw-relative tw-inline-flex tw-w-full;
  max-width: 480px;
  outline: none;
  cursor: text;
  
  /* Base styles */
  @apply tw-h-8;
  @apply tw-px-2;
  @apply tw-rounded-md tw-border tw-transition-all tw-duration-200 tw-ease-in-out;
  @apply tw-items-center;
  
  /* Ensure border is rendered inside Shadow DOM */
  border-style: solid;
  border-width: 1px;
  
  /* Base colors */
  background-color: var(--color-background-neutral-primary);
  border-color: var(--border-color-default);
  
  /* Box sizing to match select */
  box-sizing: border-box;
  
  /* Prevent layout shifts */
  min-height: 32px;
  max-height: 32px;
}

.ds-input:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary-hover);
}

.ds-input:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-brand-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary);
}

.ds-input--disabled {
  background-color: var(--color-background-disabled);
  border-color: var(--border-color-default);
  cursor: not-allowed !important;
  opacity: 0.6;
}

.ds-input--readonly {
  background-color: var(--color-background-container);
  border-color: var(--border-color-default);
  cursor: pointer !important;
}

/* Variant styles */
.ds-input--error {
  background-color: var(--color-background-neutral-primary);
  border-color: var(--color-destructive-base);
}

.ds-input--error:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary-hover);
}

.ds-input--error:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-destructive-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--error:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary);
}

.ds-input--warning {
  background-color: var(--color-background-neutral-primary);
  border-color: var(--color-warning-base);
}

.ds-input--warning:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary-hover);
}

.ds-input--warning:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-warning-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--warning:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary);
}

.ds-input--success {
  background-color: var(--color-background-neutral-primary);
  border-color: var(--color-success-base);
}

.ds-input--success:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary-hover);
}

.ds-input--success:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-success-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--success:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly):not(.ds-input--ghost) {
  background-color: var(--color-background-neutral-primary);
}

/* Ghost variant */
.ds-input--ghost {
  border-color: transparent;
  max-width: none; /* Allow ghost inputs to fill container without 480px constraint */
  display: flex; /* Use flex instead of inline-flex to prevent layout shift on focus */
  min-height: 32px;
  max-height: 32px;
}

.ds-input--ghost:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--border-color-default);
}

.ds-input--ghost:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-brand-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--ghost:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-brand-base);
}

/* Ghost variant with error */
.ds-input--ghost.ds-input--error {
  border-color: transparent;
}

.ds-input--ghost.ds-input--error:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-destructive-base);
}

.ds-input--ghost.ds-input--error:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-destructive-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--ghost.ds-input--error:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-destructive-base);
}

/* Ghost variant with warning */
.ds-input--ghost.ds-input--warning {
  border-color: transparent;
}

.ds-input--ghost.ds-input--warning:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-warning-base);
}

.ds-input--ghost.ds-input--warning:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-warning-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--ghost.ds-input--warning:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-warning-base);
}

/* Ghost variant with success */
.ds-input--ghost.ds-input--success {
  border-color: transparent;
}

.ds-input--ghost.ds-input--success:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-success-base);
}

.ds-input--ghost.ds-input--success:focus-within {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
  border-color: var(--color-success-base);
  transition: outline 0s, border-color 200ms ease-in-out, background-color 200ms ease-in-out;
}

.ds-input--ghost.ds-input--success:focus-within:hover:not(.ds-input--disabled):not(.ds-input--readonly) {
  border-color: var(--color-success-base);
}

/* Input field */
.ds-input__field {
  @apply tw-flex-1 tw-bg-transparent tw-border-0 tw-outline-none;
  @apply tw-placeholder-opacity-60;
  
  font-family: inherit;
  color: var(--text-color-default-primary);
  line-height: 1 !important;
  min-height: 0;
  height: 100%;
  width: 100%;
  flex-shrink: 1;
  flex-grow: 1;
  flex-basis: 0%;
}

.ds-input__field:focus {
  outline: none;
}

.ds-input__field:focus-visible {
  outline: none;
}

.ds-input__field::placeholder {
  color: var(--text-color-default-tertiary);
  opacity: 0.6;
}

.ds-input__field:disabled {
  color: var(--text-color-disabled);
  cursor: not-allowed;
}

.ds-input__field:disabled::placeholder {
  color: var(--text-color-disabled);
}

.ds-input__field:read-only {
  cursor: pointer;
}

/* Hide number input spinners */
.ds-input__field[type='number']::-webkit-inner-spin-button,
.ds-input__field[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.ds-input__field[type='number'] {
  -moz-appearance: textfield;
  appearance: textfield;
}

/* Right text alignment for financial numbers */
.ds-input__field--align-right {
  text-align: right;
}

.ds-input__field--align-center {
  text-align: center;
}

/* Error state text color */
.ds-input--error .ds-input__field {
  color: var(--color-destructive-strong);
}

.ds-input--error .ds-input__field::placeholder {
  color: var(--color-destructive-base);
  opacity: 0.7;
}

/* Warning state text color */
.ds-input--warning .ds-input__field {
  color: var(--color-warning-strong);
}

.ds-input--warning .ds-input__field::placeholder {
  color: var(--color-warning-base);
  opacity: 0.7;
}

/* Success state text color */
.ds-input--success .ds-input__field {
  color: var(--color-success-strong);
}

.ds-input--success .ds-input__field::placeholder {
  color: var(--color-success-base);
  opacity: 0.7;
}

/* Icon styles */
.ds-input__icon {
  @apply tw-absolute tw-pointer-events-none;
  color: var(--text-color-default-tertiary);
}

.ds-input__icon--leading {
  left: 8px;
}

.ds-input__icon--trailing {
  right: 8px;
}

/* Prefix and suffix styles */
.ds-input__prefix,
.ds-input__suffix {
  @apply tw-flex-shrink-0 tw-pointer-events-none;
  color: var(--text-color-default-tertiary);
  user-select: none;
  white-space: nowrap;
  transform: translateY(0.5px);
}

.ds-input__prefix {
  padding-right: 4px;
}

.ds-input__suffix {
  padding-left: 4px;
}

/* Disabled state for prefix/suffix */
.ds-input--disabled .ds-input__prefix,
.ds-input--disabled .ds-input__suffix {
  color: var(--text-color-disabled);
  opacity: 0.6;
}

/* Clear button */
.ds-input__clear {
  @apply tw-absolute tw-p-0 tw-bg-transparent tw-border-0;
  @apply tw-cursor-pointer tw-rounded-sm tw-outline-none;
  @apply tw-transition-colors tw-duration-200 tw-ease-in-out;
  @apply tw-flex tw-items-center tw-justify-center;
  right: 8px;
  width: 18px;
  height: 18px;
  
  color: var(--text-color-default-tertiary);
}

.ds-input__clear:hover {
  color: var(--text-color-default-primary);
  background-color: var(--color-background-container-hover);
}

.ds-input__clear:focus-visible {
  outline: 2px solid var(--outline-color-default);
  outline-offset: 0;
}

/* Icon spacing */
.ds-input--with-leading-icon .ds-input__field {
  padding-left: 20px;
}

.ds-input--with-trailing-icon .ds-input__field {
  padding-right: 20px;
}

/* Right-aligned field with suffix - reduce right padding for closer positioning */
.ds-input--with-trailing-icon .ds-input__field--align-right {
  padding-right: 0px;
}

/* Left-aligned field with suffix - reduce right padding since suffix is in flex layout */
.ds-input--with-trailing-icon .ds-input__field--align-left {
  padding-right: 4px;
}

/* Autofill styles */
.ds-input__field[data-autofill] {
  background-color: var(--color-background-container) !important;
  -webkit-box-shadow: 0 0 0 1000px var(--color-background-container) inset !important;
  -webkit-text-fill-color: var(--text-color-default-primary) !important;
}
